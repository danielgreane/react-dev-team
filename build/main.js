(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./app/scripts/main.js":[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var App = require('./components/App.js');
var actions = require('./actions.js');
var flux = require('flux-react');

flux.debug();
React.render(React.createElement(App, null), document.body);
},{"./actions.js":"c:\\projects\\react\\app\\scripts\\actions.js","./components/App.js":"c:\\projects\\react\\app\\scripts\\components\\App.js","flux-react":"flux-react","react":"react"}],"c:\\projects\\react\\app\\data\\repos\\facebook\\flux.js":[function(require,module,exports){
module.exports = {
  "id": 22046023,
  "name": "flux",
  "full_name": "facebook/flux",
  "owner": {
    "login": "facebook",
    "id": 69631,
    "avatar_url": "https://avatars.githubusercontent.com/u/69631?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/facebook",
    "html_url": "https://github.com/facebook",
    "followers_url": "https://api.github.com/users/facebook/followers",
    "following_url": "https://api.github.com/users/facebook/following{/other_user}",
    "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/facebook/subscriptions",
    "organizations_url": "https://api.github.com/users/facebook/orgs",
    "repos_url": "https://api.github.com/users/facebook/repos",
    "events_url": "https://api.github.com/users/facebook/events{/privacy}",
    "received_events_url": "https://api.github.com/users/facebook/received_events",
    "type": "Organization",
    "site_admin": false
  },
  "private": false,
  "html_url": "https://github.com/facebook/flux",
  "description": "Application Architecture for Building User Interfaces",
  "fork": false,
  "url": "https://api.github.com/repos/facebook/flux",
  "forks_url": "https://api.github.com/repos/facebook/flux/forks",
  "keys_url": "https://api.github.com/repos/facebook/flux/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/facebook/flux/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/facebook/flux/teams",
  "hooks_url": "https://api.github.com/repos/facebook/flux/hooks",
  "issue_events_url": "https://api.github.com/repos/facebook/flux/issues/events{/number}",
  "events_url": "https://api.github.com/repos/facebook/flux/events",
  "assignees_url": "https://api.github.com/repos/facebook/flux/assignees{/user}",
  "branches_url": "https://api.github.com/repos/facebook/flux/branches{/branch}",
  "tags_url": "https://api.github.com/repos/facebook/flux/tags",
  "blobs_url": "https://api.github.com/repos/facebook/flux/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/facebook/flux/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/facebook/flux/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/facebook/flux/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/facebook/flux/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/facebook/flux/languages",
  "stargazers_url": "https://api.github.com/repos/facebook/flux/stargazers",
  "contributors_url": "https://api.github.com/repos/facebook/flux/contributors",
  "subscribers_url": "https://api.github.com/repos/facebook/flux/subscribers",
  "subscription_url": "https://api.github.com/repos/facebook/flux/subscription",
  "commits_url": "https://api.github.com/repos/facebook/flux/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/facebook/flux/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/facebook/flux/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/facebook/flux/issues/comments/{number}",
  "contents_url": "https://api.github.com/repos/facebook/flux/contents/{+path}",
  "compare_url": "https://api.github.com/repos/facebook/flux/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/facebook/flux/merges",
  "archive_url": "https://api.github.com/repos/facebook/flux/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/facebook/flux/downloads",
  "issues_url": "https://api.github.com/repos/facebook/flux/issues{/number}",
  "pulls_url": "https://api.github.com/repos/facebook/flux/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/facebook/flux/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/facebook/flux/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/facebook/flux/labels{/name}",
  "releases_url": "https://api.github.com/repos/facebook/flux/releases{/id}",
  "created_at": "2014-07-20T23:33:08Z",
  "updated_at": "2015-02-07T14:48:57Z",
  "pushed_at": "2015-02-04T06:14:05Z",
  "git_url": "git://github.com/facebook/flux.git",
  "ssh_url": "git@github.com:facebook/flux.git",
  "clone_url": "https://github.com/facebook/flux.git",
  "svn_url": "https://github.com/facebook/flux",
  "homepage": "http://facebook.github.io/flux/",
  "size": 2049,
  "stargazers_count": 4295,
  "watchers_count": 4295,
  "language": "JavaScript",
  "has_issues": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": true,
  "forks_count": 524,
  "mirror_url": null,
  "open_issues_count": 30,
  "forks": 524,
  "open_issues": 30,
  "watchers": 4295,
  "default_branch": "master",
  "organization": {
    "login": "facebook",
    "id": 69631,
    "avatar_url": "https://avatars.githubusercontent.com/u/69631?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/facebook",
    "html_url": "https://github.com/facebook",
    "followers_url": "https://api.github.com/users/facebook/followers",
    "following_url": "https://api.github.com/users/facebook/following{/other_user}",
    "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/facebook/subscriptions",
    "organizations_url": "https://api.github.com/users/facebook/orgs",
    "repos_url": "https://api.github.com/users/facebook/repos",
    "events_url": "https://api.github.com/users/facebook/events{/privacy}",
    "received_events_url": "https://api.github.com/users/facebook/received_events",
    "type": "Organization",
    "site_admin": false
  },
  "network_count": 524,
  "subscribers_count": 279
}
},{}],"c:\\projects\\react\\app\\data\\repos\\facebook\\flux\\commits.js":[function(require,module,exports){
module.exports = [
  {
    "sha": "4ce86af8008bbf32102c5b144455445cf42d37d1",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:10:37Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:10:37Z"
      },
      "message": "Merge pull request #147 from yang-wei/update-TodoList.md\n\nAdd missing closed tag in TodoList.md",
      "tree": {
        "sha": "fdcd339b62a0ab9ade2dc25ea067ee454d5cd1a6",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/fdcd339b62a0ab9ade2dc25ea067ee454d5cd1a6"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/4ce86af8008bbf32102c5b144455445cf42d37d1",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/4ce86af8008bbf32102c5b144455445cf42d37d1",
    "html_url": "https://github.com/facebook/flux/commit/4ce86af8008bbf32102c5b144455445cf42d37d1",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/4ce86af8008bbf32102c5b144455445cf42d37d1/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19defb507caae80c8f63c4874c0f35cf46b8235e",
        "url": "https://api.github.com/repos/facebook/flux/commits/19defb507caae80c8f63c4874c0f35cf46b8235e",
        "html_url": "https://github.com/facebook/flux/commit/19defb507caae80c8f63c4874c0f35cf46b8235e"
      },
      {
        "sha": "1277b330ac55eb22fe9c65874a675c4c09a78af1",
        "url": "https://api.github.com/repos/facebook/flux/commits/1277b330ac55eb22fe9c65874a675c4c09a78af1",
        "html_url": "https://github.com/facebook/flux/commit/1277b330ac55eb22fe9c65874a675c4c09a78af1"
      }
    ]
  },
  {
    "sha": "19defb507caae80c8f63c4874c0f35cf46b8235e",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:09:20Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:09:20Z"
      },
      "message": "Merge pull request #145 from tommcgurl/add-link-to-dispatcher-api\n\nLink to dispatcher API from README.",
      "tree": {
        "sha": "01d18cd62bc65a1fdbc3bb22f3b986780ee6f1a7",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/01d18cd62bc65a1fdbc3bb22f3b986780ee6f1a7"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/19defb507caae80c8f63c4874c0f35cf46b8235e",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/19defb507caae80c8f63c4874c0f35cf46b8235e",
    "html_url": "https://github.com/facebook/flux/commit/19defb507caae80c8f63c4874c0f35cf46b8235e",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/19defb507caae80c8f63c4874c0f35cf46b8235e/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "721326d74dc5408dbd24d6a513b1c02f3955b5f5",
        "url": "https://api.github.com/repos/facebook/flux/commits/721326d74dc5408dbd24d6a513b1c02f3955b5f5",
        "html_url": "https://github.com/facebook/flux/commit/721326d74dc5408dbd24d6a513b1c02f3955b5f5"
      },
      {
        "sha": "1b8ab0ce983b4e8cd54fd0481af4111a2a962767",
        "url": "https://api.github.com/repos/facebook/flux/commits/1b8ab0ce983b4e8cd54fd0481af4111a2a962767",
        "html_url": "https://github.com/facebook/flux/commit/1b8ab0ce983b4e8cd54fd0481af4111a2a962767"
      }
    ]
  },
  {
    "sha": "721326d74dc5408dbd24d6a513b1c02f3955b5f5",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:03:08Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:03:08Z"
      },
      "message": "Merge pull request #142 from JoelOtter/patch-1\n\nUpdate example to use object-assign, fix typo",
      "tree": {
        "sha": "0714a56cf1bb324b511cbb679b739dc20c45c244",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/0714a56cf1bb324b511cbb679b739dc20c45c244"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/721326d74dc5408dbd24d6a513b1c02f3955b5f5",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/721326d74dc5408dbd24d6a513b1c02f3955b5f5",
    "html_url": "https://github.com/facebook/flux/commit/721326d74dc5408dbd24d6a513b1c02f3955b5f5",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/721326d74dc5408dbd24d6a513b1c02f3955b5f5/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85237a3bc65073a54cdb5b5001a3b0855f557ffa",
        "url": "https://api.github.com/repos/facebook/flux/commits/85237a3bc65073a54cdb5b5001a3b0855f557ffa",
        "html_url": "https://github.com/facebook/flux/commit/85237a3bc65073a54cdb5b5001a3b0855f557ffa"
      },
      {
        "sha": "1916fd7b8869cb390e05a6a442efbba3c3f7b88a",
        "url": "https://api.github.com/repos/facebook/flux/commits/1916fd7b8869cb390e05a6a442efbba3c3f7b88a",
        "html_url": "https://github.com/facebook/flux/commit/1916fd7b8869cb390e05a6a442efbba3c3f7b88a"
      }
    ]
  },
  {
    "sha": "85237a3bc65073a54cdb5b5001a3b0855f557ffa",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:00:21Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-04T06:00:21Z"
      },
      "message": "Merge pull request #140 from sebslomski/patch-1\n\nReplaced ' with \" to stay consistent",
      "tree": {
        "sha": "d099b4e13876571986d42d498822928a1c5231ca",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/d099b4e13876571986d42d498822928a1c5231ca"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/85237a3bc65073a54cdb5b5001a3b0855f557ffa",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/85237a3bc65073a54cdb5b5001a3b0855f557ffa",
    "html_url": "https://github.com/facebook/flux/commit/85237a3bc65073a54cdb5b5001a3b0855f557ffa",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/85237a3bc65073a54cdb5b5001a3b0855f557ffa/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b58fe773d243806d45ca81ee201cb6265ce73109",
        "url": "https://api.github.com/repos/facebook/flux/commits/b58fe773d243806d45ca81ee201cb6265ce73109",
        "html_url": "https://github.com/facebook/flux/commit/b58fe773d243806d45ca81ee201cb6265ce73109"
      },
      {
        "sha": "9f2b7338301565f5a50b0de58aecfed88eb9b76c",
        "url": "https://api.github.com/repos/facebook/flux/commits/9f2b7338301565f5a50b0de58aecfed88eb9b76c",
        "html_url": "https://github.com/facebook/flux/commit/9f2b7338301565f5a50b0de58aecfed88eb9b76c"
      }
    ]
  },
  {
    "sha": "1277b330ac55eb22fe9c65874a675c4c09a78af1",
    "commit": {
      "author": {
        "name": "yang-wei",
        "email": "yangweilim21@gmail.com",
        "date": "2015-02-04T04:04:17Z"
      },
      "committer": {
        "name": "yang-wei",
        "email": "yangweilim21@gmail.com",
        "date": "2015-02-04T04:04:17Z"
      },
      "message": "Add missing closed tag in TodoList.md",
      "tree": {
        "sha": "d911966ad0e0f903c7961b69a31e5b62e6a51fd5",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/d911966ad0e0f903c7961b69a31e5b62e6a51fd5"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/1277b330ac55eb22fe9c65874a675c4c09a78af1",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/1277b330ac55eb22fe9c65874a675c4c09a78af1",
    "html_url": "https://github.com/facebook/flux/commit/1277b330ac55eb22fe9c65874a675c4c09a78af1",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/1277b330ac55eb22fe9c65874a675c4c09a78af1/comments",
    "author": {
      "login": "yang-wei",
      "id": 5494874,
      "avatar_url": "https://avatars.githubusercontent.com/u/5494874?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-wei",
      "html_url": "https://github.com/yang-wei",
      "followers_url": "https://api.github.com/users/yang-wei/followers",
      "following_url": "https://api.github.com/users/yang-wei/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-wei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-wei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-wei/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-wei/orgs",
      "repos_url": "https://api.github.com/users/yang-wei/repos",
      "events_url": "https://api.github.com/users/yang-wei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-wei/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "yang-wei",
      "id": 5494874,
      "avatar_url": "https://avatars.githubusercontent.com/u/5494874?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yang-wei",
      "html_url": "https://github.com/yang-wei",
      "followers_url": "https://api.github.com/users/yang-wei/followers",
      "following_url": "https://api.github.com/users/yang-wei/following{/other_user}",
      "gists_url": "https://api.github.com/users/yang-wei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yang-wei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yang-wei/subscriptions",
      "organizations_url": "https://api.github.com/users/yang-wei/orgs",
      "repos_url": "https://api.github.com/users/yang-wei/repos",
      "events_url": "https://api.github.com/users/yang-wei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yang-wei/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b58fe773d243806d45ca81ee201cb6265ce73109",
        "url": "https://api.github.com/repos/facebook/flux/commits/b58fe773d243806d45ca81ee201cb6265ce73109",
        "html_url": "https://github.com/facebook/flux/commit/b58fe773d243806d45ca81ee201cb6265ce73109"
      }
    ]
  },
  {
    "sha": "1b8ab0ce983b4e8cd54fd0481af4111a2a962767",
    "commit": {
      "author": {
        "name": "Tom McGurl",
        "email": "acousticlink@gmail.com",
        "date": "2015-02-03T02:39:02Z"
      },
      "committer": {
        "name": "Tom McGurl",
        "email": "acousticlink@gmail.com",
        "date": "2015-02-03T02:39:02Z"
      },
      "message": "Link to dispatcher API from README.\n\nAdded a quick link to the dispatcher API and examples on the flux docs,\nfrom the dispatcher section of the README.md. This will make it easy\nfor those interested to see how the dispatcher can be used.",
      "tree": {
        "sha": "826cf961e3f233bf89fa8bcf62bb197aac4541a6",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/826cf961e3f233bf89fa8bcf62bb197aac4541a6"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/1b8ab0ce983b4e8cd54fd0481af4111a2a962767",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/1b8ab0ce983b4e8cd54fd0481af4111a2a962767",
    "html_url": "https://github.com/facebook/flux/commit/1b8ab0ce983b4e8cd54fd0481af4111a2a962767",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/1b8ab0ce983b4e8cd54fd0481af4111a2a962767/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b58fe773d243806d45ca81ee201cb6265ce73109",
        "url": "https://api.github.com/repos/facebook/flux/commits/b58fe773d243806d45ca81ee201cb6265ce73109",
        "html_url": "https://github.com/facebook/flux/commit/b58fe773d243806d45ca81ee201cb6265ce73109"
      }
    ]
  },
  {
    "sha": "b58fe773d243806d45ca81ee201cb6265ce73109",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-02T17:20:27Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-02-02T17:20:27Z"
      },
      "message": "[Flux Website] add .md extension to new docs",
      "tree": {
        "sha": "30a7b73e10a1b3287e62d9dd85390e0c10daf1f1",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/30a7b73e10a1b3287e62d9dd85390e0c10daf1f1"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/b58fe773d243806d45ca81ee201cb6265ce73109",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/b58fe773d243806d45ca81ee201cb6265ce73109",
    "html_url": "https://github.com/facebook/flux/commit/b58fe773d243806d45ca81ee201cb6265ce73109",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/b58fe773d243806d45ca81ee201cb6265ce73109/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
        "url": "https://api.github.com/repos/facebook/flux/commits/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
        "html_url": "https://github.com/facebook/flux/commit/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16"
      }
    ]
  },
  {
    "sha": "1916fd7b8869cb390e05a6a442efbba3c3f7b88a",
    "commit": {
      "author": {
        "name": "Joel Auterson",
        "email": "joel.auterson@googlemail.com",
        "date": "2015-02-01T15:18:55Z"
      },
      "committer": {
        "name": "Joel Auterson",
        "email": "joel.auterson@googlemail.com",
        "date": "2015-02-01T15:18:55Z"
      },
      "message": "Update example to use object-assign, fix typo",
      "tree": {
        "sha": "4a420e2689b6febd0ea7fac59ae643f711757d88",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/4a420e2689b6febd0ea7fac59ae643f711757d88"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/1916fd7b8869cb390e05a6a442efbba3c3f7b88a",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/1916fd7b8869cb390e05a6a442efbba3c3f7b88a",
    "html_url": "https://github.com/facebook/flux/commit/1916fd7b8869cb390e05a6a442efbba3c3f7b88a",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/1916fd7b8869cb390e05a6a442efbba3c3f7b88a/comments",
    "author": {
      "login": "JoelOtter",
      "id": 2765356,
      "avatar_url": "https://avatars.githubusercontent.com/u/2765356?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoelOtter",
      "html_url": "https://github.com/JoelOtter",
      "followers_url": "https://api.github.com/users/JoelOtter/followers",
      "following_url": "https://api.github.com/users/JoelOtter/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoelOtter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoelOtter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoelOtter/subscriptions",
      "organizations_url": "https://api.github.com/users/JoelOtter/orgs",
      "repos_url": "https://api.github.com/users/JoelOtter/repos",
      "events_url": "https://api.github.com/users/JoelOtter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoelOtter/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JoelOtter",
      "id": 2765356,
      "avatar_url": "https://avatars.githubusercontent.com/u/2765356?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoelOtter",
      "html_url": "https://github.com/JoelOtter",
      "followers_url": "https://api.github.com/users/JoelOtter/followers",
      "following_url": "https://api.github.com/users/JoelOtter/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoelOtter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoelOtter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoelOtter/subscriptions",
      "organizations_url": "https://api.github.com/users/JoelOtter/orgs",
      "repos_url": "https://api.github.com/users/JoelOtter/repos",
      "events_url": "https://api.github.com/users/JoelOtter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoelOtter/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
        "url": "https://api.github.com/repos/facebook/flux/commits/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
        "html_url": "https://github.com/facebook/flux/commit/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16"
      }
    ]
  },
  {
    "sha": "9f2b7338301565f5a50b0de58aecfed88eb9b76c",
    "commit": {
      "author": {
        "name": "Sebastian Slomski",
        "email": "me@sebslomski.com",
        "date": "2015-01-31T12:28:43Z"
      },
      "committer": {
        "name": "Sebastian Slomski",
        "email": "me@sebslomski.com",
        "date": "2015-01-31T12:28:43Z"
      },
      "message": "Replaced ' with \" to stay consistent",
      "tree": {
        "sha": "60a473303fdf512bc048c1b4c2c859217a643fb8",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/60a473303fdf512bc048c1b4c2c859217a643fb8"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/9f2b7338301565f5a50b0de58aecfed88eb9b76c",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/9f2b7338301565f5a50b0de58aecfed88eb9b76c",
    "html_url": "https://github.com/facebook/flux/commit/9f2b7338301565f5a50b0de58aecfed88eb9b76c",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/9f2b7338301565f5a50b0de58aecfed88eb9b76c/comments",
    "author": {
      "login": "sebslomski",
      "id": 739310,
      "avatar_url": "https://avatars.githubusercontent.com/u/739310?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebslomski",
      "html_url": "https://github.com/sebslomski",
      "followers_url": "https://api.github.com/users/sebslomski/followers",
      "following_url": "https://api.github.com/users/sebslomski/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebslomski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebslomski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebslomski/subscriptions",
      "organizations_url": "https://api.github.com/users/sebslomski/orgs",
      "repos_url": "https://api.github.com/users/sebslomski/repos",
      "events_url": "https://api.github.com/users/sebslomski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebslomski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sebslomski",
      "id": 739310,
      "avatar_url": "https://avatars.githubusercontent.com/u/739310?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebslomski",
      "html_url": "https://github.com/sebslomski",
      "followers_url": "https://api.github.com/users/sebslomski/followers",
      "following_url": "https://api.github.com/users/sebslomski/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebslomski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebslomski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebslomski/subscriptions",
      "organizations_url": "https://api.github.com/users/sebslomski/orgs",
      "repos_url": "https://api.github.com/users/sebslomski/repos",
      "events_url": "https://api.github.com/users/sebslomski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebslomski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
        "url": "https://api.github.com/repos/facebook/flux/commits/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
        "html_url": "https://github.com/facebook/flux/commit/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16"
      }
    ]
  },
  {
    "sha": "64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-29T23:23:02Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-29T23:23:02Z"
      },
      "message": "[Flux Website] examples and tool page",
      "tree": {
        "sha": "6e853b3e8b1410b15b20188207bcaab45b57b2fb",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/6e853b3e8b1410b15b20188207bcaab45b57b2fb"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
    "html_url": "https://github.com/facebook/flux/commit/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/64c1b2f5ce220c2d5c565cc4f93f3b39c9c25d16/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9314cd721dab8c02a982c1ff947508b04d70d7e3",
        "url": "https://api.github.com/repos/facebook/flux/commits/9314cd721dab8c02a982c1ff947508b04d70d7e3",
        "html_url": "https://github.com/facebook/flux/commit/9314cd721dab8c02a982c1ff947508b04d70d7e3"
      }
    ]
  },
  {
    "sha": "9314cd721dab8c02a982c1ff947508b04d70d7e3",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-25T07:07:40Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-25T07:07:40Z"
      },
      "message": "Merge pull request #136 from banderson/master\n\nMinor cleanup: Removed duplicate test in TodoStore-test",
      "tree": {
        "sha": "d0596ae5e5298a7630dfae7fed3b9f18236ca97d",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/d0596ae5e5298a7630dfae7fed3b9f18236ca97d"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/9314cd721dab8c02a982c1ff947508b04d70d7e3",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/9314cd721dab8c02a982c1ff947508b04d70d7e3",
    "html_url": "https://github.com/facebook/flux/commit/9314cd721dab8c02a982c1ff947508b04d70d7e3",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/9314cd721dab8c02a982c1ff947508b04d70d7e3/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "974e13f9490673c2e5aa3679ab87d598551365aa",
        "url": "https://api.github.com/repos/facebook/flux/commits/974e13f9490673c2e5aa3679ab87d598551365aa",
        "html_url": "https://github.com/facebook/flux/commit/974e13f9490673c2e5aa3679ab87d598551365aa"
      },
      {
        "sha": "f82d175193bba73d7fac8bee4cda394b63742238",
        "url": "https://api.github.com/repos/facebook/flux/commits/f82d175193bba73d7fac8bee4cda394b63742238",
        "html_url": "https://github.com/facebook/flux/commit/f82d175193bba73d7fac8bee4cda394b63742238"
      }
    ]
  },
  {
    "sha": "f82d175193bba73d7fac8bee4cda394b63742238",
    "commit": {
      "author": {
        "name": "Ben Anderson",
        "email": "banderson@constantcontact.com",
        "date": "2015-01-25T06:23:48Z"
      },
      "committer": {
        "name": "Ben Anderson",
        "email": "banderson@constantcontact.com",
        "date": "2015-01-25T06:23:48Z"
      },
      "message": "Removed duplicate test in TodoStore-test\n\nThis test is exactly the same as the one beneath it, with just a minor\nvariance in wording in the title.",
      "tree": {
        "sha": "d0596ae5e5298a7630dfae7fed3b9f18236ca97d",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/d0596ae5e5298a7630dfae7fed3b9f18236ca97d"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/f82d175193bba73d7fac8bee4cda394b63742238",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/f82d175193bba73d7fac8bee4cda394b63742238",
    "html_url": "https://github.com/facebook/flux/commit/f82d175193bba73d7fac8bee4cda394b63742238",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/f82d175193bba73d7fac8bee4cda394b63742238/comments",
    "author": {
      "login": "banderson",
      "id": 30241,
      "avatar_url": "https://avatars.githubusercontent.com/u/30241?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/banderson",
      "html_url": "https://github.com/banderson",
      "followers_url": "https://api.github.com/users/banderson/followers",
      "following_url": "https://api.github.com/users/banderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/banderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/banderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/banderson/subscriptions",
      "organizations_url": "https://api.github.com/users/banderson/orgs",
      "repos_url": "https://api.github.com/users/banderson/repos",
      "events_url": "https://api.github.com/users/banderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/banderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "banderson",
      "id": 30241,
      "avatar_url": "https://avatars.githubusercontent.com/u/30241?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/banderson",
      "html_url": "https://github.com/banderson",
      "followers_url": "https://api.github.com/users/banderson/followers",
      "following_url": "https://api.github.com/users/banderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/banderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/banderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/banderson/subscriptions",
      "organizations_url": "https://api.github.com/users/banderson/orgs",
      "repos_url": "https://api.github.com/users/banderson/repos",
      "events_url": "https://api.github.com/users/banderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/banderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "974e13f9490673c2e5aa3679ab87d598551365aa",
        "url": "https://api.github.com/repos/facebook/flux/commits/974e13f9490673c2e5aa3679ab87d598551365aa",
        "html_url": "https://github.com/facebook/flux/commit/974e13f9490673c2e5aa3679ab87d598551365aa"
      }
    ]
  },
  {
    "sha": "974e13f9490673c2e5aa3679ab87d598551365aa",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-24T19:44:38Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-24T19:44:38Z"
      },
      "message": "Merge pull request #130 from zertosh/prevent-munge\n\nAdd @preventMunge",
      "tree": {
        "sha": "11e489bafb7dc4f80172cf0d865b34fb6034b015",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/11e489bafb7dc4f80172cf0d865b34fb6034b015"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/974e13f9490673c2e5aa3679ab87d598551365aa",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/974e13f9490673c2e5aa3679ab87d598551365aa",
    "html_url": "https://github.com/facebook/flux/commit/974e13f9490673c2e5aa3679ab87d598551365aa",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/974e13f9490673c2e5aa3679ab87d598551365aa/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c94d1d6f8473487efce02a5ecb239fad7c72e82",
        "url": "https://api.github.com/repos/facebook/flux/commits/6c94d1d6f8473487efce02a5ecb239fad7c72e82",
        "html_url": "https://github.com/facebook/flux/commit/6c94d1d6f8473487efce02a5ecb239fad7c72e82"
      },
      {
        "sha": "dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87",
        "url": "https://api.github.com/repos/facebook/flux/commits/dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87",
        "html_url": "https://github.com/facebook/flux/commit/dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87"
      }
    ]
  },
  {
    "sha": "6c94d1d6f8473487efce02a5ecb239fad7c72e82",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-18T07:44:45Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-18T07:44:45Z"
      },
      "message": "[Flux Website] improve styling for clarity and on mobile",
      "tree": {
        "sha": "3833a428b6ec561e75e84757145f703851aef156",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/3833a428b6ec561e75e84757145f703851aef156"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/6c94d1d6f8473487efce02a5ecb239fad7c72e82",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/6c94d1d6f8473487efce02a5ecb239fad7c72e82",
    "html_url": "https://github.com/facebook/flux/commit/6c94d1d6f8473487efce02a5ecb239fad7c72e82",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/6c94d1d6f8473487efce02a5ecb239fad7c72e82/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74846aa9a2c94a895c271a0e7acc7695e057f2bb",
        "url": "https://api.github.com/repos/facebook/flux/commits/74846aa9a2c94a895c271a0e7acc7695e057f2bb",
        "html_url": "https://github.com/facebook/flux/commit/74846aa9a2c94a895c271a0e7acc7695e057f2bb"
      }
    ]
  },
  {
    "sha": "dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87",
    "commit": {
      "author": {
        "name": "Andres Suarez",
        "email": "zertosh@gmail.com",
        "date": "2015-01-17T17:04:29Z"
      },
      "committer": {
        "name": "Andres Suarez",
        "email": "zertosh@gmail.com",
        "date": "2015-01-17T17:04:29Z"
      },
      "message": "Add @preventMunge",
      "tree": {
        "sha": "3146bf3457d4a64a066b8ebf19647a305f6e002f",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/3146bf3457d4a64a066b8ebf19647a305f6e002f"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87",
    "html_url": "https://github.com/facebook/flux/commit/dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/dc6daedcd2a8e3d48cd23ab9d4d4a6804d4b6a87/comments",
    "author": {
      "login": "zertosh",
      "id": 830952,
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "zertosh",
      "id": 830952,
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74846aa9a2c94a895c271a0e7acc7695e057f2bb",
        "url": "https://api.github.com/repos/facebook/flux/commits/74846aa9a2c94a895c271a0e7acc7695e057f2bb",
        "html_url": "https://github.com/facebook/flux/commit/74846aa9a2c94a895c271a0e7acc7695e057f2bb"
      }
    ]
  },
  {
    "sha": "74846aa9a2c94a895c271a0e7acc7695e057f2bb",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-17T06:51:46Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-17T06:51:46Z"
      },
      "message": "[Flux Website] add ImmutableJS to list of complementary open source projects",
      "tree": {
        "sha": "979b9af25cdda3c153380dd183a2707b6b4d12f1",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/979b9af25cdda3c153380dd183a2707b6b4d12f1"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/74846aa9a2c94a895c271a0e7acc7695e057f2bb",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/74846aa9a2c94a895c271a0e7acc7695e057f2bb",
    "html_url": "https://github.com/facebook/flux/commit/74846aa9a2c94a895c271a0e7acc7695e057f2bb",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/74846aa9a2c94a895c271a0e7acc7695e057f2bb/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1eb5fb13d130f2b05db70f4f742a9ee015536c97",
        "url": "https://api.github.com/repos/facebook/flux/commits/1eb5fb13d130f2b05db70f4f742a9ee015536c97",
        "html_url": "https://github.com/facebook/flux/commit/1eb5fb13d130f2b05db70f4f742a9ee015536c97"
      }
    ]
  },
  {
    "sha": "1eb5fb13d130f2b05db70f4f742a9ee015536c97",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-16T23:15:32Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-16T23:15:32Z"
      },
      "message": "[Flux Website] bring Flux-related React blog posts into Flux documentation",
      "tree": {
        "sha": "588bb3379d0d8a2bbd1fb66a48b8ac62625378f9",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/588bb3379d0d8a2bbd1fb66a48b8ac62625378f9"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/1eb5fb13d130f2b05db70f4f742a9ee015536c97",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/1eb5fb13d130f2b05db70f4f742a9ee015536c97",
    "html_url": "https://github.com/facebook/flux/commit/1eb5fb13d130f2b05db70f4f742a9ee015536c97",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/1eb5fb13d130f2b05db70f4f742a9ee015536c97/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67ca832783e68f8a23f1a504f2a6ff746abfde5c",
        "url": "https://api.github.com/repos/facebook/flux/commits/67ca832783e68f8a23f1a504f2a6ff746abfde5c",
        "html_url": "https://github.com/facebook/flux/commit/67ca832783e68f8a23f1a504f2a6ff746abfde5c"
      },
      {
        "sha": "53075ae0f122415b7d798a39bf2cf97ce4c49ac0",
        "url": "https://api.github.com/repos/facebook/flux/commits/53075ae0f122415b7d798a39bf2cf97ce4c49ac0",
        "html_url": "https://github.com/facebook/flux/commit/53075ae0f122415b7d798a39bf2cf97ce4c49ac0"
      }
    ]
  },
  {
    "sha": "53075ae0f122415b7d798a39bf2cf97ce4c49ac0",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-16T21:48:27Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-16T23:12:25Z"
      },
      "message": "[Flux Website] bring Flux-related React blog posts into docs as Guides",
      "tree": {
        "sha": "d8139d5ed395d9286eefbe0c5c6fc8768310c90b",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/d8139d5ed395d9286eefbe0c5c6fc8768310c90b"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/53075ae0f122415b7d798a39bf2cf97ce4c49ac0",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/53075ae0f122415b7d798a39bf2cf97ce4c49ac0",
    "html_url": "https://github.com/facebook/flux/commit/53075ae0f122415b7d798a39bf2cf97ce4c49ac0",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/53075ae0f122415b7d798a39bf2cf97ce4c49ac0/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "481cf32796f22c8f7fe074fe874e0e7d1b2595af",
        "url": "https://api.github.com/repos/facebook/flux/commits/481cf32796f22c8f7fe074fe874e0e7d1b2595af",
        "html_url": "https://github.com/facebook/flux/commit/481cf32796f22c8f7fe074fe874e0e7d1b2595af"
      }
    ]
  },
  {
    "sha": "67ca832783e68f8a23f1a504f2a6ff746abfde5c",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-16T02:54:17Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-16T02:54:17Z"
      },
      "message": "Merge pull request #128 from martco/patch-1\n\nCorrect typo in Overview.md",
      "tree": {
        "sha": "bea3929bc8698156d9004febc61d05d9da87e49b",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/bea3929bc8698156d9004febc61d05d9da87e49b"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/67ca832783e68f8a23f1a504f2a6ff746abfde5c",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/67ca832783e68f8a23f1a504f2a6ff746abfde5c",
    "html_url": "https://github.com/facebook/flux/commit/67ca832783e68f8a23f1a504f2a6ff746abfde5c",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/67ca832783e68f8a23f1a504f2a6ff746abfde5c/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "481cf32796f22c8f7fe074fe874e0e7d1b2595af",
        "url": "https://api.github.com/repos/facebook/flux/commits/481cf32796f22c8f7fe074fe874e0e7d1b2595af",
        "html_url": "https://github.com/facebook/flux/commit/481cf32796f22c8f7fe074fe874e0e7d1b2595af"
      },
      {
        "sha": "e4431198f1bd1dc6149d8affdcd962a9d3b9139d",
        "url": "https://api.github.com/repos/facebook/flux/commits/e4431198f1bd1dc6149d8affdcd962a9d3b9139d",
        "html_url": "https://github.com/facebook/flux/commit/e4431198f1bd1dc6149d8affdcd962a9d3b9139d"
      }
    ]
  },
  {
    "sha": "e4431198f1bd1dc6149d8affdcd962a9d3b9139d",
    "commit": {
      "author": {
        "name": "martco",
        "email": "martco@gmail.com",
        "date": "2015-01-15T07:04:56Z"
      },
      "committer": {
        "name": "martco",
        "email": "martco@gmail.com",
        "date": "2015-01-15T07:04:56Z"
      },
      "message": "Correct typo in Overview.md\n\n\"re-rendering\", not \"re-rending\"",
      "tree": {
        "sha": "bea3929bc8698156d9004febc61d05d9da87e49b",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/bea3929bc8698156d9004febc61d05d9da87e49b"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/e4431198f1bd1dc6149d8affdcd962a9d3b9139d",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/e4431198f1bd1dc6149d8affdcd962a9d3b9139d",
    "html_url": "https://github.com/facebook/flux/commit/e4431198f1bd1dc6149d8affdcd962a9d3b9139d",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/e4431198f1bd1dc6149d8affdcd962a9d3b9139d/comments",
    "author": {
      "login": "martco",
      "id": 420959,
      "avatar_url": "https://avatars.githubusercontent.com/u/420959?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martco",
      "html_url": "https://github.com/martco",
      "followers_url": "https://api.github.com/users/martco/followers",
      "following_url": "https://api.github.com/users/martco/following{/other_user}",
      "gists_url": "https://api.github.com/users/martco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martco/subscriptions",
      "organizations_url": "https://api.github.com/users/martco/orgs",
      "repos_url": "https://api.github.com/users/martco/repos",
      "events_url": "https://api.github.com/users/martco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martco/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martco",
      "id": 420959,
      "avatar_url": "https://avatars.githubusercontent.com/u/420959?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martco",
      "html_url": "https://github.com/martco",
      "followers_url": "https://api.github.com/users/martco/followers",
      "following_url": "https://api.github.com/users/martco/following{/other_user}",
      "gists_url": "https://api.github.com/users/martco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martco/subscriptions",
      "organizations_url": "https://api.github.com/users/martco/orgs",
      "repos_url": "https://api.github.com/users/martco/repos",
      "events_url": "https://api.github.com/users/martco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martco/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "481cf32796f22c8f7fe074fe874e0e7d1b2595af",
        "url": "https://api.github.com/repos/facebook/flux/commits/481cf32796f22c8f7fe074fe874e0e7d1b2595af",
        "html_url": "https://github.com/facebook/flux/commit/481cf32796f22c8f7fe074fe874e0e7d1b2595af"
      }
    ]
  },
  {
    "sha": "481cf32796f22c8f7fe074fe874e0e7d1b2595af",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-14T00:43:36Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-14T00:43:36Z"
      },
      "message": "Merge pull request #125 from joyvuu-dave/master\n\nUpdate inline documentation",
      "tree": {
        "sha": "16df88c9a1cfb9e99265c450e26e87fda15d038f",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/16df88c9a1cfb9e99265c450e26e87fda15d038f"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/481cf32796f22c8f7fe074fe874e0e7d1b2595af",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/481cf32796f22c8f7fe074fe874e0e7d1b2595af",
    "html_url": "https://github.com/facebook/flux/commit/481cf32796f22c8f7fe074fe874e0e7d1b2595af",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/481cf32796f22c8f7fe074fe874e0e7d1b2595af/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "104caf676f2bceb91e584cacb9d5718300f9af93",
        "url": "https://api.github.com/repos/facebook/flux/commits/104caf676f2bceb91e584cacb9d5718300f9af93",
        "html_url": "https://github.com/facebook/flux/commit/104caf676f2bceb91e584cacb9d5718300f9af93"
      },
      {
        "sha": "f677d77f609f62cda402e5e857adbd8e4ef836e9",
        "url": "https://api.github.com/repos/facebook/flux/commits/f677d77f609f62cda402e5e857adbd8e4ef836e9",
        "html_url": "https://github.com/facebook/flux/commit/f677d77f609f62cda402e5e857adbd8e4ef836e9"
      }
    ]
  },
  {
    "sha": "f677d77f609f62cda402e5e857adbd8e4ef836e9",
    "commit": {
      "author": {
        "name": "Dave Riddle",
        "email": "dave@mywebroom.com",
        "date": "2015-01-13T18:18:33Z"
      },
      "committer": {
        "name": "Dave Riddle",
        "email": "dave@mywebroom.com",
        "date": "2015-01-13T18:18:33Z"
      },
      "message": "update inline documentation",
      "tree": {
        "sha": "16df88c9a1cfb9e99265c450e26e87fda15d038f",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/16df88c9a1cfb9e99265c450e26e87fda15d038f"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/f677d77f609f62cda402e5e857adbd8e4ef836e9",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/f677d77f609f62cda402e5e857adbd8e4ef836e9",
    "html_url": "https://github.com/facebook/flux/commit/f677d77f609f62cda402e5e857adbd8e4ef836e9",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/f677d77f609f62cda402e5e857adbd8e4ef836e9/comments",
    "author": {
      "login": "joyvuu-dave",
      "id": 68452,
      "avatar_url": "https://avatars.githubusercontent.com/u/68452?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joyvuu-dave",
      "html_url": "https://github.com/joyvuu-dave",
      "followers_url": "https://api.github.com/users/joyvuu-dave/followers",
      "following_url": "https://api.github.com/users/joyvuu-dave/following{/other_user}",
      "gists_url": "https://api.github.com/users/joyvuu-dave/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joyvuu-dave/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joyvuu-dave/subscriptions",
      "organizations_url": "https://api.github.com/users/joyvuu-dave/orgs",
      "repos_url": "https://api.github.com/users/joyvuu-dave/repos",
      "events_url": "https://api.github.com/users/joyvuu-dave/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joyvuu-dave/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "joyvuu-dave",
      "id": 68452,
      "avatar_url": "https://avatars.githubusercontent.com/u/68452?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joyvuu-dave",
      "html_url": "https://github.com/joyvuu-dave",
      "followers_url": "https://api.github.com/users/joyvuu-dave/followers",
      "following_url": "https://api.github.com/users/joyvuu-dave/following{/other_user}",
      "gists_url": "https://api.github.com/users/joyvuu-dave/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joyvuu-dave/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joyvuu-dave/subscriptions",
      "organizations_url": "https://api.github.com/users/joyvuu-dave/orgs",
      "repos_url": "https://api.github.com/users/joyvuu-dave/repos",
      "events_url": "https://api.github.com/users/joyvuu-dave/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joyvuu-dave/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "104caf676f2bceb91e584cacb9d5718300f9af93",
        "url": "https://api.github.com/repos/facebook/flux/commits/104caf676f2bceb91e584cacb9d5718300f9af93",
        "html_url": "https://github.com/facebook/flux/commit/104caf676f2bceb91e584cacb9d5718300f9af93"
      }
    ]
  },
  {
    "sha": "104caf676f2bceb91e584cacb9d5718300f9af93",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-13T18:09:31Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-13T18:09:31Z"
      },
      "message": "Merge pull request #124 from kurumpa/Branch_c858b918bf4dca1a116ff2ef8fe3e098ab2a9710\n\nfixed tests",
      "tree": {
        "sha": "dd306cd1f74aa4a8c00838adfcc2b0b0c65f2145",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/dd306cd1f74aa4a8c00838adfcc2b0b0c65f2145"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/104caf676f2bceb91e584cacb9d5718300f9af93",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/104caf676f2bceb91e584cacb9d5718300f9af93",
    "html_url": "https://github.com/facebook/flux/commit/104caf676f2bceb91e584cacb9d5718300f9af93",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/104caf676f2bceb91e584cacb9d5718300f9af93/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0901bb7c00f373f34d1c4437051d872b64fe34da",
        "url": "https://api.github.com/repos/facebook/flux/commits/0901bb7c00f373f34d1c4437051d872b64fe34da",
        "html_url": "https://github.com/facebook/flux/commit/0901bb7c00f373f34d1c4437051d872b64fe34da"
      },
      {
        "sha": "5e808c7957ca03bf5eb8e0e80f969a80899a5d67",
        "url": "https://api.github.com/repos/facebook/flux/commits/5e808c7957ca03bf5eb8e0e80f969a80899a5d67",
        "html_url": "https://github.com/facebook/flux/commit/5e808c7957ca03bf5eb8e0e80f969a80899a5d67"
      }
    ]
  },
  {
    "sha": "5e808c7957ca03bf5eb8e0e80f969a80899a5d67",
    "commit": {
      "author": {
        "name": "Kirill",
        "email": "kiev.programmer@gmail.com",
        "date": "2015-01-10T14:38:55Z"
      },
      "committer": {
        "name": "Kirill",
        "email": "kiev.programmer@gmail.com",
        "date": "2015-01-10T14:38:55Z"
      },
      "message": "fixed tests\n\n'should throw on multi-circular dependencies' and 'should throw on\nself-circular dependencies' tests were checking for always-satisfying\nconditions",
      "tree": {
        "sha": "e6d59ea4860d34f93873fc0b721070b233a586cf",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/e6d59ea4860d34f93873fc0b721070b233a586cf"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/5e808c7957ca03bf5eb8e0e80f969a80899a5d67",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/5e808c7957ca03bf5eb8e0e80f969a80899a5d67",
    "html_url": "https://github.com/facebook/flux/commit/5e808c7957ca03bf5eb8e0e80f969a80899a5d67",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/5e808c7957ca03bf5eb8e0e80f969a80899a5d67/comments",
    "author": {
      "login": "kurumpa",
      "id": 1300401,
      "avatar_url": "https://avatars.githubusercontent.com/u/1300401?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kurumpa",
      "html_url": "https://github.com/kurumpa",
      "followers_url": "https://api.github.com/users/kurumpa/followers",
      "following_url": "https://api.github.com/users/kurumpa/following{/other_user}",
      "gists_url": "https://api.github.com/users/kurumpa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kurumpa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kurumpa/subscriptions",
      "organizations_url": "https://api.github.com/users/kurumpa/orgs",
      "repos_url": "https://api.github.com/users/kurumpa/repos",
      "events_url": "https://api.github.com/users/kurumpa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kurumpa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kurumpa",
      "id": 1300401,
      "avatar_url": "https://avatars.githubusercontent.com/u/1300401?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kurumpa",
      "html_url": "https://github.com/kurumpa",
      "followers_url": "https://api.github.com/users/kurumpa/followers",
      "following_url": "https://api.github.com/users/kurumpa/following{/other_user}",
      "gists_url": "https://api.github.com/users/kurumpa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kurumpa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kurumpa/subscriptions",
      "organizations_url": "https://api.github.com/users/kurumpa/orgs",
      "repos_url": "https://api.github.com/users/kurumpa/repos",
      "events_url": "https://api.github.com/users/kurumpa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kurumpa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c858b918bf4dca1a116ff2ef8fe3e098ab2a9710",
        "url": "https://api.github.com/repos/facebook/flux/commits/c858b918bf4dca1a116ff2ef8fe3e098ab2a9710",
        "html_url": "https://github.com/facebook/flux/commit/c858b918bf4dca1a116ff2ef8fe3e098ab2a9710"
      }
    ]
  },
  {
    "sha": "0901bb7c00f373f34d1c4437051d872b64fe34da",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-07T20:53:28Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-07T20:53:49Z"
      },
      "message": "[Flux docs] update and revise overview",
      "tree": {
        "sha": "6a06340814fd9d8c3ab82b68cc6107c60ac1a8c2",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/6a06340814fd9d8c3ab82b68cc6107c60ac1a8c2"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/0901bb7c00f373f34d1c4437051d872b64fe34da",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/0901bb7c00f373f34d1c4437051d872b64fe34da",
    "html_url": "https://github.com/facebook/flux/commit/0901bb7c00f373f34d1c4437051d872b64fe34da",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/0901bb7c00f373f34d1c4437051d872b64fe34da/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2fc31faa8f2d6a2c141968b84a5fa0b57145b13",
        "url": "https://api.github.com/repos/facebook/flux/commits/d2fc31faa8f2d6a2c141968b84a5fa0b57145b13",
        "html_url": "https://github.com/facebook/flux/commit/d2fc31faa8f2d6a2c141968b84a5fa0b57145b13"
      }
    ]
  },
  {
    "sha": "d2fc31faa8f2d6a2c141968b84a5fa0b57145b13",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-07T01:23:49Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-07T01:23:49Z"
      },
      "message": "[Flux Website] favicon, logo, colors, peg React at ~0.12.0",
      "tree": {
        "sha": "189d53ee3f8cf6863ec4a7cc3a3a67042f0dbc19",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/189d53ee3f8cf6863ec4a7cc3a3a67042f0dbc19"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/d2fc31faa8f2d6a2c141968b84a5fa0b57145b13",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/d2fc31faa8f2d6a2c141968b84a5fa0b57145b13",
    "html_url": "https://github.com/facebook/flux/commit/d2fc31faa8f2d6a2c141968b84a5fa0b57145b13",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/d2fc31faa8f2d6a2c141968b84a5fa0b57145b13/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4",
        "url": "https://api.github.com/repos/facebook/flux/commits/ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4",
        "html_url": "https://github.com/facebook/flux/commit/ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4"
      }
    ]
  },
  {
    "sha": "ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4",
    "commit": {
      "author": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-06T08:07:08Z"
      },
      "committer": {
        "name": "fisherwebdev",
        "email": "fisherwebdev@gmail.com",
        "date": "2015-01-06T08:07:08Z"
      },
      "message": "[TodoMVC Example] remove unnecessary handleViewAction() method, improve emitChange() usage",
      "tree": {
        "sha": "ec3ae074cf321fb1f258f3ee7841b1597247adbe",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/ec3ae074cf321fb1f258f3ee7841b1597247adbe"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4",
      "comment_count": 3
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4",
    "html_url": "https://github.com/facebook/flux/commit/ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/ec8bba6893da01dc0f4e7a136d47acfd2cea3ac4/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13",
        "url": "https://api.github.com/repos/facebook/flux/commits/c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13",
        "html_url": "https://github.com/facebook/flux/commit/c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13"
      }
    ]
  },
  {
    "sha": "c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2014-12-21T06:39:50Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2014-12-21T06:39:50Z"
      },
      "message": "Merge pull request #117 from RileyTomasek/master\n\nChange tabs to spaces in todomvc example",
      "tree": {
        "sha": "cf8e89a74e5d5e1ebf3d430494cb6613f56b33a4",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/cf8e89a74e5d5e1ebf3d430494cb6613f56b33a4"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13",
    "html_url": "https://github.com/facebook/flux/commit/c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/c36a9acc01aa66f9d0b3ed4925b75ebbb0311c13/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c62b49cf29173c03ce54ee28ba23d61076a3499",
        "url": "https://api.github.com/repos/facebook/flux/commits/4c62b49cf29173c03ce54ee28ba23d61076a3499",
        "html_url": "https://github.com/facebook/flux/commit/4c62b49cf29173c03ce54ee28ba23d61076a3499"
      },
      {
        "sha": "a2d79e15e5f6c9ff57108ca7ec7fafe1e8f06616",
        "url": "https://api.github.com/repos/facebook/flux/commits/a2d79e15e5f6c9ff57108ca7ec7fafe1e8f06616",
        "html_url": "https://github.com/facebook/flux/commit/a2d79e15e5f6c9ff57108ca7ec7fafe1e8f06616"
      }
    ]
  },
  {
    "sha": "4c62b49cf29173c03ce54ee28ba23d61076a3499",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2014-12-21T06:38:27Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2014-12-21T06:38:27Z"
      },
      "message": "Merge pull request #116 from rickbeerendonk/master\n\nUpdate video.md with HTML5DevConf 2014 talk",
      "tree": {
        "sha": "3873b4c1c8a47cd39a8a4aa268a8d580635bba9e",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/3873b4c1c8a47cd39a8a4aa268a8d580635bba9e"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/4c62b49cf29173c03ce54ee28ba23d61076a3499",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/4c62b49cf29173c03ce54ee28ba23d61076a3499",
    "html_url": "https://github.com/facebook/flux/commit/4c62b49cf29173c03ce54ee28ba23d61076a3499",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/4c62b49cf29173c03ce54ee28ba23d61076a3499/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ff67ee6d99970def23399e44e0856f3b778a819",
        "url": "https://api.github.com/repos/facebook/flux/commits/6ff67ee6d99970def23399e44e0856f3b778a819",
        "html_url": "https://github.com/facebook/flux/commit/6ff67ee6d99970def23399e44e0856f3b778a819"
      },
      {
        "sha": "01d227cdd9023ecd489626f2d383d939e566dfd2",
        "url": "https://api.github.com/repos/facebook/flux/commits/01d227cdd9023ecd489626f2d383d939e566dfd2",
        "html_url": "https://github.com/facebook/flux/commit/01d227cdd9023ecd489626f2d383d939e566dfd2"
      }
    ]
  },
  {
    "sha": "6ff67ee6d99970def23399e44e0856f3b778a819",
    "commit": {
      "author": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2014-12-21T06:31:04Z"
      },
      "committer": {
        "name": "Bill Fisher",
        "email": "fisherwebdev@gmail.com",
        "date": "2014-12-21T06:31:04Z"
      },
      "message": "Merge pull request #110 from garbles/update-waitfor-documentation\n\nUpdate overview of Dispatcher#waitFor to reflect its current implementation",
      "tree": {
        "sha": "2e33d22224cd10c3fd2b0a206640f63c8d546bd3",
        "url": "https://api.github.com/repos/facebook/flux/git/trees/2e33d22224cd10c3fd2b0a206640f63c8d546bd3"
      },
      "url": "https://api.github.com/repos/facebook/flux/git/commits/6ff67ee6d99970def23399e44e0856f3b778a819",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/flux/commits/6ff67ee6d99970def23399e44e0856f3b778a819",
    "html_url": "https://github.com/facebook/flux/commit/6ff67ee6d99970def23399e44e0856f3b778a819",
    "comments_url": "https://api.github.com/repos/facebook/flux/commits/6ff67ee6d99970def23399e44e0856f3b778a819/comments",
    "author": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fisherwebdev",
      "id": 169760,
      "avatar_url": "https://avatars.githubusercontent.com/u/169760?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisherwebdev",
      "html_url": "https://github.com/fisherwebdev",
      "followers_url": "https://api.github.com/users/fisherwebdev/followers",
      "following_url": "https://api.github.com/users/fisherwebdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisherwebdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisherwebdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisherwebdev/subscriptions",
      "organizations_url": "https://api.github.com/users/fisherwebdev/orgs",
      "repos_url": "https://api.github.com/users/fisherwebdev/repos",
      "events_url": "https://api.github.com/users/fisherwebdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisherwebdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28c1713021c92e9038c7e175f1b52e35c609beee",
        "url": "https://api.github.com/repos/facebook/flux/commits/28c1713021c92e9038c7e175f1b52e35c609beee",
        "html_url": "https://github.com/facebook/flux/commit/28c1713021c92e9038c7e175f1b52e35c609beee"
      },
      {
        "sha": "ffed00db0bd12a4fcb9bfb5638129b4f381b9ea6",
        "url": "https://api.github.com/repos/facebook/flux/commits/ffed00db0bd12a4fcb9bfb5638129b4f381b9ea6",
        "html_url": "https://github.com/facebook/flux/commit/ffed00db0bd12a4fcb9bfb5638129b4f381b9ea6"
      }
    ]
  }
]
},{}],"c:\\projects\\react\\app\\data\\repos\\facebook\\presto.js":[function(require,module,exports){
module.exports = {
  "id": 5349565,
  "name": "presto",
  "full_name": "facebook/presto",
  "owner": {
    "login": "facebook",
    "id": 69631,
    "avatar_url": "https://avatars.githubusercontent.com/u/69631?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/facebook",
    "html_url": "https://github.com/facebook",
    "followers_url": "https://api.github.com/users/facebook/followers",
    "following_url": "https://api.github.com/users/facebook/following{/other_user}",
    "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/facebook/subscriptions",
    "organizations_url": "https://api.github.com/users/facebook/orgs",
    "repos_url": "https://api.github.com/users/facebook/repos",
    "events_url": "https://api.github.com/users/facebook/events{/privacy}",
    "received_events_url": "https://api.github.com/users/facebook/received_events",
    "type": "Organization",
    "site_admin": false
  },
  "private": false,
  "html_url": "https://github.com/facebook/presto",
  "description": "Distributed SQL query engine for running interactive analytic queries against big data sources.",
  "fork": false,
  "url": "https://api.github.com/repos/facebook/presto",
  "forks_url": "https://api.github.com/repos/facebook/presto/forks",
  "keys_url": "https://api.github.com/repos/facebook/presto/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/facebook/presto/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/facebook/presto/teams",
  "hooks_url": "https://api.github.com/repos/facebook/presto/hooks",
  "issue_events_url": "https://api.github.com/repos/facebook/presto/issues/events{/number}",
  "events_url": "https://api.github.com/repos/facebook/presto/events",
  "assignees_url": "https://api.github.com/repos/facebook/presto/assignees{/user}",
  "branches_url": "https://api.github.com/repos/facebook/presto/branches{/branch}",
  "tags_url": "https://api.github.com/repos/facebook/presto/tags",
  "blobs_url": "https://api.github.com/repos/facebook/presto/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/facebook/presto/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/facebook/presto/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/facebook/presto/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/facebook/presto/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/facebook/presto/languages",
  "stargazers_url": "https://api.github.com/repos/facebook/presto/stargazers",
  "contributors_url": "https://api.github.com/repos/facebook/presto/contributors",
  "subscribers_url": "https://api.github.com/repos/facebook/presto/subscribers",
  "subscription_url": "https://api.github.com/repos/facebook/presto/subscription",
  "commits_url": "https://api.github.com/repos/facebook/presto/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/facebook/presto/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/facebook/presto/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/facebook/presto/issues/comments/{number}",
  "contents_url": "https://api.github.com/repos/facebook/presto/contents/{+path}",
  "compare_url": "https://api.github.com/repos/facebook/presto/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/facebook/presto/merges",
  "archive_url": "https://api.github.com/repos/facebook/presto/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/facebook/presto/downloads",
  "issues_url": "https://api.github.com/repos/facebook/presto/issues{/number}",
  "pulls_url": "https://api.github.com/repos/facebook/presto/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/facebook/presto/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/facebook/presto/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/facebook/presto/labels{/name}",
  "releases_url": "https://api.github.com/repos/facebook/presto/releases{/id}",
  "created_at": "2012-08-09T01:03:37Z",
  "updated_at": "2015-02-07T07:15:37Z",
  "pushed_at": "2015-02-07T08:04:11Z",
  "git_url": "git://github.com/facebook/presto.git",
  "ssh_url": "git@github.com:facebook/presto.git",
  "clone_url": "https://github.com/facebook/presto.git",
  "svn_url": "https://github.com/facebook/presto",
  "homepage": "https://prestodb.io",
  "size": 68879,
  "stargazers_count": 2954,
  "watchers_count": 2954,
  "language": "Java",
  "has_issues": true,
  "has_downloads": true,
  "has_wiki": false,
  "has_pages": true,
  "forks_count": 651,
  "mirror_url": null,
  "open_issues_count": 235,
  "forks": 651,
  "open_issues": 235,
  "watchers": 2954,
  "default_branch": "master",
  "organization": {
    "login": "facebook",
    "id": 69631,
    "avatar_url": "https://avatars.githubusercontent.com/u/69631?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/facebook",
    "html_url": "https://github.com/facebook",
    "followers_url": "https://api.github.com/users/facebook/followers",
    "following_url": "https://api.github.com/users/facebook/following{/other_user}",
    "gists_url": "https://api.github.com/users/facebook/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/facebook/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/facebook/subscriptions",
    "organizations_url": "https://api.github.com/users/facebook/orgs",
    "repos_url": "https://api.github.com/users/facebook/repos",
    "events_url": "https://api.github.com/users/facebook/events{/privacy}",
    "received_events_url": "https://api.github.com/users/facebook/received_events",
    "type": "Organization",
    "site_admin": false
  },
  "network_count": 651,
  "subscribers_count": 392
}
},{}],"c:\\projects\\react\\app\\data\\repos\\facebook\\presto\\commits.js":[function(require,module,exports){
module.exports = [
  {
    "sha": "67c24a661e5b055ad6f2c803590ab5d16acfac49",
    "commit": {
      "author": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-07T06:31:36Z"
      },
      "committer": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-07T06:31:36Z"
      },
      "message": "[maven-release-plugin] prepare for next development iteration",
      "tree": {
        "sha": "0a5f0eb076591bd1a84b3f01e38ec2f93f22a5ca",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/0a5f0eb076591bd1a84b3f01e38ec2f93f22a5ca"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/67c24a661e5b055ad6f2c803590ab5d16acfac49",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/67c24a661e5b055ad6f2c803590ab5d16acfac49",
    "html_url": "https://github.com/facebook/presto/commit/67c24a661e5b055ad6f2c803590ab5d16acfac49",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/67c24a661e5b055ad6f2c803590ab5d16acfac49/comments",
    "author": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "32402f826f95c86c275c5e882b56233927728922",
        "url": "https://api.github.com/repos/facebook/presto/commits/32402f826f95c86c275c5e882b56233927728922",
        "html_url": "https://github.com/facebook/presto/commit/32402f826f95c86c275c5e882b56233927728922"
      }
    ]
  },
  {
    "sha": "32402f826f95c86c275c5e882b56233927728922",
    "commit": {
      "author": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-07T06:31:36Z"
      },
      "committer": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-07T06:31:36Z"
      },
      "message": "[maven-release-plugin] prepare release 0.93",
      "tree": {
        "sha": "69a8801d5e50efba0565ddc5e453142ffb1933fd",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/69a8801d5e50efba0565ddc5e453142ffb1933fd"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/32402f826f95c86c275c5e882b56233927728922",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/32402f826f95c86c275c5e882b56233927728922",
    "html_url": "https://github.com/facebook/presto/commit/32402f826f95c86c275c5e882b56233927728922",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/32402f826f95c86c275c5e882b56233927728922/comments",
    "author": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6bda23387d9c6b3a0bcbac150ad4673c92526f0a",
        "url": "https://api.github.com/repos/facebook/presto/commits/6bda23387d9c6b3a0bcbac150ad4673c92526f0a",
        "html_url": "https://github.com/facebook/presto/commit/6bda23387d9c6b3a0bcbac150ad4673c92526f0a"
      }
    ]
  },
  {
    "sha": "6bda23387d9c6b3a0bcbac150ad4673c92526f0a",
    "commit": {
      "author": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-06T21:23:11Z"
      },
      "committer": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-07T06:19:53Z"
      },
      "message": "Update to airlift 0.101",
      "tree": {
        "sha": "ac35d752fcfeefb97d26022a7f2d43dd95b0b524",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/ac35d752fcfeefb97d26022a7f2d43dd95b0b524"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/6bda23387d9c6b3a0bcbac150ad4673c92526f0a",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/6bda23387d9c6b3a0bcbac150ad4673c92526f0a",
    "html_url": "https://github.com/facebook/presto/commit/6bda23387d9c6b3a0bcbac150ad4673c92526f0a",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/6bda23387d9c6b3a0bcbac150ad4673c92526f0a/comments",
    "author": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "289b59443313896c4a7365423b617c8aa91b3aff",
        "url": "https://api.github.com/repos/facebook/presto/commits/289b59443313896c4a7365423b617c8aa91b3aff",
        "html_url": "https://github.com/facebook/presto/commit/289b59443313896c4a7365423b617c8aa91b3aff"
      }
    ]
  },
  {
    "sha": "289b59443313896c4a7365423b617c8aa91b3aff",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T22:43:44Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T23:11:17Z"
      },
      "message": "Add 0.93 release notes",
      "tree": {
        "sha": "4650be77bd79daf1edef33a0867ee8c868e5cecf",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/4650be77bd79daf1edef33a0867ee8c868e5cecf"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/289b59443313896c4a7365423b617c8aa91b3aff",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/289b59443313896c4a7365423b617c8aa91b3aff",
    "html_url": "https://github.com/facebook/presto/commit/289b59443313896c4a7365423b617c8aa91b3aff",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/289b59443313896c4a7365423b617c8aa91b3aff/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a10329b991535baa82889c53047398fcab75ed32",
        "url": "https://api.github.com/repos/facebook/presto/commits/a10329b991535baa82889c53047398fcab75ed32",
        "html_url": "https://github.com/facebook/presto/commit/a10329b991535baa82889c53047398fcab75ed32"
      }
    ]
  },
  {
    "sha": "a10329b991535baa82889c53047398fcab75ed32",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-01-22T02:03:15Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T19:35:07Z"
      },
      "message": "Fix StatementResource output buffer location management",
      "tree": {
        "sha": "71a64742b47a82f9b0003997e7bf4195d7dd41af",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/71a64742b47a82f9b0003997e7bf4195d7dd41af"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/a10329b991535baa82889c53047398fcab75ed32",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/a10329b991535baa82889c53047398fcab75ed32",
    "html_url": "https://github.com/facebook/presto/commit/a10329b991535baa82889c53047398fcab75ed32",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/a10329b991535baa82889c53047398fcab75ed32/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6278c87e91e29f0a35d6187c5a91c0311b5e9bfa",
        "url": "https://api.github.com/repos/facebook/presto/commits/6278c87e91e29f0a35d6187c5a91c0311b5e9bfa",
        "html_url": "https://github.com/facebook/presto/commit/6278c87e91e29f0a35d6187c5a91c0311b5e9bfa"
      }
    ]
  },
  {
    "sha": "6278c87e91e29f0a35d6187c5a91c0311b5e9bfa",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-01-21T23:13:43Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T19:35:07Z"
      },
      "message": "Add separate error trackers for HttpRemoteTask update and get",
      "tree": {
        "sha": "1da098ab6122d624b7e3a8c76388d1b04bb38dd2",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/1da098ab6122d624b7e3a8c76388d1b04bb38dd2"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/6278c87e91e29f0a35d6187c5a91c0311b5e9bfa",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/6278c87e91e29f0a35d6187c5a91c0311b5e9bfa",
    "html_url": "https://github.com/facebook/presto/commit/6278c87e91e29f0a35d6187c5a91c0311b5e9bfa",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/6278c87e91e29f0a35d6187c5a91c0311b5e9bfa/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edf492f93f03f96619cd26a1eb09b0a777e4d9f4",
        "url": "https://api.github.com/repos/facebook/presto/commits/edf492f93f03f96619cd26a1eb09b0a777e4d9f4",
        "html_url": "https://github.com/facebook/presto/commit/edf492f93f03f96619cd26a1eb09b0a777e4d9f4"
      }
    ]
  },
  {
    "sha": "edf492f93f03f96619cd26a1eb09b0a777e4d9f4",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-01-21T23:12:29Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T19:35:07Z"
      },
      "message": "Inline HttpRemoteTask request success and fail methods",
      "tree": {
        "sha": "b7103fae6f71a092cd93e3b62ce6319c0699bd81",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/b7103fae6f71a092cd93e3b62ce6319c0699bd81"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/edf492f93f03f96619cd26a1eb09b0a777e4d9f4",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/edf492f93f03f96619cd26a1eb09b0a777e4d9f4",
    "html_url": "https://github.com/facebook/presto/commit/edf492f93f03f96619cd26a1eb09b0a777e4d9f4",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/edf492f93f03f96619cd26a1eb09b0a777e4d9f4/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00e8f569df2aa7f26ab31b4268234f1d7afd4d47",
        "url": "https://api.github.com/repos/facebook/presto/commits/00e8f569df2aa7f26ab31b4268234f1d7afd4d47",
        "html_url": "https://github.com/facebook/presto/commit/00e8f569df2aa7f26ab31b4268234f1d7afd4d47"
      }
    ]
  },
  {
    "sha": "00e8f569df2aa7f26ab31b4268234f1d7afd4d47",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-01-21T22:52:35Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T19:35:07Z"
      },
      "message": "Consolidate HttpRemoteTask error tracking code",
      "tree": {
        "sha": "40f0d187d7d5ab576a49e73a8c30eb6501699f54",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/40f0d187d7d5ab576a49e73a8c30eb6501699f54"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/00e8f569df2aa7f26ab31b4268234f1d7afd4d47",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/00e8f569df2aa7f26ab31b4268234f1d7afd4d47",
    "html_url": "https://github.com/facebook/presto/commit/00e8f569df2aa7f26ab31b4268234f1d7afd4d47",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/00e8f569df2aa7f26ab31b4268234f1d7afd4d47/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0eaae3a31e78304b41d3a6c430aa09224c044f3",
        "url": "https://api.github.com/repos/facebook/presto/commits/b0eaae3a31e78304b41d3a6c430aa09224c044f3",
        "html_url": "https://github.com/facebook/presto/commit/b0eaae3a31e78304b41d3a6c430aa09224c044f3"
      }
    ]
  },
  {
    "sha": "b0eaae3a31e78304b41d3a6c430aa09224c044f3",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-01-21T23:03:00Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T19:35:07Z"
      },
      "message": "Move HttpRemoteTask split purging to updateTaskInfo",
      "tree": {
        "sha": "e832956860aaeb505a81da8ff99d302293616141",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/e832956860aaeb505a81da8ff99d302293616141"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/b0eaae3a31e78304b41d3a6c430aa09224c044f3",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/b0eaae3a31e78304b41d3a6c430aa09224c044f3",
    "html_url": "https://github.com/facebook/presto/commit/b0eaae3a31e78304b41d3a6c430aa09224c044f3",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/b0eaae3a31e78304b41d3a6c430aa09224c044f3/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08306a3dd47785723c909cc4668e127c62495aba",
        "url": "https://api.github.com/repos/facebook/presto/commits/08306a3dd47785723c909cc4668e127c62495aba",
        "html_url": "https://github.com/facebook/presto/commit/08306a3dd47785723c909cc4668e127c62495aba"
      }
    ]
  },
  {
    "sha": "08306a3dd47785723c909cc4668e127c62495aba",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-01-21T20:38:10Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T19:35:07Z"
      },
      "message": "Always start the HttpRemoteTask info fetcher\n\nBefore the full async model, we had to delay starting the info fetcher\nuntil after the task was created, or we would hammer the server because\nwe had no way to wait on the server until the task was created.  Now\nwe can start the fetcher immediately which is simpler.",
      "tree": {
        "sha": "960a3ace4707a814f822a508c2afa9cdc2f94310",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/960a3ace4707a814f822a508c2afa9cdc2f94310"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/08306a3dd47785723c909cc4668e127c62495aba",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/08306a3dd47785723c909cc4668e127c62495aba",
    "html_url": "https://github.com/facebook/presto/commit/08306a3dd47785723c909cc4668e127c62495aba",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/08306a3dd47785723c909cc4668e127c62495aba/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "448fb1d57fb43c5498f8d07f834dfb45797b3e4b",
        "url": "https://api.github.com/repos/facebook/presto/commits/448fb1d57fb43c5498f8d07f834dfb45797b3e4b",
        "html_url": "https://github.com/facebook/presto/commit/448fb1d57fb43c5498f8d07f834dfb45797b3e4b"
      }
    ]
  },
  {
    "sha": "448fb1d57fb43c5498f8d07f834dfb45797b3e4b",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-01-21T20:07:06Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T19:35:07Z"
      },
      "message": "Catch all exceptions in task update and fail task",
      "tree": {
        "sha": "14b5f81fe510c3943a9355b1e808af5555875752",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/14b5f81fe510c3943a9355b1e808af5555875752"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/448fb1d57fb43c5498f8d07f834dfb45797b3e4b",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/448fb1d57fb43c5498f8d07f834dfb45797b3e4b",
    "html_url": "https://github.com/facebook/presto/commit/448fb1d57fb43c5498f8d07f834dfb45797b3e4b",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/448fb1d57fb43c5498f8d07f834dfb45797b3e4b/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6",
        "url": "https://api.github.com/repos/facebook/presto/commits/e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6",
        "html_url": "https://github.com/facebook/presto/commit/e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6"
      }
    ]
  },
  {
    "sha": "e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6",
    "commit": {
      "author": {
        "name": "Zhenxiao Luo",
        "email": "zluo@netflix.com",
        "date": "2015-02-04T20:59:24Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-06T19:10:08Z"
      },
      "message": "Improve error message when creating Hive deserializer",
      "tree": {
        "sha": "097e8b5d1ea9d15784868ba74b436d5458a21206",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/097e8b5d1ea9d15784868ba74b436d5458a21206"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6",
    "html_url": "https://github.com/facebook/presto/commit/e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/e38ac92c1fc3425d0545e3d1a4cf4f7e9f9bf5d6/comments",
    "author": {
      "login": "zhenxiao",
      "id": 1274155,
      "avatar_url": "https://avatars.githubusercontent.com/u/1274155?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhenxiao",
      "html_url": "https://github.com/zhenxiao",
      "followers_url": "https://api.github.com/users/zhenxiao/followers",
      "following_url": "https://api.github.com/users/zhenxiao/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhenxiao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhenxiao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhenxiao/subscriptions",
      "organizations_url": "https://api.github.com/users/zhenxiao/orgs",
      "repos_url": "https://api.github.com/users/zhenxiao/repos",
      "events_url": "https://api.github.com/users/zhenxiao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhenxiao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9bf232f07f8b2a7eec864e77188e51e94da1b41c",
        "url": "https://api.github.com/repos/facebook/presto/commits/9bf232f07f8b2a7eec864e77188e51e94da1b41c",
        "html_url": "https://github.com/facebook/presto/commit/9bf232f07f8b2a7eec864e77188e51e94da1b41c"
      }
    ]
  },
  {
    "sha": "9bf232f07f8b2a7eec864e77188e51e94da1b41c",
    "commit": {
      "author": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T06:56:42Z"
      },
      "committer": {
        "name": "Dain Sundstrom",
        "email": "dain@iq80.com",
        "date": "2015-02-06T17:43:17Z"
      },
      "message": "Use individual slices for each value in ORC\n\nInstead of using a shared buffer for blocks and dictionaries use separate slice\nfor each value.  This reduces heap fragmentation and excessive memory retention\nat the expense of object creation.",
      "tree": {
        "sha": "dc11a98a690558a07354aca73031f09dbea6f126",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/dc11a98a690558a07354aca73031f09dbea6f126"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/9bf232f07f8b2a7eec864e77188e51e94da1b41c",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/9bf232f07f8b2a7eec864e77188e51e94da1b41c",
    "html_url": "https://github.com/facebook/presto/commit/9bf232f07f8b2a7eec864e77188e51e94da1b41c",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/9bf232f07f8b2a7eec864e77188e51e94da1b41c/comments",
    "author": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dain",
      "id": 58298,
      "avatar_url": "https://avatars.githubusercontent.com/u/58298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dain",
      "html_url": "https://github.com/dain",
      "followers_url": "https://api.github.com/users/dain/followers",
      "following_url": "https://api.github.com/users/dain/following{/other_user}",
      "gists_url": "https://api.github.com/users/dain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dain/subscriptions",
      "organizations_url": "https://api.github.com/users/dain/orgs",
      "repos_url": "https://api.github.com/users/dain/repos",
      "events_url": "https://api.github.com/users/dain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dain/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c70fb333f1da399df5b46ab28d9725335fba3de2",
        "url": "https://api.github.com/repos/facebook/presto/commits/c70fb333f1da399df5b46ab28d9725335fba3de2",
        "html_url": "https://github.com/facebook/presto/commit/c70fb333f1da399df5b46ab28d9725335fba3de2"
      }
    ]
  },
  {
    "sha": "c70fb333f1da399df5b46ab28d9725335fba3de2",
    "commit": {
      "author": {
        "name": "Joy Yao",
        "email": "jyao@fb.com",
        "date": "2015-01-28T21:40:27Z"
      },
      "committer": {
        "name": "Joy Yao",
        "email": "jyao@fb.com",
        "date": "2015-02-05T22:57:39Z"
      },
      "message": "Do not push down nondeterministic predicate",
      "tree": {
        "sha": "b08677e2aa6cb5152f9f66eb5c762af54c6a45a7",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/b08677e2aa6cb5152f9f66eb5c762af54c6a45a7"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/c70fb333f1da399df5b46ab28d9725335fba3de2",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/c70fb333f1da399df5b46ab28d9725335fba3de2",
    "html_url": "https://github.com/facebook/presto/commit/c70fb333f1da399df5b46ab28d9725335fba3de2",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/c70fb333f1da399df5b46ab28d9725335fba3de2/comments",
    "author": {
      "login": "joy-yao",
      "id": 10444908,
      "avatar_url": "https://avatars.githubusercontent.com/u/10444908?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joy-yao",
      "html_url": "https://github.com/joy-yao",
      "followers_url": "https://api.github.com/users/joy-yao/followers",
      "following_url": "https://api.github.com/users/joy-yao/following{/other_user}",
      "gists_url": "https://api.github.com/users/joy-yao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joy-yao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joy-yao/subscriptions",
      "organizations_url": "https://api.github.com/users/joy-yao/orgs",
      "repos_url": "https://api.github.com/users/joy-yao/repos",
      "events_url": "https://api.github.com/users/joy-yao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joy-yao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "joy-yao",
      "id": 10444908,
      "avatar_url": "https://avatars.githubusercontent.com/u/10444908?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joy-yao",
      "html_url": "https://github.com/joy-yao",
      "followers_url": "https://api.github.com/users/joy-yao/followers",
      "following_url": "https://api.github.com/users/joy-yao/following{/other_user}",
      "gists_url": "https://api.github.com/users/joy-yao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joy-yao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joy-yao/subscriptions",
      "organizations_url": "https://api.github.com/users/joy-yao/orgs",
      "repos_url": "https://api.github.com/users/joy-yao/repos",
      "events_url": "https://api.github.com/users/joy-yao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joy-yao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba820730482708fd5b7676db0a30f17c938cf7f2",
        "url": "https://api.github.com/repos/facebook/presto/commits/ba820730482708fd5b7676db0a30f17c938cf7f2",
        "html_url": "https://github.com/facebook/presto/commit/ba820730482708fd5b7676db0a30f17c938cf7f2"
      }
    ]
  },
  {
    "sha": "ba820730482708fd5b7676db0a30f17c938cf7f2",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T20:55:30Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T20:55:30Z"
      },
      "message": "Add Raptor tests for exceptional double values",
      "tree": {
        "sha": "96229c1d814f4d3d0bf77e028ee13b855331205f",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/96229c1d814f4d3d0bf77e028ee13b855331205f"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/ba820730482708fd5b7676db0a30f17c938cf7f2",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/ba820730482708fd5b7676db0a30f17c938cf7f2",
    "html_url": "https://github.com/facebook/presto/commit/ba820730482708fd5b7676db0a30f17c938cf7f2",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/ba820730482708fd5b7676db0a30f17c938cf7f2/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87bb11eb335a0d21af6e1bd60a794d3043cd52c9",
        "url": "https://api.github.com/repos/facebook/presto/commits/87bb11eb335a0d21af6e1bd60a794d3043cd52c9",
        "html_url": "https://github.com/facebook/presto/commit/87bb11eb335a0d21af6e1bd60a794d3043cd52c9"
      }
    ]
  },
  {
    "sha": "87bb11eb335a0d21af6e1bd60a794d3043cd52c9",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T20:49:21Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T20:49:21Z"
      },
      "message": "Fix test to not duplicate expected count",
      "tree": {
        "sha": "1279831d2137d37ebfa2cdf4e008cfa2c672d53f",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/1279831d2137d37ebfa2cdf4e008cfa2c672d53f"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/87bb11eb335a0d21af6e1bd60a794d3043cd52c9",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/87bb11eb335a0d21af6e1bd60a794d3043cd52c9",
    "html_url": "https://github.com/facebook/presto/commit/87bb11eb335a0d21af6e1bd60a794d3043cd52c9",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/87bb11eb335a0d21af6e1bd60a794d3043cd52c9/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "579da4174f3ada324c147b842292bee5745f69e0",
        "url": "https://api.github.com/repos/facebook/presto/commits/579da4174f3ada324c147b842292bee5745f69e0",
        "html_url": "https://github.com/facebook/presto/commit/579da4174f3ada324c147b842292bee5745f69e0"
      }
    ]
  },
  {
    "sha": "579da4174f3ada324c147b842292bee5745f69e0",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T20:06:08Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T20:06:08Z"
      },
      "message": "Fix update count fetch in StatementResource",
      "tree": {
        "sha": "9e47c89672dd4ba9d007827cc82a6272f400dd5f",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/9e47c89672dd4ba9d007827cc82a6272f400dd5f"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/579da4174f3ada324c147b842292bee5745f69e0",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/579da4174f3ada324c147b842292bee5745f69e0",
    "html_url": "https://github.com/facebook/presto/commit/579da4174f3ada324c147b842292bee5745f69e0",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/579da4174f3ada324c147b842292bee5745f69e0/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3715be85ef5f5886efceddcbc3fb89131d6f72fc",
        "url": "https://api.github.com/repos/facebook/presto/commits/3715be85ef5f5886efceddcbc3fb89131d6f72fc",
        "html_url": "https://github.com/facebook/presto/commit/3715be85ef5f5886efceddcbc3fb89131d6f72fc"
      }
    ]
  },
  {
    "sha": "3715be85ef5f5886efceddcbc3fb89131d6f72fc",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T03:46:47Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T19:49:51Z"
      },
      "message": "Improve handling of update queries",
      "tree": {
        "sha": "ce418fcc66a8e440e9d7a9c61260e0564249eb96",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/ce418fcc66a8e440e9d7a9c61260e0564249eb96"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/3715be85ef5f5886efceddcbc3fb89131d6f72fc",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/3715be85ef5f5886efceddcbc3fb89131d6f72fc",
    "html_url": "https://github.com/facebook/presto/commit/3715be85ef5f5886efceddcbc3fb89131d6f72fc",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/3715be85ef5f5886efceddcbc3fb89131d6f72fc/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad65a7ba6656142846c245155dac1821cc6291e",
        "url": "https://api.github.com/repos/facebook/presto/commits/fad65a7ba6656142846c245155dac1821cc6291e",
        "html_url": "https://github.com/facebook/presto/commit/fad65a7ba6656142846c245155dac1821cc6291e"
      }
    ]
  },
  {
    "sha": "fad65a7ba6656142846c245155dac1821cc6291e",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-04T15:57:41Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T19:49:51Z"
      },
      "message": "Use message arguments for checkArgument call",
      "tree": {
        "sha": "857fb1bee33b718a093bd5b8ee4855f2940e17ce",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/857fb1bee33b718a093bd5b8ee4855f2940e17ce"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/fad65a7ba6656142846c245155dac1821cc6291e",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/fad65a7ba6656142846c245155dac1821cc6291e",
    "html_url": "https://github.com/facebook/presto/commit/fad65a7ba6656142846c245155dac1821cc6291e",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/fad65a7ba6656142846c245155dac1821cc6291e/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9694865e14009137e9e80fc190fb9343fda55031",
        "url": "https://api.github.com/repos/facebook/presto/commits/9694865e14009137e9e80fc190fb9343fda55031",
        "html_url": "https://github.com/facebook/presto/commit/9694865e14009137e9e80fc190fb9343fda55031"
      }
    ]
  },
  {
    "sha": "9694865e14009137e9e80fc190fb9343fda55031",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-04T15:32:55Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T19:49:51Z"
      },
      "message": "Fix warnings in SqlQueryExecution\n\n* Remove unused variables\n* Rename SetThreadName variables to ignored",
      "tree": {
        "sha": "40aeafebc9fa52649c1c767b8cca4adab1a8f6a5",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/40aeafebc9fa52649c1c767b8cca4adab1a8f6a5"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/9694865e14009137e9e80fc190fb9343fda55031",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/9694865e14009137e9e80fc190fb9343fda55031",
    "html_url": "https://github.com/facebook/presto/commit/9694865e14009137e9e80fc190fb9343fda55031",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/9694865e14009137e9e80fc190fb9343fda55031/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ec1d29e8d91e503e7080350ec2b11e43b394e89",
        "url": "https://api.github.com/repos/facebook/presto/commits/2ec1d29e8d91e503e7080350ec2b11e43b394e89",
        "html_url": "https://github.com/facebook/presto/commit/2ec1d29e8d91e503e7080350ec2b11e43b394e89"
      }
    ]
  },
  {
    "sha": "2ec1d29e8d91e503e7080350ec2b11e43b394e89",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-04T15:18:15Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T19:49:51Z"
      },
      "message": "Update comments for query analysis",
      "tree": {
        "sha": "cd809896e52e7a9b8e3dc4c5a4d99800467e51a4",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/cd809896e52e7a9b8e3dc4c5a4d99800467e51a4"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/2ec1d29e8d91e503e7080350ec2b11e43b394e89",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/2ec1d29e8d91e503e7080350ec2b11e43b394e89",
    "html_url": "https://github.com/facebook/presto/commit/2ec1d29e8d91e503e7080350ec2b11e43b394e89",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/2ec1d29e8d91e503e7080350ec2b11e43b394e89/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8e12a4ae64b2aedf089483956c32e8e84e38905",
        "url": "https://api.github.com/repos/facebook/presto/commits/b8e12a4ae64b2aedf089483956c32e8e84e38905",
        "html_url": "https://github.com/facebook/presto/commit/b8e12a4ae64b2aedf089483956c32e8e84e38905"
      }
    ]
  },
  {
    "sha": "b8e12a4ae64b2aedf089483956c32e8e84e38905",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-04T01:32:26Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T19:49:51Z"
      },
      "message": "Print newline when exiting CLI via ctrl-D",
      "tree": {
        "sha": "793bc7dceb82d638c4d6ec524ee562f99757e627",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/793bc7dceb82d638c4d6ec524ee562f99757e627"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/b8e12a4ae64b2aedf089483956c32e8e84e38905",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/b8e12a4ae64b2aedf089483956c32e8e84e38905",
    "html_url": "https://github.com/facebook/presto/commit/b8e12a4ae64b2aedf089483956c32e8e84e38905",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/b8e12a4ae64b2aedf089483956c32e8e84e38905/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "056b2397b3c5a8188bde55879f717e10282b422f",
        "url": "https://api.github.com/repos/facebook/presto/commits/056b2397b3c5a8188bde55879f717e10282b422f",
        "html_url": "https://github.com/facebook/presto/commit/056b2397b3c5a8188bde55879f717e10282b422f"
      }
    ]
  },
  {
    "sha": "056b2397b3c5a8188bde55879f717e10282b422f",
    "commit": {
      "author": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-04T01:27:05Z"
      },
      "committer": {
        "name": "David Phillips",
        "email": "david@acz.org",
        "date": "2015-02-05T19:49:51Z"
      },
      "message": "Always print a newline in the CLI after errors",
      "tree": {
        "sha": "6293aaa8c39a1d294412b36ddcc420a46e47f0a8",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/6293aaa8c39a1d294412b36ddcc420a46e47f0a8"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/056b2397b3c5a8188bde55879f717e10282b422f",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/056b2397b3c5a8188bde55879f717e10282b422f",
    "html_url": "https://github.com/facebook/presto/commit/056b2397b3c5a8188bde55879f717e10282b422f",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/056b2397b3c5a8188bde55879f717e10282b422f/comments",
    "author": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "electrum",
      "id": 9230,
      "avatar_url": "https://avatars.githubusercontent.com/u/9230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/electrum",
      "html_url": "https://github.com/electrum",
      "followers_url": "https://api.github.com/users/electrum/followers",
      "following_url": "https://api.github.com/users/electrum/following{/other_user}",
      "gists_url": "https://api.github.com/users/electrum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/electrum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/electrum/subscriptions",
      "organizations_url": "https://api.github.com/users/electrum/orgs",
      "repos_url": "https://api.github.com/users/electrum/repos",
      "events_url": "https://api.github.com/users/electrum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/electrum/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "817504766427bcdb423e3e495e93695420e41d25",
        "url": "https://api.github.com/repos/facebook/presto/commits/817504766427bcdb423e3e495e93695420e41d25",
        "html_url": "https://github.com/facebook/presto/commit/817504766427bcdb423e3e495e93695420e41d25"
      }
    ]
  },
  {
    "sha": "817504766427bcdb423e3e495e93695420e41d25",
    "commit": {
      "author": {
        "name": "Joy Yao",
        "email": "jyao@fb.com",
        "date": "2015-01-30T20:57:37Z"
      },
      "committer": {
        "name": "Joy Yao",
        "email": "jyao@fb.com",
        "date": "2015-02-04T17:20:30Z"
      },
      "message": "Create HiveMetastoreClient with a TProtocol",
      "tree": {
        "sha": "a1e95872d7076b596f36889024fa620cb9dac590",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/a1e95872d7076b596f36889024fa620cb9dac590"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/817504766427bcdb423e3e495e93695420e41d25",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/817504766427bcdb423e3e495e93695420e41d25",
    "html_url": "https://github.com/facebook/presto/commit/817504766427bcdb423e3e495e93695420e41d25",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/817504766427bcdb423e3e495e93695420e41d25/comments",
    "author": {
      "login": "joy-yao",
      "id": 10444908,
      "avatar_url": "https://avatars.githubusercontent.com/u/10444908?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joy-yao",
      "html_url": "https://github.com/joy-yao",
      "followers_url": "https://api.github.com/users/joy-yao/followers",
      "following_url": "https://api.github.com/users/joy-yao/following{/other_user}",
      "gists_url": "https://api.github.com/users/joy-yao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joy-yao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joy-yao/subscriptions",
      "organizations_url": "https://api.github.com/users/joy-yao/orgs",
      "repos_url": "https://api.github.com/users/joy-yao/repos",
      "events_url": "https://api.github.com/users/joy-yao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joy-yao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "joy-yao",
      "id": 10444908,
      "avatar_url": "https://avatars.githubusercontent.com/u/10444908?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joy-yao",
      "html_url": "https://github.com/joy-yao",
      "followers_url": "https://api.github.com/users/joy-yao/followers",
      "following_url": "https://api.github.com/users/joy-yao/following{/other_user}",
      "gists_url": "https://api.github.com/users/joy-yao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joy-yao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joy-yao/subscriptions",
      "organizations_url": "https://api.github.com/users/joy-yao/orgs",
      "repos_url": "https://api.github.com/users/joy-yao/repos",
      "events_url": "https://api.github.com/users/joy-yao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joy-yao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8eba88e315e4e7d24e010da2de4e320ea91a44f9",
        "url": "https://api.github.com/repos/facebook/presto/commits/8eba88e315e4e7d24e010da2de4e320ea91a44f9",
        "html_url": "https://github.com/facebook/presto/commit/8eba88e315e4e7d24e010da2de4e320ea91a44f9"
      }
    ]
  },
  {
    "sha": "8eba88e315e4e7d24e010da2de4e320ea91a44f9",
    "commit": {
      "author": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-03T20:06:23Z"
      },
      "committer": {
        "name": "Martin Traverso",
        "email": "martint@fb.com",
        "date": "2015-02-03T20:06:23Z"
      },
      "message": "Remove incorrect check when expiring queries\n\nA query that's in the expiration queue will necessarily have an associated\nquery execution, so checking whether queries.remove() returns non-null and\nlogging an error is incorrect.",
      "tree": {
        "sha": "474008ef6197d7bfbd362a82814128f524d7e644",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/474008ef6197d7bfbd362a82814128f524d7e644"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/8eba88e315e4e7d24e010da2de4e320ea91a44f9",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/8eba88e315e4e7d24e010da2de4e320ea91a44f9",
    "html_url": "https://github.com/facebook/presto/commit/8eba88e315e4e7d24e010da2de4e320ea91a44f9",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/8eba88e315e4e7d24e010da2de4e320ea91a44f9/comments",
    "author": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martint",
      "id": 14387,
      "avatar_url": "https://avatars.githubusercontent.com/u/14387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martint",
      "html_url": "https://github.com/martint",
      "followers_url": "https://api.github.com/users/martint/followers",
      "following_url": "https://api.github.com/users/martint/following{/other_user}",
      "gists_url": "https://api.github.com/users/martint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martint/subscriptions",
      "organizations_url": "https://api.github.com/users/martint/orgs",
      "repos_url": "https://api.github.com/users/martint/repos",
      "events_url": "https://api.github.com/users/martint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martint/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c34a7355b8954cfaeebc723b1f7f5e497da8a146",
        "url": "https://api.github.com/repos/facebook/presto/commits/c34a7355b8954cfaeebc723b1f7f5e497da8a146",
        "html_url": "https://github.com/facebook/presto/commit/c34a7355b8954cfaeebc723b1f7f5e497da8a146"
      }
    ]
  },
  {
    "sha": "c34a7355b8954cfaeebc723b1f7f5e497da8a146",
    "commit": {
      "author": {
        "name": "Christopher Berner",
        "email": "christopherberner@gmail.com",
        "date": "2015-02-03T00:33:10Z"
      },
      "committer": {
        "name": "Christopher Berner",
        "email": "christopherberner@gmail.com",
        "date": "2015-02-03T18:17:56Z"
      },
      "message": "Cache specialized functions\n\nThis makes queries on relatively small amounts of data that involve\nparametric functions nearly 2x faster.",
      "tree": {
        "sha": "d48f07fc7d9a28aaeed782742f68db64c7559418",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/d48f07fc7d9a28aaeed782742f68db64c7559418"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/c34a7355b8954cfaeebc723b1f7f5e497da8a146",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/c34a7355b8954cfaeebc723b1f7f5e497da8a146",
    "html_url": "https://github.com/facebook/presto/commit/c34a7355b8954cfaeebc723b1f7f5e497da8a146",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/c34a7355b8954cfaeebc723b1f7f5e497da8a146/comments",
    "author": {
      "login": "cberner",
      "id": 842688,
      "avatar_url": "https://avatars.githubusercontent.com/u/842688?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberner",
      "html_url": "https://github.com/cberner",
      "followers_url": "https://api.github.com/users/cberner/followers",
      "following_url": "https://api.github.com/users/cberner/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberner/subscriptions",
      "organizations_url": "https://api.github.com/users/cberner/orgs",
      "repos_url": "https://api.github.com/users/cberner/repos",
      "events_url": "https://api.github.com/users/cberner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberner/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cberner",
      "id": 842688,
      "avatar_url": "https://avatars.githubusercontent.com/u/842688?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberner",
      "html_url": "https://github.com/cberner",
      "followers_url": "https://api.github.com/users/cberner/followers",
      "following_url": "https://api.github.com/users/cberner/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberner/subscriptions",
      "organizations_url": "https://api.github.com/users/cberner/orgs",
      "repos_url": "https://api.github.com/users/cberner/repos",
      "events_url": "https://api.github.com/users/cberner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberner/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc0cb1d70b390524f100c64a93a11a4bd8d3d587",
        "url": "https://api.github.com/repos/facebook/presto/commits/cc0cb1d70b390524f100c64a93a11a4bd8d3d587",
        "html_url": "https://github.com/facebook/presto/commit/cc0cb1d70b390524f100c64a93a11a4bd8d3d587"
      }
    ]
  },
  {
    "sha": "cc0cb1d70b390524f100c64a93a11a4bd8d3d587",
    "commit": {
      "author": {
        "name": "Eric Hwang",
        "email": "ehwang@fb.com",
        "date": "2015-02-03T04:49:46Z"
      },
      "committer": {
        "name": "Eric Hwang",
        "email": "ehwang@fb.com",
        "date": "2015-02-03T04:50:38Z"
      },
      "message": "Add constraint violation standard error code",
      "tree": {
        "sha": "495c544e66889ee23ed1d5428b3770c453d7ed36",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/495c544e66889ee23ed1d5428b3770c453d7ed36"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/cc0cb1d70b390524f100c64a93a11a4bd8d3d587",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/cc0cb1d70b390524f100c64a93a11a4bd8d3d587",
    "html_url": "https://github.com/facebook/presto/commit/cc0cb1d70b390524f100c64a93a11a4bd8d3d587",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/cc0cb1d70b390524f100c64a93a11a4bd8d3d587/comments",
    "author": {
      "login": "erichwang",
      "id": 737851,
      "avatar_url": "https://avatars.githubusercontent.com/u/737851?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erichwang",
      "html_url": "https://github.com/erichwang",
      "followers_url": "https://api.github.com/users/erichwang/followers",
      "following_url": "https://api.github.com/users/erichwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/erichwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erichwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erichwang/subscriptions",
      "organizations_url": "https://api.github.com/users/erichwang/orgs",
      "repos_url": "https://api.github.com/users/erichwang/repos",
      "events_url": "https://api.github.com/users/erichwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erichwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "erichwang",
      "id": 737851,
      "avatar_url": "https://avatars.githubusercontent.com/u/737851?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erichwang",
      "html_url": "https://github.com/erichwang",
      "followers_url": "https://api.github.com/users/erichwang/followers",
      "following_url": "https://api.github.com/users/erichwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/erichwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erichwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erichwang/subscriptions",
      "organizations_url": "https://api.github.com/users/erichwang/orgs",
      "repos_url": "https://api.github.com/users/erichwang/repos",
      "events_url": "https://api.github.com/users/erichwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erichwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3",
        "url": "https://api.github.com/repos/facebook/presto/commits/5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3",
        "html_url": "https://github.com/facebook/presto/commit/5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3"
      }
    ]
  },
  {
    "sha": "5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3",
    "commit": {
      "author": {
        "name": "Nezih Yigitbasi",
        "email": "nyigitbasi@netflix.com",
        "date": "2015-01-09T06:44:23Z"
      },
      "committer": {
        "name": "Christopher Berner",
        "email": "christopherberner@gmail.com",
        "date": "2015-02-03T00:58:58Z"
      },
      "message": "Do not allow null map keys in the map constructor",
      "tree": {
        "sha": "5fb9b6c7684359eccd8cf2181211c973b51426e8",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/5fb9b6c7684359eccd8cf2181211c973b51426e8"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3",
    "html_url": "https://github.com/facebook/presto/commit/5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/5032ceaa0ce83e2093aeb6f04030e1d4ec5215b3/comments",
    "author": {
      "login": "nezihyigitbasi",
      "id": 1223839,
      "avatar_url": "https://avatars.githubusercontent.com/u/1223839?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nezihyigitbasi",
      "html_url": "https://github.com/nezihyigitbasi",
      "followers_url": "https://api.github.com/users/nezihyigitbasi/followers",
      "following_url": "https://api.github.com/users/nezihyigitbasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/nezihyigitbasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nezihyigitbasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nezihyigitbasi/subscriptions",
      "organizations_url": "https://api.github.com/users/nezihyigitbasi/orgs",
      "repos_url": "https://api.github.com/users/nezihyigitbasi/repos",
      "events_url": "https://api.github.com/users/nezihyigitbasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nezihyigitbasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cberner",
      "id": 842688,
      "avatar_url": "https://avatars.githubusercontent.com/u/842688?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberner",
      "html_url": "https://github.com/cberner",
      "followers_url": "https://api.github.com/users/cberner/followers",
      "following_url": "https://api.github.com/users/cberner/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberner/subscriptions",
      "organizations_url": "https://api.github.com/users/cberner/orgs",
      "repos_url": "https://api.github.com/users/cberner/repos",
      "events_url": "https://api.github.com/users/cberner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberner/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3",
        "url": "https://api.github.com/repos/facebook/presto/commits/29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3",
        "html_url": "https://github.com/facebook/presto/commit/29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3"
      }
    ]
  },
  {
    "sha": "29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3",
    "commit": {
      "author": {
        "name": "Christopher Berner",
        "email": "christopherberner@gmail.com",
        "date": "2015-01-26T23:35:11Z"
      },
      "committer": {
        "name": "Christopher Berner",
        "email": "christopherberner@gmail.com",
        "date": "2015-02-03T00:57:32Z"
      },
      "message": "Fix type parameter binding for unknown type\n\nFix case were type parameters could remain unbound during function\nresolution, if the argument type was the unknown type",
      "tree": {
        "sha": "51c1ec8c7a9d1e806df3d27c2d8c685e6d8964af",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/51c1ec8c7a9d1e806df3d27c2d8c685e6d8964af"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3",
    "html_url": "https://github.com/facebook/presto/commit/29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/29e9e917bd1cccc05a32e5a7d6f97dfbdc4296b3/comments",
    "author": {
      "login": "cberner",
      "id": 842688,
      "avatar_url": "https://avatars.githubusercontent.com/u/842688?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberner",
      "html_url": "https://github.com/cberner",
      "followers_url": "https://api.github.com/users/cberner/followers",
      "following_url": "https://api.github.com/users/cberner/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberner/subscriptions",
      "organizations_url": "https://api.github.com/users/cberner/orgs",
      "repos_url": "https://api.github.com/users/cberner/repos",
      "events_url": "https://api.github.com/users/cberner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberner/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cberner",
      "id": 842688,
      "avatar_url": "https://avatars.githubusercontent.com/u/842688?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberner",
      "html_url": "https://github.com/cberner",
      "followers_url": "https://api.github.com/users/cberner/followers",
      "following_url": "https://api.github.com/users/cberner/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberner/subscriptions",
      "organizations_url": "https://api.github.com/users/cberner/orgs",
      "repos_url": "https://api.github.com/users/cberner/repos",
      "events_url": "https://api.github.com/users/cberner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberner/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e4185dc7a39476a7486dc3628c86964d31d0818",
        "url": "https://api.github.com/repos/facebook/presto/commits/0e4185dc7a39476a7486dc3628c86964d31d0818",
        "html_url": "https://github.com/facebook/presto/commit/0e4185dc7a39476a7486dc3628c86964d31d0818"
      }
    ]
  },
  {
    "sha": "0e4185dc7a39476a7486dc3628c86964d31d0818",
    "commit": {
      "author": {
        "name": "Min(Dongmin Yu)",
        "email": "miniway@gmail.com",
        "date": "2014-11-20T22:55:17Z"
      },
      "committer": {
        "name": "Christopher Berner",
        "email": "christopherberner@gmail.com",
        "date": "2015-02-02T20:54:33Z"
      },
      "message": "Allow verifier query set use different username and password",
      "tree": {
        "sha": "54178d7e6b0772a79398b2df07c1a4144208ffb7",
        "url": "https://api.github.com/repos/facebook/presto/git/trees/54178d7e6b0772a79398b2df07c1a4144208ffb7"
      },
      "url": "https://api.github.com/repos/facebook/presto/git/commits/0e4185dc7a39476a7486dc3628c86964d31d0818",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/facebook/presto/commits/0e4185dc7a39476a7486dc3628c86964d31d0818",
    "html_url": "https://github.com/facebook/presto/commit/0e4185dc7a39476a7486dc3628c86964d31d0818",
    "comments_url": "https://api.github.com/repos/facebook/presto/commits/0e4185dc7a39476a7486dc3628c86964d31d0818/comments",
    "author": {
      "login": "miniway",
      "id": 725129,
      "avatar_url": "https://avatars.githubusercontent.com/u/725129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miniway",
      "html_url": "https://github.com/miniway",
      "followers_url": "https://api.github.com/users/miniway/followers",
      "following_url": "https://api.github.com/users/miniway/following{/other_user}",
      "gists_url": "https://api.github.com/users/miniway/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miniway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miniway/subscriptions",
      "organizations_url": "https://api.github.com/users/miniway/orgs",
      "repos_url": "https://api.github.com/users/miniway/repos",
      "events_url": "https://api.github.com/users/miniway/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miniway/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cberner",
      "id": 842688,
      "avatar_url": "https://avatars.githubusercontent.com/u/842688?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberner",
      "html_url": "https://github.com/cberner",
      "followers_url": "https://api.github.com/users/cberner/followers",
      "following_url": "https://api.github.com/users/cberner/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberner/subscriptions",
      "organizations_url": "https://api.github.com/users/cberner/orgs",
      "repos_url": "https://api.github.com/users/cberner/repos",
      "events_url": "https://api.github.com/users/cberner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberner/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6981e55d9f1add1e835cda7957ecdc8c054ae3f9",
        "url": "https://api.github.com/repos/facebook/presto/commits/6981e55d9f1add1e835cda7957ecdc8c054ae3f9",
        "html_url": "https://github.com/facebook/presto/commit/6981e55d9f1add1e835cda7957ecdc8c054ae3f9"
      }
    ]
  }
]
},{}],"c:\\projects\\react\\app\\data\\repos\\zhouzi\\theaterjs.js":[function(require,module,exports){
module.exports = {
  "id": 28691440,
  "name": "TheaterJS",
  "full_name": "Zhouzi/TheaterJS",
  "owner": {
    "login": "Zhouzi",
    "id": 2291025,
    "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Zhouzi",
    "html_url": "https://github.com/Zhouzi",
    "followers_url": "https://api.github.com/users/Zhouzi/followers",
    "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
    "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
    "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
    "repos_url": "https://api.github.com/users/Zhouzi/repos",
    "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
    "type": "User",
    "site_admin": false
  },
  "private": false,
  "html_url": "https://github.com/Zhouzi/TheaterJS",
  "description": "Typing effect mimicking human behavior.",
  "fork": false,
  "url": "https://api.github.com/repos/Zhouzi/TheaterJS",
  "forks_url": "https://api.github.com/repos/Zhouzi/TheaterJS/forks",
  "keys_url": "https://api.github.com/repos/Zhouzi/TheaterJS/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/Zhouzi/TheaterJS/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/Zhouzi/TheaterJS/teams",
  "hooks_url": "https://api.github.com/repos/Zhouzi/TheaterJS/hooks",
  "issue_events_url": "https://api.github.com/repos/Zhouzi/TheaterJS/issues/events{/number}",
  "events_url": "https://api.github.com/repos/Zhouzi/TheaterJS/events",
  "assignees_url": "https://api.github.com/repos/Zhouzi/TheaterJS/assignees{/user}",
  "branches_url": "https://api.github.com/repos/Zhouzi/TheaterJS/branches{/branch}",
  "tags_url": "https://api.github.com/repos/Zhouzi/TheaterJS/tags",
  "blobs_url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/Zhouzi/TheaterJS/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/Zhouzi/TheaterJS/languages",
  "stargazers_url": "https://api.github.com/repos/Zhouzi/TheaterJS/stargazers",
  "contributors_url": "https://api.github.com/repos/Zhouzi/TheaterJS/contributors",
  "subscribers_url": "https://api.github.com/repos/Zhouzi/TheaterJS/subscribers",
  "subscription_url": "https://api.github.com/repos/Zhouzi/TheaterJS/subscription",
  "commits_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/Zhouzi/TheaterJS/issues/comments/{number}",
  "contents_url": "https://api.github.com/repos/Zhouzi/TheaterJS/contents/{+path}",
  "compare_url": "https://api.github.com/repos/Zhouzi/TheaterJS/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/Zhouzi/TheaterJS/merges",
  "archive_url": "https://api.github.com/repos/Zhouzi/TheaterJS/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/Zhouzi/TheaterJS/downloads",
  "issues_url": "https://api.github.com/repos/Zhouzi/TheaterJS/issues{/number}",
  "pulls_url": "https://api.github.com/repos/Zhouzi/TheaterJS/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/Zhouzi/TheaterJS/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/Zhouzi/TheaterJS/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/Zhouzi/TheaterJS/labels{/name}",
  "releases_url": "https://api.github.com/repos/Zhouzi/TheaterJS/releases{/id}",
  "created_at": "2015-01-01T17:30:25Z",
  "updated_at": "2015-02-07T12:51:04Z",
  "pushed_at": "2015-02-07T11:57:26Z",
  "git_url": "git://github.com/Zhouzi/TheaterJS.git",
  "ssh_url": "git@github.com:Zhouzi/TheaterJS.git",
  "clone_url": "https://github.com/Zhouzi/TheaterJS.git",
  "svn_url": "https://github.com/Zhouzi/TheaterJS",
  "homepage": "http://codepen.io/Zhouzi/full/JoRazP/",
  "size": 813,
  "stargazers_count": 2177,
  "watchers_count": 2177,
  "language": "JavaScript",
  "has_issues": true,
  "has_downloads": true,
  "has_wiki": false,
  "has_pages": true,
  "forks_count": 101,
  "mirror_url": null,
  "open_issues_count": 2,
  "forks": 101,
  "open_issues": 2,
  "watchers": 2177,
  "default_branch": "gh-pages",
  "network_count": 101,
  "subscribers_count": 59
}
},{}],"c:\\projects\\react\\app\\data\\repos\\zhouzi\\theaterjs\\commits.js":[function(require,module,exports){
module.exports = [
  {
    "sha": "294eeca9b6f13322d3f591d97fb3c4755e061a8a",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:56:18Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:56:18Z"
      },
      "message": "v1.2.2 TheaterJS is now available as a bower component",
      "tree": {
        "sha": "8703d2dfa65888d5946d1a7526e7a83cc84755b8",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/8703d2dfa65888d5946d1a7526e7a83cc84755b8"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/294eeca9b6f13322d3f591d97fb3c4755e061a8a",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/294eeca9b6f13322d3f591d97fb3c4755e061a8a",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/294eeca9b6f13322d3f591d97fb3c4755e061a8a",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/294eeca9b6f13322d3f591d97fb3c4755e061a8a/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad"
      }
    ]
  },
  {
    "sha": "b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:53:15Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:53:15Z"
      },
      "message": "Merge branch 'devanp92-gh-pages' into gh-pages",
      "tree": {
        "sha": "f905721372afb0bfd563cede487b7325060bfb94",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/f905721372afb0bfd563cede487b7325060bfb94"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b8668cd1611f9d46dbeeeb3ba131b06705e5e3ad/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1dc3f3736ffe73b999854e4b779f2a8047362118",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/1dc3f3736ffe73b999854e4b779f2a8047362118",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/1dc3f3736ffe73b999854e4b779f2a8047362118"
      },
      {
        "sha": "b11a4d7e1ee03911282171d59646e6d316d4f27c",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b11a4d7e1ee03911282171d59646e6d316d4f27c",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/b11a4d7e1ee03911282171d59646e6d316d4f27c"
      }
    ]
  },
  {
    "sha": "b11a4d7e1ee03911282171d59646e6d316d4f27c",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:52:27Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:52:27Z"
      },
      "message": "update bower.json",
      "tree": {
        "sha": "f905721372afb0bfd563cede487b7325060bfb94",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/f905721372afb0bfd563cede487b7325060bfb94"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/b11a4d7e1ee03911282171d59646e6d316d4f27c",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b11a4d7e1ee03911282171d59646e6d316d4f27c",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/b11a4d7e1ee03911282171d59646e6d316d4f27c",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b11a4d7e1ee03911282171d59646e6d316d4f27c/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98df2514c5a980d79d2ffcf142e7c1d4bff8629c",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/98df2514c5a980d79d2ffcf142e7c1d4bff8629c",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/98df2514c5a980d79d2ffcf142e7c1d4bff8629c"
      }
    ]
  },
  {
    "sha": "98df2514c5a980d79d2ffcf142e7c1d4bff8629c",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:39:18Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:39:18Z"
      },
      "message": "update bower.json",
      "tree": {
        "sha": "5faf48635059dd75f5d075d01a68b985aa79f421",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/5faf48635059dd75f5d075d01a68b985aa79f421"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/98df2514c5a980d79d2ffcf142e7c1d4bff8629c",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/98df2514c5a980d79d2ffcf142e7c1d4bff8629c",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/98df2514c5a980d79d2ffcf142e7c1d4bff8629c",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/98df2514c5a980d79d2ffcf142e7c1d4bff8629c/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "86169630aab5ac10d33165c6d86d65e50a97b315",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/86169630aab5ac10d33165c6d86d65e50a97b315",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/86169630aab5ac10d33165c6d86d65e50a97b315"
      }
    ]
  },
  {
    "sha": "86169630aab5ac10d33165c6d86d65e50a97b315",
    "commit": {
      "author": {
        "name": "Devan Patel",
        "email": "devanppatel92@gmail.com",
        "date": "2015-01-31T18:03:13Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:32:40Z"
      },
      "message": "Adding homepage",
      "tree": {
        "sha": "b6f42b7441311b19a0365aa6b49f68fa0f6ffa95",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/b6f42b7441311b19a0365aa6b49f68fa0f6ffa95"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/86169630aab5ac10d33165c6d86d65e50a97b315",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/86169630aab5ac10d33165c6d86d65e50a97b315",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/86169630aab5ac10d33165c6d86d65e50a97b315",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/86169630aab5ac10d33165c6d86d65e50a97b315/comments",
    "author": {
      "login": "devanp92",
      "id": 4533277,
      "avatar_url": "https://avatars.githubusercontent.com/u/4533277?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devanp92",
      "html_url": "https://github.com/devanp92",
      "followers_url": "https://api.github.com/users/devanp92/followers",
      "following_url": "https://api.github.com/users/devanp92/following{/other_user}",
      "gists_url": "https://api.github.com/users/devanp92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devanp92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devanp92/subscriptions",
      "organizations_url": "https://api.github.com/users/devanp92/orgs",
      "repos_url": "https://api.github.com/users/devanp92/repos",
      "events_url": "https://api.github.com/users/devanp92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devanp92/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a64337c45b5a532894645431a80a7e9083b42139",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/a64337c45b5a532894645431a80a7e9083b42139",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/a64337c45b5a532894645431a80a7e9083b42139"
      }
    ]
  },
  {
    "sha": "a64337c45b5a532894645431a80a7e9083b42139",
    "commit": {
      "author": {
        "name": "Devan Patel",
        "email": "devanppatel92@gmail.com",
        "date": "2015-01-31T17:55:21Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:32:40Z"
      },
      "message": "Adding bower.json",
      "tree": {
        "sha": "a179ccbc5cf27608c7874cd00a320a49fc029c17",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/a179ccbc5cf27608c7874cd00a320a49fc029c17"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/a64337c45b5a532894645431a80a7e9083b42139",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/a64337c45b5a532894645431a80a7e9083b42139",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/a64337c45b5a532894645431a80a7e9083b42139",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/a64337c45b5a532894645431a80a7e9083b42139/comments",
    "author": {
      "login": "devanp92",
      "id": 4533277,
      "avatar_url": "https://avatars.githubusercontent.com/u/4533277?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devanp92",
      "html_url": "https://github.com/devanp92",
      "followers_url": "https://api.github.com/users/devanp92/followers",
      "following_url": "https://api.github.com/users/devanp92/following{/other_user}",
      "gists_url": "https://api.github.com/users/devanp92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devanp92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devanp92/subscriptions",
      "organizations_url": "https://api.github.com/users/devanp92/orgs",
      "repos_url": "https://api.github.com/users/devanp92/repos",
      "events_url": "https://api.github.com/users/devanp92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devanp92/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1dc3f3736ffe73b999854e4b779f2a8047362118",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/1dc3f3736ffe73b999854e4b779f2a8047362118",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/1dc3f3736ffe73b999854e4b779f2a8047362118"
      }
    ]
  },
  {
    "sha": "1dc3f3736ffe73b999854e4b779f2a8047362118",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:25:45Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:25:45Z"
      },
      "message": "fix dependencies declaration package.json",
      "tree": {
        "sha": "7fed1965e7811d7c1dcc2c083887315a0a045e2c",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/7fed1965e7811d7c1dcc2c083887315a0a045e2c"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/1dc3f3736ffe73b999854e4b779f2a8047362118",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/1dc3f3736ffe73b999854e4b779f2a8047362118",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/1dc3f3736ffe73b999854e4b779f2a8047362118",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/1dc3f3736ffe73b999854e4b779f2a8047362118/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7"
      }
    ]
  },
  {
    "sha": "5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7",
    "commit": {
      "author": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-07T11:18:46Z"
      },
      "committer": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-07T11:18:46Z"
      },
      "message": "temp html demo",
      "tree": {
        "sha": "556e32d46de80ba5e24cbc280e66cc6466da40dd",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/556e32d46de80ba5e24cbc280e66cc6466da40dd"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/5a1e80c1c80c6f9815e899934a3b4abf8d60b9c7/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3248d8388279b92412d069656777521d5a9b276",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b3248d8388279b92412d069656777521d5a9b276",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/b3248d8388279b92412d069656777521d5a9b276"
      }
    ]
  },
  {
    "sha": "b3248d8388279b92412d069656777521d5a9b276",
    "commit": {
      "author": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-07T11:13:26Z"
      },
      "committer": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-07T11:13:26Z"
      },
      "message": "adding pt to available locales",
      "tree": {
        "sha": "6aeca7e43df0b058e9aa9fb2c27bc01aab017d93",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/6aeca7e43df0b058e9aa9fb2c27bc01aab017d93"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/b3248d8388279b92412d069656777521d5a9b276",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b3248d8388279b92412d069656777521d5a9b276",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/b3248d8388279b92412d069656777521d5a9b276",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/b3248d8388279b92412d069656777521d5a9b276/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2f0c28c48c1fac8a20550828eb80c6822630ef7",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/f2f0c28c48c1fac8a20550828eb80c6822630ef7",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/f2f0c28c48c1fac8a20550828eb80c6822630ef7"
      }
    ]
  },
  {
    "sha": "f2f0c28c48c1fac8a20550828eb80c6822630ef7",
    "commit": {
      "author": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-07T11:11:23Z"
      },
      "committer": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-07T11:11:23Z"
      },
      "message": "Merge pull request #28 from fernandofussuma/pt\n\npt locale",
      "tree": {
        "sha": "abfee96ff66baa5670f6674f80c8f4dfbe4628ca",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/abfee96ff66baa5670f6674f80c8f4dfbe4628ca"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/f2f0c28c48c1fac8a20550828eb80c6822630ef7",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/f2f0c28c48c1fac8a20550828eb80c6822630ef7",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/f2f0c28c48c1fac8a20550828eb80c6822630ef7",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/f2f0c28c48c1fac8a20550828eb80c6822630ef7/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b3b7194e8557cc9ea1cfc43b2016dd979cb9551",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/7b3b7194e8557cc9ea1cfc43b2016dd979cb9551",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/7b3b7194e8557cc9ea1cfc43b2016dd979cb9551"
      },
      {
        "sha": "742f89db1e2e40748723299c2f1d61a81c11d5df",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/742f89db1e2e40748723299c2f1d61a81c11d5df",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/742f89db1e2e40748723299c2f1d61a81c11d5df"
      }
    ]
  },
  {
    "sha": "7b3b7194e8557cc9ea1cfc43b2016dd979cb9551",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:09:51Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:09:51Z"
      },
      "message": "fix #26",
      "tree": {
        "sha": "8a48e5969970ddaa92da58ee03969e33bd37f645",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/8a48e5969970ddaa92da58ee03969e33bd37f645"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/7b3b7194e8557cc9ea1cfc43b2016dd979cb9551",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/7b3b7194e8557cc9ea1cfc43b2016dd979cb9551",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/7b3b7194e8557cc9ea1cfc43b2016dd979cb9551",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/7b3b7194e8557cc9ea1cfc43b2016dd979cb9551/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c61e8de85aea669b64552a23bcd6d19e77999029",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/c61e8de85aea669b64552a23bcd6d19e77999029",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/c61e8de85aea669b64552a23bcd6d19e77999029"
      }
    ]
  },
  {
    "sha": "c61e8de85aea669b64552a23bcd6d19e77999029",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:07:38Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-07T11:07:38Z"
      },
      "message": "demo page rollback",
      "tree": {
        "sha": "423ef8c774e87b800958a9d82d3db85b82352692",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/423ef8c774e87b800958a9d82d3db85b82352692"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/c61e8de85aea669b64552a23bcd6d19e77999029",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/c61e8de85aea669b64552a23bcd6d19e77999029",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/c61e8de85aea669b64552a23bcd6d19e77999029",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/c61e8de85aea669b64552a23bcd6d19e77999029/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8637cb3bf577006ecf791768141e700d238dff9",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/d8637cb3bf577006ecf791768141e700d238dff9",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/d8637cb3bf577006ecf791768141e700d238dff9"
      }
    ]
  },
  {
    "sha": "d8637cb3bf577006ecf791768141e700d238dff9",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T23:27:05Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T23:27:05Z"
      },
      "message": "improving and fixing inject+map HTML",
      "tree": {
        "sha": "678ad09f28f03281058564ef5d7167440cc7a45e",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/678ad09f28f03281058564ef5d7167440cc7a45e"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/d8637cb3bf577006ecf791768141e700d238dff9",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/d8637cb3bf577006ecf791768141e700d238dff9",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/d8637cb3bf577006ecf791768141e700d238dff9",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/d8637cb3bf577006ecf791768141e700d238dff9/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "040d19a89f0a0131ad7f1f9f8775b03f0cb9eede",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/040d19a89f0a0131ad7f1f9f8775b03f0cb9eede",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/040d19a89f0a0131ad7f1f9f8775b03f0cb9eede"
      }
    ]
  },
  {
    "sha": "742f89db1e2e40748723299c2f1d61a81c11d5df",
    "commit": {
      "author": {
        "name": "Fernando Fussuma",
        "email": "fernandofussuma@gmail.com",
        "date": "2015-02-06T16:12:47Z"
      },
      "committer": {
        "name": "Fernando Fussuma",
        "email": "fernandofussuma@gmail.com",
        "date": "2015-02-06T16:12:47Z"
      },
      "message": "Portuguese keyboard layout, demo dialogue",
      "tree": {
        "sha": "266b78019f4702271cce53c71ecfd119f671b378",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/266b78019f4702271cce53c71ecfd119f671b378"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/742f89db1e2e40748723299c2f1d61a81c11d5df",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/742f89db1e2e40748723299c2f1d61a81c11d5df",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/742f89db1e2e40748723299c2f1d61a81c11d5df",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/742f89db1e2e40748723299c2f1d61a81c11d5df/comments",
    "author": {
      "login": "fernandofussuma",
      "id": 863093,
      "avatar_url": "https://avatars.githubusercontent.com/u/863093?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fernandofussuma",
      "html_url": "https://github.com/fernandofussuma",
      "followers_url": "https://api.github.com/users/fernandofussuma/followers",
      "following_url": "https://api.github.com/users/fernandofussuma/following{/other_user}",
      "gists_url": "https://api.github.com/users/fernandofussuma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fernandofussuma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fernandofussuma/subscriptions",
      "organizations_url": "https://api.github.com/users/fernandofussuma/orgs",
      "repos_url": "https://api.github.com/users/fernandofussuma/repos",
      "events_url": "https://api.github.com/users/fernandofussuma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fernandofussuma/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fernandofussuma",
      "id": 863093,
      "avatar_url": "https://avatars.githubusercontent.com/u/863093?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fernandofussuma",
      "html_url": "https://github.com/fernandofussuma",
      "followers_url": "https://api.github.com/users/fernandofussuma/followers",
      "following_url": "https://api.github.com/users/fernandofussuma/following{/other_user}",
      "gists_url": "https://api.github.com/users/fernandofussuma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fernandofussuma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fernandofussuma/subscriptions",
      "organizations_url": "https://api.github.com/users/fernandofussuma/orgs",
      "repos_url": "https://api.github.com/users/fernandofussuma/repos",
      "events_url": "https://api.github.com/users/fernandofussuma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fernandofussuma/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd250499f3ef728fa88eee8060091e785b434707",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/fd250499f3ef728fa88eee8060091e785b434707",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/fd250499f3ef728fa88eee8060091e785b434707"
      }
    ]
  },
  {
    "sha": "fd250499f3ef728fa88eee8060091e785b434707",
    "commit": {
      "author": {
        "name": "Fernando Fussuma",
        "email": "fernandofussuma@gmail.com",
        "date": "2015-02-06T15:56:19Z"
      },
      "committer": {
        "name": "Fernando Fussuma",
        "email": "fernandofussuma@gmail.com",
        "date": "2015-02-06T15:56:19Z"
      },
      "message": "Portuguese keyboard layout, demo dialogue",
      "tree": {
        "sha": "251374a94dd8b53771d69db806da3d7d17c2ff6f",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/251374a94dd8b53771d69db806da3d7d17c2ff6f"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/fd250499f3ef728fa88eee8060091e785b434707",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/fd250499f3ef728fa88eee8060091e785b434707",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/fd250499f3ef728fa88eee8060091e785b434707",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/fd250499f3ef728fa88eee8060091e785b434707/comments",
    "author": {
      "login": "fernandofussuma",
      "id": 863093,
      "avatar_url": "https://avatars.githubusercontent.com/u/863093?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fernandofussuma",
      "html_url": "https://github.com/fernandofussuma",
      "followers_url": "https://api.github.com/users/fernandofussuma/followers",
      "following_url": "https://api.github.com/users/fernandofussuma/following{/other_user}",
      "gists_url": "https://api.github.com/users/fernandofussuma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fernandofussuma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fernandofussuma/subscriptions",
      "organizations_url": "https://api.github.com/users/fernandofussuma/orgs",
      "repos_url": "https://api.github.com/users/fernandofussuma/repos",
      "events_url": "https://api.github.com/users/fernandofussuma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fernandofussuma/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fernandofussuma",
      "id": 863093,
      "avatar_url": "https://avatars.githubusercontent.com/u/863093?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fernandofussuma",
      "html_url": "https://github.com/fernandofussuma",
      "followers_url": "https://api.github.com/users/fernandofussuma/followers",
      "following_url": "https://api.github.com/users/fernandofussuma/following{/other_user}",
      "gists_url": "https://api.github.com/users/fernandofussuma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fernandofussuma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fernandofussuma/subscriptions",
      "organizations_url": "https://api.github.com/users/fernandofussuma/orgs",
      "repos_url": "https://api.github.com/users/fernandofussuma/repos",
      "events_url": "https://api.github.com/users/fernandofussuma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fernandofussuma/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/4e7779ec70109dbf4b550e6bc8e2b301eb946adb"
      }
    ]
  },
  {
    "sha": "040d19a89f0a0131ad7f1f9f8775b03f0cb9eede",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T13:30:04Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T13:30:04Z"
      },
      "message": "inject html method",
      "tree": {
        "sha": "790320609607a2656b75e95819cca96039f8a94e",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/790320609607a2656b75e95819cca96039f8a94e"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/040d19a89f0a0131ad7f1f9f8775b03f0cb9eede",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/040d19a89f0a0131ad7f1f9f8775b03f0cb9eede",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/040d19a89f0a0131ad7f1f9f8775b03f0cb9eede",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/040d19a89f0a0131ad7f1f9f8775b03f0cb9eede/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "811ab16978ee5d5aa0a956b91fbaa82aca47f24f",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/811ab16978ee5d5aa0a956b91fbaa82aca47f24f",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/811ab16978ee5d5aa0a956b91fbaa82aca47f24f"
      }
    ]
  },
  {
    "sha": "811ab16978ee5d5aa0a956b91fbaa82aca47f24f",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T12:23:29Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T12:23:29Z"
      },
      "message": "mapHTML method in utils",
      "tree": {
        "sha": "64b36ff4c1cca65d1541a7c966e2b90d64c188d5",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/64b36ff4c1cca65d1541a7c966e2b90d64c188d5"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/811ab16978ee5d5aa0a956b91fbaa82aca47f24f",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/811ab16978ee5d5aa0a956b91fbaa82aca47f24f",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/811ab16978ee5d5aa0a956b91fbaa82aca47f24f",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/811ab16978ee5d5aa0a956b91fbaa82aca47f24f/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5108edf432faaa3ac333a028a01c4b5473db835b",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/5108edf432faaa3ac333a028a01c4b5473db835b",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/5108edf432faaa3ac333a028a01c4b5473db835b"
      }
    ]
  },
  {
    "sha": "5108edf432faaa3ac333a028a01c4b5473db835b",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T12:08:41Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T12:08:41Z"
      },
      "message": "remove previous implementation",
      "tree": {
        "sha": "bca6e56332d7d1929319d5f3ed55222d417c7e2a",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/bca6e56332d7d1929319d5f3ed55222d417c7e2a"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/5108edf432faaa3ac333a028a01c4b5473db835b",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/5108edf432faaa3ac333a028a01c4b5473db835b",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/5108edf432faaa3ac333a028a01c4b5473db835b",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/5108edf432faaa3ac333a028a01c4b5473db835b/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/4e7779ec70109dbf4b550e6bc8e2b301eb946adb"
      }
    ]
  },
  {
    "sha": "4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T09:34:36Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-06T09:34:36Z"
      },
      "message": "decreasing mistakes probability",
      "tree": {
        "sha": "214a7b1ab4634ddcef0abdb896d3aadbf60fd097",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/214a7b1ab4634ddcef0abdb896d3aadbf60fd097"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/4e7779ec70109dbf4b550e6bc8e2b301eb946adb",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/4e7779ec70109dbf4b550e6bc8e2b301eb946adb/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8d1ca6c8cba883df59d883e80b7c7e65a2109e4",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/c8d1ca6c8cba883df59d883e80b7c7e65a2109e4",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/c8d1ca6c8cba883df59d883e80b7c7e65a2109e4"
      }
    ]
  },
  {
    "sha": "c8d1ca6c8cba883df59d883e80b7c7e65a2109e4",
    "commit": {
      "author": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-03T12:59:44Z"
      },
      "committer": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-03T12:59:44Z"
      },
      "message": "adding a note about html support",
      "tree": {
        "sha": "21c32e7132dcd7b06b75ca86aac9811764669624",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/21c32e7132dcd7b06b75ca86aac9811764669624"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/c8d1ca6c8cba883df59d883e80b7c7e65a2109e4",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/c8d1ca6c8cba883df59d883e80b7c7e65a2109e4",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/c8d1ca6c8cba883df59d883e80b7c7e65a2109e4",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/c8d1ca6c8cba883df59d883e80b7c7e65a2109e4/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bcade5d50420b79c990fcc9e7b77d1af1bcec7e",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/4bcade5d50420b79c990fcc9e7b77d1af1bcec7e",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/4bcade5d50420b79c990fcc9e7b77d1af1bcec7e"
      }
    ]
  },
  {
    "sha": "4bcade5d50420b79c990fcc9e7b77d1af1bcec7e",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-03T12:46:47Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-03T12:46:47Z"
      },
      "message": "fix conflicts",
      "tree": {
        "sha": "2bb1f00409b4e145a60f281267fd01327a26ac26",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/2bb1f00409b4e145a60f281267fd01327a26ac26"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/4bcade5d50420b79c990fcc9e7b77d1af1bcec7e",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/4bcade5d50420b79c990fcc9e7b77d1af1bcec7e",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/4bcade5d50420b79c990fcc9e7b77d1af1bcec7e",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/4bcade5d50420b79c990fcc9e7b77d1af1bcec7e/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cdc3f4fd2c7639c24ddc660784253d23e6e6db8",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/3cdc3f4fd2c7639c24ddc660784253d23e6e6db8",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/3cdc3f4fd2c7639c24ddc660784253d23e6e6db8"
      },
      {
        "sha": "dd745b23db57d9bb93321afbe4ad006c378987b6",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/dd745b23db57d9bb93321afbe4ad006c378987b6",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/dd745b23db57d9bb93321afbe4ad006c378987b6"
      }
    ]
  },
  {
    "sha": "dd745b23db57d9bb93321afbe4ad006c378987b6",
    "commit": {
      "author": {
        "name": "prrrnd",
        "email": "pierre.baciocchini@gmail.com",
        "date": "2015-02-03T07:36:51Z"
      },
      "committer": {
        "name": "prrrnd",
        "email": "pierre.baciocchini@gmail.com",
        "date": "2015-02-03T07:36:51Z"
      },
      "message": "Added danish to available locales in README",
      "tree": {
        "sha": "3f3abf2413bf9664cfd51cf25b736993bf7e45e2",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/3f3abf2413bf9664cfd51cf25b736993bf7e45e2"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/dd745b23db57d9bb93321afbe4ad006c378987b6",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/dd745b23db57d9bb93321afbe4ad006c378987b6",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/dd745b23db57d9bb93321afbe4ad006c378987b6",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/dd745b23db57d9bb93321afbe4ad006c378987b6/comments",
    "author": {
      "login": "prrrnd",
      "id": 2150204,
      "avatar_url": "https://avatars.githubusercontent.com/u/2150204?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prrrnd",
      "html_url": "https://github.com/prrrnd",
      "followers_url": "https://api.github.com/users/prrrnd/followers",
      "following_url": "https://api.github.com/users/prrrnd/following{/other_user}",
      "gists_url": "https://api.github.com/users/prrrnd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prrrnd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prrrnd/subscriptions",
      "organizations_url": "https://api.github.com/users/prrrnd/orgs",
      "repos_url": "https://api.github.com/users/prrrnd/repos",
      "events_url": "https://api.github.com/users/prrrnd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prrrnd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "prrrnd",
      "id": 2150204,
      "avatar_url": "https://avatars.githubusercontent.com/u/2150204?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prrrnd",
      "html_url": "https://github.com/prrrnd",
      "followers_url": "https://api.github.com/users/prrrnd/followers",
      "following_url": "https://api.github.com/users/prrrnd/following{/other_user}",
      "gists_url": "https://api.github.com/users/prrrnd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prrrnd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prrrnd/subscriptions",
      "organizations_url": "https://api.github.com/users/prrrnd/orgs",
      "repos_url": "https://api.github.com/users/prrrnd/repos",
      "events_url": "https://api.github.com/users/prrrnd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prrrnd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9108213b2fd8325cc89db95b2096c9520ae8bc9a",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/9108213b2fd8325cc89db95b2096c9520ae8bc9a",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/9108213b2fd8325cc89db95b2096c9520ae8bc9a"
      }
    ]
  },
  {
    "sha": "3cdc3f4fd2c7639c24ddc660784253d23e6e6db8",
    "commit": {
      "author": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-02T08:53:13Z"
      },
      "committer": {
        "name": "Gabin Aureche",
        "email": "gabin.aureche@live.fr",
        "date": "2015-02-02T08:53:13Z"
      },
      "message": "Merge pull request #24 from andrusieczko/gh-pages\n\nPolish keyboard layout",
      "tree": {
        "sha": "102f703484e7be75585c6e018ffe9af62ecb2ef1",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/102f703484e7be75585c6e018ffe9af62ecb2ef1"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/3cdc3f4fd2c7639c24ddc660784253d23e6e6db8",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/3cdc3f4fd2c7639c24ddc660784253d23e6e6db8",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/3cdc3f4fd2c7639c24ddc660784253d23e6e6db8",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/3cdc3f4fd2c7639c24ddc660784253d23e6e6db8/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "32c1c7135e049d4cc7c9d54910423621a7837607",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/32c1c7135e049d4cc7c9d54910423621a7837607",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/32c1c7135e049d4cc7c9d54910423621a7837607"
      },
      {
        "sha": "3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f"
      }
    ]
  },
  {
    "sha": "32c1c7135e049d4cc7c9d54910423621a7837607",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:48:08Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:48:08Z"
      },
      "message": "update log format da demo",
      "tree": {
        "sha": "0a922fba8ddc437c858892875f84fe190fcccbbe",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/0a922fba8ddc437c858892875f84fe190fcccbbe"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/32c1c7135e049d4cc7c9d54910423621a7837607",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/32c1c7135e049d4cc7c9d54910423621a7837607",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/32c1c7135e049d4cc7c9d54910423621a7837607",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/32c1c7135e049d4cc7c9d54910423621a7837607/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb03d0960b1d7297c1c2769afcca7e5e7d28dc44",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/bb03d0960b1d7297c1c2769afcca7e5e7d28dc44",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/bb03d0960b1d7297c1c2769afcca7e5e7d28dc44"
      }
    ]
  },
  {
    "sha": "bb03d0960b1d7297c1c2769afcca7e5e7d28dc44",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:46:56Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:46:56Z"
      },
      "message": "fix formatting details",
      "tree": {
        "sha": "e458de6ed98e6d32cb06e1171b4e2f3cd4a56476",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/e458de6ed98e6d32cb06e1171b4e2f3cd4a56476"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/bb03d0960b1d7297c1c2769afcca7e5e7d28dc44",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/bb03d0960b1d7297c1c2769afcca7e5e7d28dc44",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/bb03d0960b1d7297c1c2769afcca7e5e7d28dc44",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/bb03d0960b1d7297c1c2769afcca7e5e7d28dc44/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "983ce6f471d215872db7e8f0e3306f69c9fcc376",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/983ce6f471d215872db7e8f0e3306f69c9fcc376",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/983ce6f471d215872db7e8f0e3306f69c9fcc376"
      }
    ]
  },
  {
    "sha": "983ce6f471d215872db7e8f0e3306f69c9fcc376",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:43:59Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:43:59Z"
      },
      "message": "Merge branch 'prrrnd-da-keyboard' into gh-pages",
      "tree": {
        "sha": "8783e99070e9bdcb209fabc2d246d10dd351d072",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/8783e99070e9bdcb209fabc2d246d10dd351d072"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/983ce6f471d215872db7e8f0e3306f69c9fcc376",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/983ce6f471d215872db7e8f0e3306f69c9fcc376",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/983ce6f471d215872db7e8f0e3306f69c9fcc376",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/983ce6f471d215872db7e8f0e3306f69c9fcc376/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d94b126533b6a26b750d745671905c858246c4aa",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/d94b126533b6a26b750d745671905c858246c4aa",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/d94b126533b6a26b750d745671905c858246c4aa"
      },
      {
        "sha": "967f4e3c7d8de418bc736e78c94558b431c8838c",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/967f4e3c7d8de418bc736e78c94558b431c8838c",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/967f4e3c7d8de418bc736e78c94558b431c8838c"
      }
    ]
  },
  {
    "sha": "967f4e3c7d8de418bc736e78c94558b431c8838c",
    "commit": {
      "author": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:43:37Z"
      },
      "committer": {
        "name": "Gabin",
        "email": "hello@gabinaureche.com",
        "date": "2015-02-02T08:43:37Z"
      },
      "message": "fix conflicts",
      "tree": {
        "sha": "8783e99070e9bdcb209fabc2d246d10dd351d072",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/8783e99070e9bdcb209fabc2d246d10dd351d072"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/967f4e3c7d8de418bc736e78c94558b431c8838c",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/967f4e3c7d8de418bc736e78c94558b431c8838c",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/967f4e3c7d8de418bc736e78c94558b431c8838c",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/967f4e3c7d8de418bc736e78c94558b431c8838c/comments",
    "author": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zhouzi",
      "id": 2291025,
      "avatar_url": "https://avatars.githubusercontent.com/u/2291025?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhouzi",
      "html_url": "https://github.com/Zhouzi",
      "followers_url": "https://api.github.com/users/Zhouzi/followers",
      "following_url": "https://api.github.com/users/Zhouzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhouzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhouzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhouzi/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhouzi/orgs",
      "repos_url": "https://api.github.com/users/Zhouzi/repos",
      "events_url": "https://api.github.com/users/Zhouzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhouzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d94b126533b6a26b750d745671905c858246c4aa",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/d94b126533b6a26b750d745671905c858246c4aa",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/d94b126533b6a26b750d745671905c858246c4aa"
      },
      {
        "sha": "9108213b2fd8325cc89db95b2096c9520ae8bc9a",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/9108213b2fd8325cc89db95b2096c9520ae8bc9a",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/9108213b2fd8325cc89db95b2096c9520ae8bc9a"
      }
    ]
  },
  {
    "sha": "3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f",
    "commit": {
      "author": {
        "name": "Karol Andrusieczko",
        "email": "karol.andrusieczko@gmail.com",
        "date": "2015-02-01T08:55:47Z"
      },
      "committer": {
        "name": "Karol Andrusieczko",
        "email": "karol.andrusieczko@gmail.com",
        "date": "2015-02-01T08:55:47Z"
      },
      "message": "add Polish to readme, fix contributing instruction",
      "tree": {
        "sha": "205491fd83b10ef95647402ff498b118a07229f6",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/205491fd83b10ef95647402ff498b118a07229f6"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/3bee28f68b8ae10829ecbd208cae7d3f9e7d0d0f/comments",
    "author": {
      "login": "andrusieczko",
      "id": 3026980,
      "avatar_url": "https://avatars.githubusercontent.com/u/3026980?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrusieczko",
      "html_url": "https://github.com/andrusieczko",
      "followers_url": "https://api.github.com/users/andrusieczko/followers",
      "following_url": "https://api.github.com/users/andrusieczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrusieczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrusieczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrusieczko/subscriptions",
      "organizations_url": "https://api.github.com/users/andrusieczko/orgs",
      "repos_url": "https://api.github.com/users/andrusieczko/repos",
      "events_url": "https://api.github.com/users/andrusieczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrusieczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrusieczko",
      "id": 3026980,
      "avatar_url": "https://avatars.githubusercontent.com/u/3026980?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrusieczko",
      "html_url": "https://github.com/andrusieczko",
      "followers_url": "https://api.github.com/users/andrusieczko/followers",
      "following_url": "https://api.github.com/users/andrusieczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrusieczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrusieczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrusieczko/subscriptions",
      "organizations_url": "https://api.github.com/users/andrusieczko/orgs",
      "repos_url": "https://api.github.com/users/andrusieczko/repos",
      "events_url": "https://api.github.com/users/andrusieczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrusieczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42d45ee4c5d644071abbf9531bd2026843779a9c",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/42d45ee4c5d644071abbf9531bd2026843779a9c",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/42d45ee4c5d644071abbf9531bd2026843779a9c"
      }
    ]
  },
  {
    "sha": "42d45ee4c5d644071abbf9531bd2026843779a9c",
    "commit": {
      "author": {
        "name": "Karol Andrusieczko",
        "email": "karol.andrusieczko@gmail.com",
        "date": "2015-02-01T08:49:33Z"
      },
      "committer": {
        "name": "Karol Andrusieczko",
        "email": "karol.andrusieczko@gmail.com",
        "date": "2015-02-01T08:49:33Z"
      },
      "message": "Polish keyboard layout",
      "tree": {
        "sha": "52883547265154e42dce907e923c1848a6b923a4",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/52883547265154e42dce907e923c1848a6b923a4"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/42d45ee4c5d644071abbf9531bd2026843779a9c",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/42d45ee4c5d644071abbf9531bd2026843779a9c",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/42d45ee4c5d644071abbf9531bd2026843779a9c",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/42d45ee4c5d644071abbf9531bd2026843779a9c/comments",
    "author": {
      "login": "andrusieczko",
      "id": 3026980,
      "avatar_url": "https://avatars.githubusercontent.com/u/3026980?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrusieczko",
      "html_url": "https://github.com/andrusieczko",
      "followers_url": "https://api.github.com/users/andrusieczko/followers",
      "following_url": "https://api.github.com/users/andrusieczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrusieczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrusieczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrusieczko/subscriptions",
      "organizations_url": "https://api.github.com/users/andrusieczko/orgs",
      "repos_url": "https://api.github.com/users/andrusieczko/repos",
      "events_url": "https://api.github.com/users/andrusieczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrusieczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrusieczko",
      "id": 3026980,
      "avatar_url": "https://avatars.githubusercontent.com/u/3026980?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrusieczko",
      "html_url": "https://github.com/andrusieczko",
      "followers_url": "https://api.github.com/users/andrusieczko/followers",
      "following_url": "https://api.github.com/users/andrusieczko/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrusieczko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrusieczko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrusieczko/subscriptions",
      "organizations_url": "https://api.github.com/users/andrusieczko/orgs",
      "repos_url": "https://api.github.com/users/andrusieczko/repos",
      "events_url": "https://api.github.com/users/andrusieczko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrusieczko/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d94b126533b6a26b750d745671905c858246c4aa",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/d94b126533b6a26b750d745671905c858246c4aa",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/d94b126533b6a26b750d745671905c858246c4aa"
      }
    ]
  },
  {
    "sha": "9108213b2fd8325cc89db95b2096c9520ae8bc9a",
    "commit": {
      "author": {
        "name": "@prrrnd",
        "email": "pierre.baciocchini@gmail.com",
        "date": "2015-01-26T19:38:57Z"
      },
      "committer": {
        "name": "@prrrnd",
        "email": "pierre.baciocchini@gmail.com",
        "date": "2015-01-26T19:38:57Z"
      },
      "message": "Translated dialog to danish",
      "tree": {
        "sha": "9b943f5f24a8efd4a59dd4a308bd506743172fb2",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/trees/9b943f5f24a8efd4a59dd4a308bd506743172fb2"
      },
      "url": "https://api.github.com/repos/Zhouzi/TheaterJS/git/commits/9108213b2fd8325cc89db95b2096c9520ae8bc9a",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/9108213b2fd8325cc89db95b2096c9520ae8bc9a",
    "html_url": "https://github.com/Zhouzi/TheaterJS/commit/9108213b2fd8325cc89db95b2096c9520ae8bc9a",
    "comments_url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/9108213b2fd8325cc89db95b2096c9520ae8bc9a/comments",
    "author": {
      "login": "prrrnd",
      "id": 2150204,
      "avatar_url": "https://avatars.githubusercontent.com/u/2150204?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prrrnd",
      "html_url": "https://github.com/prrrnd",
      "followers_url": "https://api.github.com/users/prrrnd/followers",
      "following_url": "https://api.github.com/users/prrrnd/following{/other_user}",
      "gists_url": "https://api.github.com/users/prrrnd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prrrnd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prrrnd/subscriptions",
      "organizations_url": "https://api.github.com/users/prrrnd/orgs",
      "repos_url": "https://api.github.com/users/prrrnd/repos",
      "events_url": "https://api.github.com/users/prrrnd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prrrnd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "prrrnd",
      "id": 2150204,
      "avatar_url": "https://avatars.githubusercontent.com/u/2150204?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prrrnd",
      "html_url": "https://github.com/prrrnd",
      "followers_url": "https://api.github.com/users/prrrnd/followers",
      "following_url": "https://api.github.com/users/prrrnd/following{/other_user}",
      "gists_url": "https://api.github.com/users/prrrnd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prrrnd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prrrnd/subscriptions",
      "organizations_url": "https://api.github.com/users/prrrnd/orgs",
      "repos_url": "https://api.github.com/users/prrrnd/repos",
      "events_url": "https://api.github.com/users/prrrnd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prrrnd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2595eb8773668eef82b017200fa69100fef11e76",
        "url": "https://api.github.com/repos/Zhouzi/TheaterJS/commits/2595eb8773668eef82b017200fa69100fef11e76",
        "html_url": "https://github.com/Zhouzi/TheaterJS/commit/2595eb8773668eef82b017200fa69100fef11e76"
      }
    ]
  }
]
},{}],"c:\\projects\\react\\app\\scripts\\Store.js":[function(require,module,exports){
var flux = require('flux-react');
var actions = require('./actions');
var events = require('./events');
var config = require('./config');

var _ = require('underscore');
var $ = require('zepto-browserify').$;

var REPOS_ENDPOINT = 'https://api.github.com/repos/';



module.exports = flux.createStore({

  /* Field: Sample data structure to build */
  repos: [],

  /* Field: top 10 comitters*/
  committers: [],

  /* Actions: Possible actions that can be triggered 
     by a component or service */
  actions: [
    actions.init,
    actions.fetchRepos,
    actions.refreshCommits
  ],

  /* Action: Start the store */
  init: function() {
    this._buildTestRepos();
    this._calculateTopCommitters();
    this.fetchRepos();

    // Tests / Demo to illustrate functionality
    setTimeout(this._addTestRepo.bind(this), 1500);
    setTimeout(this._addTestCommits.bind(this), 3000);
    setTimeout(this._doTestReverse.bind(this), 4500);
    setTimeout(this._orderReposByLastCommit.bind(this), 6000);
  },

  /* Action: Fetch through intiial list of repos  */
  fetchRepos: function() {
    // TODO: fetch repos from Github service and fill with commits
    this.emit(events.REPOS_REFRESHED);
  },

  /* Action: Refreshes list of all repos */
  refreshCommits: function() {
    // TODO: fetch updated commits from Github service
    this.emit(events.REPOS_REFRESHED); 
  },

  /* Helper: Re-orders commits by most recent and notifies elements  */
  _orderReposByLastCommit: function() {
    this.repos = this.repos.sort(function(a, b) {
      var date1 = a.commits[0].commit.author.date;
      var date2 = a.commits[1].commit.author.date
      if (date1 < date2)
        return -1;
      if (date1 > date2)
        return 1;
      return 0;
    });
    this.emit(events.REPOS_REFRESHED);
  },

  /* Helper: Calculate top-committer list & broadcase */
  _calculateTopCommitters: function() {
    // TODO: calculate top list
    this.emit(events.TOP_COMMITTERS_REFRESHED);
  },

  /* Demo: Builds the objects from dummy data stored in json */
  _buildTestRepos: function() {
    // repos
    this.repos[0] = require( '../data/repos/facebook/flux' );
    this.repos[1] = require( '../data/repos/facebook/presto' );

    // commits
    this.repos[0].commits = require('../data/repos/facebook/flux/commits' );
    this.repos[1].commits = require( '../data/repos/facebook/presto/commits' );
  },

  _addTestRepo: function() {
    this.repos.push( require('../data/repos/zhouzi/theaterjs') )
    this.repos[2].commits = require( '../data/repos/zhouzi/theaterjs/commits' );
    this.emit(events.REPOS_REFRESHED);
  },

  _addTestCommits: function() {
    this.repos[0].commits.unshift( require( '../data/repos/zhouzi/theaterjs/commits' )[1] );
    this.repos[0].commits[0].commit.author.date = new Date();
    this.emit(events.REPOS_REFRESHED);
  },

  _doTestReverse: function() {
    this.repos = this.repos.reverse();
    this.emit(events.REPOS_REFRESHED);
  },

  /* Public methods available for retrieving information about the state */
  exports: {

    getRepos: function() {
      return this.repos;
    },

    getRepoById: function(id) {
      return this._getRepoByKey('id', id);
    },

    getTopComitters: function() {
      return this.comitters;
    }

  }
});
},{"../data/repos/facebook/flux":"c:\\projects\\react\\app\\data\\repos\\facebook\\flux.js","../data/repos/facebook/flux/commits":"c:\\projects\\react\\app\\data\\repos\\facebook\\flux\\commits.js","../data/repos/facebook/presto":"c:\\projects\\react\\app\\data\\repos\\facebook\\presto.js","../data/repos/facebook/presto/commits":"c:\\projects\\react\\app\\data\\repos\\facebook\\presto\\commits.js","../data/repos/zhouzi/theaterjs":"c:\\projects\\react\\app\\data\\repos\\zhouzi\\theaterjs.js","../data/repos/zhouzi/theaterjs/commits":"c:\\projects\\react\\app\\data\\repos\\zhouzi\\theaterjs\\commits.js","./actions":"c:\\projects\\react\\app\\scripts\\actions.js","./config":"c:\\projects\\react\\app\\scripts\\config.js","./events":"c:\\projects\\react\\app\\scripts\\events.js","flux-react":"flux-react","underscore":"c:\\projects\\react\\node_modules\\underscore\\underscore.js","zepto-browserify":"c:\\projects\\react\\node_modules\\zepto-browserify\\zepto.js"}],"c:\\projects\\react\\app\\scripts\\actions.js":[function(require,module,exports){
var flux = require('flux-react');

/* Trigger actions by calling actions.methodName(); */
module.exports = flux.createActions([
	'init',
  'fetchRepos',
  'refreshCommits'
]);
},{"flux-react":"flux-react"}],"c:\\projects\\react\\app\\scripts\\components\\App.js":[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var Commit = require('./Commit');
var Repo = require('./Repo');
var actions = require('./../actions');
var events = require('../events');
var Store = require('./../Store');

var $ = require('zepto-browserify').$;


var App = React.createClass({displayName: "App",

	getInitialState: function() {
		return {
      repos: []
    };
	},

	getDefaultProps: function() {
		return {};
	},

	componentDidMount: function() {
		Store.on(events.REPOS_REFRESHED, this.setRepos)
		actions.init();
	},

	setRepos: function() {
		this.setState({
			repos: Store.getRepos()
		});
	},

	render: function() {
		return (
			React.createElement("div", null, 
				this.state.repos.map(function(repo) {
        	return React.createElement(Repo, React.__spread({key: repo.id},   repo ));
      	})
      )
		);
	}
	
});
	
module.exports = App;

},{"../events":"c:\\projects\\react\\app\\scripts\\events.js","./../Store":"c:\\projects\\react\\app\\scripts\\Store.js","./../actions":"c:\\projects\\react\\app\\scripts\\actions.js","./Commit":"c:\\projects\\react\\app\\scripts\\components\\Commit.js","./Repo":"c:\\projects\\react\\app\\scripts\\components\\Repo.js","react":"react","zepto-browserify":"c:\\projects\\react\\node_modules\\zepto-browserify\\zepto.js"}],"c:\\projects\\react\\app\\scripts\\components\\Commit.js":[function(require,module,exports){
/** @jsx React.DOM */
var timeago = require('timeago');

var React = require('react');
var User = require('./User');

var Commit = React.createClass({displayName: "Commit",


  getInitialState: function() {
    var timeSince = timeago(this.props.commit.author.date);
    return {
      timeSinceCommit: timeSince.replace('about', '~')
    }
  },

	getDefaultProps: function() {
    return {};
  },

  componentWillMount: function() {
    this.interval = setInterval(this._updateTimeSinceCommit, 1000);
  },

  componentWillUnmount: function() {
    clearInterval(this.interval);
  },

  _updateTimeSinceCommit: function() {
    this.setState(this.getInitialState());
  },

  _getShortMessage: function() {
    var msg = this.props.commit.message;
    if (msg.length > 100)
      return msg.substr(0,100).concat('...');
    else
      return msg;
  },


  render: function() {
    return (
      React.createElement("div", {className: "commit", "data-visibility":  this.props.opacity}, 
        React.createElement(User, React.__spread({},  this.props.author)), 
        React.createElement("strong", null,  this._getShortMessage() ), 
        React.createElement("span", null,  this.state.timeSinceCommit)
      )
    )
  }

});


module.exports = Commit;
},{"./User":"c:\\projects\\react\\app\\scripts\\components\\User.js","react":"react","timeago":"c:\\projects\\react\\node_modules\\timeago\\timeago.js"}],"c:\\projects\\react\\app\\scripts\\components\\MagicMove.js":[function(require,module,exports){
/* @jsx React.DOM */
var React = require('react');
var cloneWithProps = require('react/lib/cloneWithProps');

var Clones = React.createClass({
  displayName: 'MagicMoveClones',

  childrenWithPositions:function () {
    var children = [];
    React.Children.forEach(this.props.children, function(child)  {
      var style = this.props.positions[child.key];
      var key = child.key;
      children.push(cloneWithProps(child, { style:style, key:key }));
    }.bind(this));
    return children.sort(function (a, b) {
      return (a.key < b.key) ? -1 : (a.key > b.key) ? 1 : 0;
    });
  },

  render:function () {
    return (
      React.createElement("div", {className: "MagicMoveClones"}, 
        this.childrenWithPositions()
      )
    );
  }
});

var MagicMove = React.createClass({

  displayName: 'MagicMove',

  getInitialState:function () {
    return {
      animating: false
    };
  },

  componentDidMount:function () {
    this.makePortal();
    this.renderClonesInitially();
  },

  componentWillUnmount:function () {
    document.body.removeChild(this.portalNode);
  },

  componentWillReceiveProps:function (nextProps) {
    this.startAnimation(nextProps);
  },

  componentDidUpdate:function (prevProps) {
    if (this.state.animating)
      this.renderClonesToNewPositions(prevProps);
  },

  makePortal:function () {
    this.portalNode = document.createElement('div');
    this.portalNode.style.left = '-9999px';
    document.body.appendChild(this.portalNode);
  },

  addTransitionEndEvent:function () {
    // if you click RIGHT before the transition is done, the animation jumps,
    // its because the transitionend event fires even though its not quite
    // done, not sure how to hack around it yet.
    this._transitionHandler = callOnNthCall(this.props.children.length, this.finishAnimation);
    this.portalNode.addEventListener('transitionend', this._transitionHandler);
  },

  removeTransitionEndEvent:function () {
    this.portalNode.removeEventListener('transitionend', this._transitionHandler);
  },

  startAnimation:function (nextProps) {
    if (this.state.animating)
      return;
    this.addTransitionEndEvent();
    nextProps.animating = true;
    nextProps.positions = this.getPositions();
    this.renderClones(nextProps, function()  {
      this.setState({ animating: true });
    }.bind(this));
  },

  renderClonesToNewPositions:function (prevProps) {
    prevProps.positions = this.getPositions();
    this.renderClones(prevProps);
  },

  finishAnimation:function () {
    this.removeTransitionEndEvent();
    this.portalNode.style.position = 'absolute';
    this.setState({ animating: false });
  },

  getPositions:function () {
    var positions = {};
    React.Children.forEach(this.props.children, function(child)  {
      var ref = child.key;
      var node = this.refs[ref].getDOMNode();
      var rect = node.getBoundingClientRect();
      var computedStyle = getComputedStyle(node);
      var marginTop = parseInt(computedStyle.marginTop, 10);
      var marginLeft = parseInt(computedStyle.marginLeft, 10);
      var position = {
        top: (rect.top - marginTop),
        left: (rect.left - marginLeft),
        width: rect.width,
        height: rect.height,
        position: 'absolute'
      };
      positions[ref] = position;
    }.bind(this));
    return positions;
  },

  renderClonesInitially:function () {
    this.props.positions = this.getPositions();
    React.render(React.createElement(Clones, React.__spread({},  this.props)), this.portalNode);
  },

  renderClones:function (props, cb) {
    this.portalNode.style.position = '';
    React.render(React.createElement(Clones, React.__spread({},  props)), this.portalNode, cb);
  },

  childrenWithRefs:function () {
    return React.Children.map(this.props.children, function(child)  {
      return cloneWithProps(child, { ref: child.key});
    });
  },

  render:function () {
    var style = { opacity: this.state.animating ? 0 : 1 };
    return (
      React.createElement("div", {style: style}, 
        this.childrenWithRefs()
      )
    );
  }
});

function callOnNthCall(n, fn) {
  var calls = 0;
  return function () {
    calls++;
    if (calls === n) {
      calls = 0;
      return fn.apply(this, arguments);
    }
  };
}

module.exports = MagicMove;

},{"react":"react","react/lib/cloneWithProps":"c:\\projects\\react\\node_modules\\react\\lib\\cloneWithProps.js"}],"c:\\projects\\react\\app\\scripts\\components\\Repo.js":[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var Commit = require('./Commit');
var MagicMove = require('./MagicMove');
var RepoInfo = require('./RepoInfo');

var Store = require('./../Store');
var events = require('./../events');

var _ = require('underscore');
var  $ = require('zepto-browserify').$;

var Repo = React.createClass({displayName: "Repo",

	/* -- Property definitions here -- */
	propTypes: {
    commits: React.PropTypes.array
  },


  getInitialState: function() {
  	return {};
  },

  getDefaultProps: function() {
  	return {
  		
  	};
  },
 	
 	componentDidMount: function() {
    
 	},




  render: function() {
    return (
      React.createElement("div", {className: "repo"}, 
    		React.createElement(RepoInfo, React.__spread({},   this.props , {commit_count:  this.props.commits.length})), 
         this._renderCommit() 
      )
    );
  },

  _renderCommit: function() {
    var opacity;
    return this.props.commits.map(function(commit, i) {
      opacity = i / this.props.commits.length;
      return (
        React.createElement(Commit, React.__spread({
          key: commit.sha, 
          opacity:  Math.round(opacity * 100)},  
          commit)
        )
      )
    }.bind(this));
  }

});


module.exports = Repo;
},{"./../Store":"c:\\projects\\react\\app\\scripts\\Store.js","./../events":"c:\\projects\\react\\app\\scripts\\events.js","./Commit":"c:\\projects\\react\\app\\scripts\\components\\Commit.js","./MagicMove":"c:\\projects\\react\\app\\scripts\\components\\MagicMove.js","./RepoInfo":"c:\\projects\\react\\app\\scripts\\components\\RepoInfo.js","react":"react","underscore":"c:\\projects\\react\\node_modules\\underscore\\underscore.js","zepto-browserify":"c:\\projects\\react\\node_modules\\zepto-browserify\\zepto.js"}],"c:\\projects\\react\\app\\scripts\\components\\RepoInfo.js":[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');

var RepoInfo = React.createClass({displayName: "RepoInfo",

  render: function() {
    return (
      React.createElement("div", {className: "repoInfo"}, 
        React.createElement("img", {src:  this.props.owner.avatar_url}), 
    		React.createElement("h2", null, 
    			React.createElement("strong", null,  this.props.full_name)
    		), 
        React.createElement("span", null,  this.props.commit_count, " commits today")
      )
    );
  }

});


module.exports = RepoInfo;
},{"react":"react"}],"c:\\projects\\react\\app\\scripts\\components\\User.js":[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var  $ = require('zepto-browserify').$;


var User = React.createClass({displayName: "User",

  render: function() {
    return (
      React.createElement("div", {className: "user"}, 
        React.createElement("img", {src:  this.props.avatar_url}), 
        React.createElement("strong", null,  this.props.login)
      )
    );
  }

});


module.exports = User;
},{"react":"react","zepto-browserify":"c:\\projects\\react\\node_modules\\zepto-browserify\\zepto.js"}],"c:\\projects\\react\\app\\scripts\\config.js":[function(require,module,exports){
module.exports = {
	repos: ['facebook/flux', 'facebook/presto', 'zhouzi/theaterjs']
}
},{}],"c:\\projects\\react\\app\\scripts\\events.js":[function(require,module,exports){
module.exports = {
	REPOS_REFRESHED: 'repos.refreshed',
	COMMITS_REFRESHED: 'commits.refreshed',
	TOP_COMMITTERS_REFRESHED: 'topCommitters.refreshed'
};
},{}],"c:\\projects\\react\\node_modules\\browserify\\node_modules\\process\\browser.js":[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canMutationObserver = typeof window !== 'undefined'
    && window.MutationObserver;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    var queue = [];

    if (canMutationObserver) {
        var hiddenDiv = document.createElement("div");
        var observer = new MutationObserver(function () {
            var queueList = queue.slice();
            queue.length = 0;
            queueList.forEach(function (fn) {
                fn();
            });
        });

        observer.observe(hiddenDiv, { attributes: true });

        return function nextTick(fn) {
            if (!queue.length) {
                hiddenDiv.setAttribute('yes', 'no');
            }
            queue.push(fn);
        };
    }

    if (canPost) {
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],"c:\\projects\\react\\node_modules\\react\\lib\\Object.assign.js":[function(require,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Object.assign
 */

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

function assign(target, sources) {
  if (target == null) {
    throw new TypeError('Object.assign target cannot be null or undefined');
  }

  var to = Object(target);
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    var from = Object(nextSource);

    // We don't currently support accessors nor proxies. Therefore this
    // copy cannot throw. If we ever supported this then we must handle
    // exceptions and side-effects. We don't support symbols so they won't
    // be transferred.

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
  }

  return to;
};

module.exports = assign;

},{}],"c:\\projects\\react\\node_modules\\react\\lib\\ReactContext.js":[function(require,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactContext
 */

"use strict";

var assign = require("./Object.assign");

/**
 * Keeps track of the current context.
 *
 * The context is automatically passed down the component ownership hierarchy
 * and is accessible via `this.context` on ReactCompositeComponents.
 */
var ReactContext = {

  /**
   * @internal
   * @type {object}
   */
  current: {},

  /**
   * Temporarily extends the current context while executing scopedCallback.
   *
   * A typical use case might look like
   *
   *  render: function() {
   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
   *
   *    ));
   *    return <div>{children}</div>;
   *  }
   *
   * @param {object} newContext New context to merge into the existing context
   * @param {function} scopedCallback Callback to run with the new context
   * @return {ReactComponent|array<ReactComponent>}
   */
  withContext: function(newContext, scopedCallback) {
    var result;
    var previousContext = ReactContext.current;
    ReactContext.current = assign({}, previousContext, newContext);
    try {
      result = scopedCallback();
    } finally {
      ReactContext.current = previousContext;
    }
    return result;
  }

};

module.exports = ReactContext;

},{"./Object.assign":"c:\\projects\\react\\node_modules\\react\\lib\\Object.assign.js"}],"c:\\projects\\react\\node_modules\\react\\lib\\ReactCurrentOwner.js":[function(require,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

"use strict";

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 *
 * The depth indicate how many composite components are above this render level.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],"c:\\projects\\react\\node_modules\\react\\lib\\ReactElement.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

"use strict";

var ReactContext = require("./ReactContext");
var ReactCurrentOwner = require("./ReactCurrentOwner");

var warning = require("./warning");

var RESERVED_PROPS = {
  key: true,
  ref: true
};

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} object
 * @param {string} key
 */
function defineWarningProperty(object, key) {
  Object.defineProperty(object, key, {

    configurable: false,
    enumerable: true,

    get: function() {
      if (!this._store) {
        return null;
      }
      return this._store[key];
    },

    set: function(value) {
      ("production" !== process.env.NODE_ENV ? warning(
        false,
        'Don\'t set the ' + key + ' property of the component. ' +
        'Mutate the existing props object instead.'
      ) : null);
      this._store[key] = value;
    }

  });
}

/**
 * This is updated to true if the membrane is successfully created.
 */
var useMutationMembrane = false;

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} element
 */
function defineMutationMembrane(prototype) {
  try {
    var pseudoFrozenProperties = {
      props: true
    };
    for (var key in pseudoFrozenProperties) {
      defineWarningProperty(prototype, key);
    }
    useMutationMembrane = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

/**
 * Base constructor for all React elements. This is only used to make this
 * work with a dynamic instanceof check. Nothing should live on this prototype.
 *
 * @param {*} type
 * @param {string|object} ref
 * @param {*} key
 * @param {*} props
 * @internal
 */
var ReactElement = function(type, key, ref, owner, context, props) {
  // Built-in properties that belong on the element
  this.type = type;
  this.key = key;
  this.ref = ref;

  // Record the component responsible for creating this element.
  this._owner = owner;

  // TODO: Deprecate withContext, and then the context becomes accessible
  // through the owner.
  this._context = context;

  if ("production" !== process.env.NODE_ENV) {
    // The validation flag and props are currently mutative. We put them on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    this._store = { validated: false, props: props };

    // We're not allowed to set props directly on the object so we early
    // return and rely on the prototype membrane to forward to the backing
    // store.
    if (useMutationMembrane) {
      Object.freeze(this);
      return;
    }
  }

  this.props = props;
};

// We intentionally don't expose the function on the constructor property.
// ReactElement should be indistinguishable from a plain object.
ReactElement.prototype = {
  _isReactElement: true
};

if ("production" !== process.env.NODE_ENV) {
  defineMutationMembrane(ReactElement.prototype);
}

ReactElement.createElement = function(type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;

  if (config != null) {
    ref = config.ref === undefined ? null : config.ref;
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        config.key !== null,
        'createElement(...): Encountered component with a `key` of null. In ' +
        'a future version, this will be treated as equivalent to the string ' +
        '\'null\'; instead, provide an explicit key or use undefined.'
      ) : null);
    }
    // TODO: Change this back to `config.key === undefined`
    key = config.key == null ? null : '' + config.key;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (config.hasOwnProperty(propName) &&
          !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (typeof props[propName] === 'undefined') {
        props[propName] = defaultProps[propName];
      }
    }
  }

  return new ReactElement(
    type,
    key,
    ref,
    ReactCurrentOwner.current,
    ReactContext.current,
    props
  );
};

ReactElement.createFactory = function(type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
  var newElement = new ReactElement(
    oldElement.type,
    oldElement.key,
    oldElement.ref,
    oldElement._owner,
    oldElement._context,
    newProps
  );

  if ("production" !== process.env.NODE_ENV) {
    // If the key on the original is valid, then the clone is valid
    newElement._store.validated = oldElement._store.validated;
  }
  return newElement;
};

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function(object) {
  // ReactTestUtils is often used outside of beforeEach where as React is
  // within it. This leads to two different instances of React on the same
  // page. To identify a element from a different React instance we use
  // a flag instead of an instanceof check.
  var isElement = !!(object && object._isReactElement);
  // if (isElement && !(object instanceof ReactElement)) {
  // This is an indicator that you're using multiple versions of React at the
  // same time. This will screw with ownership and stuff. Fix it, please.
  // TODO: We could possibly warn here.
  // }
  return isElement;
};

module.exports = ReactElement;

}).call(this,require('_process'))

},{"./ReactContext":"c:\\projects\\react\\node_modules\\react\\lib\\ReactContext.js","./ReactCurrentOwner":"c:\\projects\\react\\node_modules\\react\\lib\\ReactCurrentOwner.js","./warning":"c:\\projects\\react\\node_modules\\react\\lib\\warning.js","_process":"c:\\projects\\react\\node_modules\\browserify\\node_modules\\process\\browser.js"}],"c:\\projects\\react\\node_modules\\react\\lib\\ReactPropTransferer.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTransferer
 */

"use strict";

var assign = require("./Object.assign");
var emptyFunction = require("./emptyFunction");
var invariant = require("./invariant");
var joinClasses = require("./joinClasses");
var warning = require("./warning");

var didWarn = false;

/**
 * Creates a transfer strategy that will merge prop values using the supplied
 * `mergeStrategy`. If a prop was previously unset, this just sets it.
 *
 * @param {function} mergeStrategy
 * @return {function}
 */
function createTransferStrategy(mergeStrategy) {
  return function(props, key, value) {
    if (!props.hasOwnProperty(key)) {
      props[key] = value;
    } else {
      props[key] = mergeStrategy(props[key], value);
    }
  };
}

var transferStrategyMerge = createTransferStrategy(function(a, b) {
  // `merge` overrides the first object's (`props[key]` above) keys using the
  // second object's (`value`) keys. An object's style's existing `propA` would
  // get overridden. Flip the order here.
  return assign({}, b, a);
});

/**
 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
 * NOTE: if you add any more exceptions to this list you should be sure to
 * update `cloneWithProps()` accordingly.
 */
var TransferStrategies = {
  /**
   * Never transfer `children`.
   */
  children: emptyFunction,
  /**
   * Transfer the `className` prop by merging them.
   */
  className: createTransferStrategy(joinClasses),
  /**
   * Transfer the `style` prop (which is an object) by merging them.
   */
  style: transferStrategyMerge
};

/**
 * Mutates the first argument by transferring the properties from the second
 * argument.
 *
 * @param {object} props
 * @param {object} newProps
 * @return {object}
 */
function transferInto(props, newProps) {
  for (var thisKey in newProps) {
    if (!newProps.hasOwnProperty(thisKey)) {
      continue;
    }

    var transferStrategy = TransferStrategies[thisKey];

    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
      transferStrategy(props, thisKey, newProps[thisKey]);
    } else if (!props.hasOwnProperty(thisKey)) {
      props[thisKey] = newProps[thisKey];
    }
  }
  return props;
}

/**
 * ReactPropTransferer are capable of transferring props to another component
 * using a `transferPropsTo` method.
 *
 * @class ReactPropTransferer
 */
var ReactPropTransferer = {

  TransferStrategies: TransferStrategies,

  /**
   * Merge two props objects using TransferStrategies.
   *
   * @param {object} oldProps original props (they take precedence)
   * @param {object} newProps new props to merge in
   * @return {object} a new object containing both sets of props merged.
   */
  mergeProps: function(oldProps, newProps) {
    return transferInto(assign({}, oldProps), newProps);
  },

  /**
   * @lends {ReactPropTransferer.prototype}
   */
  Mixin: {

    /**
     * Transfer props from this component to a target component.
     *
     * Props that do not have an explicit transfer strategy will be transferred
     * only if the target component does not already have the prop set.
     *
     * This is usually used to pass down props to a returned root component.
     *
     * @param {ReactElement} element Component receiving the properties.
     * @return {ReactElement} The supplied `component`.
     * @final
     * @protected
     */
    transferPropsTo: function(element) {
      ("production" !== process.env.NODE_ENV ? invariant(
        element._owner === this,
        '%s: You can\'t call transferPropsTo() on a component that you ' +
        'don\'t own, %s. This usually means you are calling ' +
        'transferPropsTo() on a component passed in as props or children.',
        this.constructor.displayName,
        typeof element.type === 'string' ?
        element.type :
        element.type.displayName
      ) : invariant(element._owner === this));

      if ("production" !== process.env.NODE_ENV) {
        if (!didWarn) {
          didWarn = true;
          ("production" !== process.env.NODE_ENV ? warning(
            false,
            'transferPropsTo is deprecated. ' +
            'See http://fb.me/react-transferpropsto for more information.'
          ) : null);
        }
      }

      // Because elements are immutable we have to merge into the existing
      // props object rather than clone it.
      transferInto(element.props, this.props);

      return element;
    }

  }
};

module.exports = ReactPropTransferer;

}).call(this,require('_process'))

},{"./Object.assign":"c:\\projects\\react\\node_modules\\react\\lib\\Object.assign.js","./emptyFunction":"c:\\projects\\react\\node_modules\\react\\lib\\emptyFunction.js","./invariant":"c:\\projects\\react\\node_modules\\react\\lib\\invariant.js","./joinClasses":"c:\\projects\\react\\node_modules\\react\\lib\\joinClasses.js","./warning":"c:\\projects\\react\\node_modules\\react\\lib\\warning.js","_process":"c:\\projects\\react\\node_modules\\browserify\\node_modules\\process\\browser.js"}],"c:\\projects\\react\\node_modules\\react\\lib\\cloneWithProps.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * @providesModule cloneWithProps
 */

"use strict";

var ReactElement = require("./ReactElement");
var ReactPropTransferer = require("./ReactPropTransferer");

var keyOf = require("./keyOf");
var warning = require("./warning");

var CHILDREN_PROP = keyOf({children: null});

/**
 * Sometimes you want to change the props of a child passed to you. Usually
 * this is to add a CSS class.
 *
 * @param {object} child child component you'd like to clone
 * @param {object} props props you'd like to modify. They will be merged
 * as if you used `transferPropsTo()`.
 * @return {object} a clone of child with props merged in.
 */
function cloneWithProps(child, props) {
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      !child.ref,
      'You are calling cloneWithProps() on a child with a ref. This is ' +
      'dangerous because you\'re creating a new child which will not be ' +
      'added as a ref to its parent.'
    ) : null);
  }

  var newProps = ReactPropTransferer.mergeProps(props, child.props);

  // Use `child.props.children` if it is provided.
  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&
      child.props.hasOwnProperty(CHILDREN_PROP)) {
    newProps.children = child.props.children;
  }

  // The current API doesn't retain _owner and _context, which is why this
  // doesn't use ReactElement.cloneAndReplaceProps.
  return ReactElement.createElement(child.type, newProps);
}

module.exports = cloneWithProps;

}).call(this,require('_process'))

},{"./ReactElement":"c:\\projects\\react\\node_modules\\react\\lib\\ReactElement.js","./ReactPropTransferer":"c:\\projects\\react\\node_modules\\react\\lib\\ReactPropTransferer.js","./keyOf":"c:\\projects\\react\\node_modules\\react\\lib\\keyOf.js","./warning":"c:\\projects\\react\\node_modules\\react\\lib\\warning.js","_process":"c:\\projects\\react\\node_modules\\browserify\\node_modules\\process\\browser.js"}],"c:\\projects\\react\\node_modules\\react\\lib\\emptyFunction.js":[function(require,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyFunction
 */

function makeEmptyFunction(arg) {
  return function() {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function() { return this; };
emptyFunction.thatReturnsArgument = function(arg) { return arg; };

module.exports = emptyFunction;

},{}],"c:\\projects\\react\\node_modules\\react\\lib\\invariant.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule invariant
 */

"use strict";

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if ("production" !== process.env.NODE_ENV) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        'Invariant Violation: ' +
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

}).call(this,require('_process'))

},{"_process":"c:\\projects\\react\\node_modules\\browserify\\node_modules\\process\\browser.js"}],"c:\\projects\\react\\node_modules\\react\\lib\\joinClasses.js":[function(require,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule joinClasses
 * @typechecks static-only
 */

"use strict";

/**
 * Combines multiple className strings into one.
 * http://jsperf.com/joinclasses-args-vs-array
 *
 * @param {...?string} classes
 * @return {string}
 */
function joinClasses(className/*, ... */) {
  if (!className) {
    className = '';
  }
  var nextClass;
  var argLength = arguments.length;
  if (argLength > 1) {
    for (var ii = 1; ii < argLength; ii++) {
      nextClass = arguments[ii];
      if (nextClass) {
        className = (className ? className + ' ' : '') + nextClass;
      }
    }
  }
  return className;
}

module.exports = joinClasses;

},{}],"c:\\projects\\react\\node_modules\\react\\lib\\keyOf.js":[function(require,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyOf
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without loosing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};


module.exports = keyOf;

},{}],"c:\\projects\\react\\node_modules\\react\\lib\\warning.js":[function(require,module,exports){
(function (process){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule warning
 */

"use strict";

var emptyFunction = require("./emptyFunction");

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("production" !== process.env.NODE_ENV) {
  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (!condition) {
      var argIndex = 0;
      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));
    }
  };
}

module.exports = warning;

}).call(this,require('_process'))

},{"./emptyFunction":"c:\\projects\\react\\node_modules\\react\\lib\\emptyFunction.js","_process":"c:\\projects\\react\\node_modules\\browserify\\node_modules\\process\\browser.js"}],"c:\\projects\\react\\node_modules\\timeago\\timeago.js":[function(require,module,exports){
/*
 * node-timeago
 * Cam Pedersen
 * <diffference@gmail.com>
 * Oct 6, 2011
 * Timeago is a jQuery plugin that makes it easy to support automatically
 * updating fuzzy timestamps (e.g. "4 minutes ago" or "about 1 day ago").
 *
 * @name timeago
 * @version 0.10.0
 * @requires jQuery v1.2.3+
 * @author Ryan McGeary
 * @license MIT License - http://www.opensource.org/licenses/mit-license.php
 *
 * For usage and examples, visit:
 * http://timeago.yarp.com/
 *
 * Copyright (c) 2008-2011, Ryan McGeary (ryanonjavascript -[at]- mcgeary [*dot*] org)
 */
module.exports = function (timestamp) {
  if (timestamp instanceof Date) {
    return inWords(timestamp);
  } else if (typeof timestamp === "string") {
    return inWords(parse(timestamp));
  } else if (typeof timestamp === "number") {
    return inWords(new Date(timestamp))
  }
};

var settings = {
  allowFuture: false,
  strings: {
    prefixAgo: null,
    prefixFromNow: null,
    suffixAgo: "ago",
    suffixFromNow: "from now",
    seconds: "less than a minute",
    minute: "about a minute",
    minutes: "%d minutes",
    hour: "about an hour",
    hours: "about %d hours",
    day: "a day",
    days: "%d days",
    month: "about a month",
    months: "%d months",
    year: "about a year",
    years: "%d years",
    numbers: []
  }
};

var $l = settings.strings;

module.exports.settings = settings;

$l.inWords = function (distanceMillis) {
  var prefix = $l.prefixAgo;
  var suffix = $l.suffixAgo;
  if (settings.allowFuture) {
    if (distanceMillis < 0) {
      prefix = $l.prefixFromNow;
      suffix = $l.suffixFromNow;
    }
  }

  var seconds = Math.abs(distanceMillis) / 1000;
  var minutes = seconds / 60;
  var hours = minutes / 60;
  var days = hours / 24;
  var years = days / 365;

  function substitute (stringOrFunction, number) {
    var string = typeof stringOrFunction === 'function' ? stringOrFunction(number, distanceMillis) : stringOrFunction;
    var value = ($l.numbers && $l.numbers[number]) || number;
    return string.replace(/%d/i, value);
  }

  var words = seconds < 45 && substitute($l.seconds, Math.round(seconds)) ||
    seconds < 90 && substitute($l.minute, 1) ||
    minutes < 45 && substitute($l.minutes, Math.round(minutes)) ||
    minutes < 90 && substitute($l.hour, 1) ||
    hours < 24 && substitute($l.hours, Math.round(hours)) ||
    hours < 48 && substitute($l.day, 1) ||
    days < 30 && substitute($l.days, Math.floor(days)) ||
    days < 60 && substitute($l.month, 1) ||
    days < 365 && substitute($l.months, Math.floor(days / 30)) ||
    years < 2 && substitute($l.year, 1) ||
    substitute($l.years, Math.floor(years));

  return [prefix, words, suffix].join(" ").toString().trim();
};

function parse (iso8601) {
  if (!iso8601) return;
  var s = iso8601.trim();
  s = s.replace(/\.\d\d\d+/,""); // remove milliseconds
  s = s.replace(/-/,"/").replace(/-/,"/");
  s = s.replace(/T/," ").replace(/Z/," UTC");
  s = s.replace(/([\+\-]\d\d)\:?(\d\d)/," $1$2"); // -04:00 -> -0400
  return new Date(s);
}

$l.parse = parse;

function inWords (date) {
  return $l.inWords(distance(date));
}

function distance (date) {
  return (new Date().getTime() - date.getTime());
}

},{}],"c:\\projects\\react\\node_modules\\underscore\\underscore.js":[function(require,module,exports){
//     Underscore.js 1.7.0
//     http://underscorejs.org
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    concat           = ArrayProto.concat,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.7.0';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var createCallback = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      case 2: return function(value, other) {
        return func.call(context, value, other);
      };
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result — either
  // identity, an arbitrary callback, a property matcher, or a property accessor.
  _.iteratee = function(value, context, argCount) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return createCallback(value, context, argCount);
    if (_.isObject(value)) return _.matches(value);
    return _.property(value);
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    if (obj == null) return obj;
    iteratee = createCallback(iteratee, context);
    var i, length = obj.length;
    if (length === +length) {
      for (i = 0; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    if (obj == null) return [];
    iteratee = _.iteratee(iteratee, context);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length),
        currentKey;
    for (var index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  var reduceError = 'Reduce of empty array with no initial value';

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {
    if (obj == null) obj = [];
    iteratee = createCallback(iteratee, context, 4);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        index = 0, currentKey;
    if (arguments.length < 3) {
      if (!length) throw new TypeError(reduceError);
      memo = obj[keys ? keys[index++] : index++];
    }
    for (; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      memo = iteratee(memo, obj[currentKey], currentKey, obj);
    }
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {
    if (obj == null) obj = [];
    iteratee = createCallback(iteratee, context, 4);
    var keys = obj.length !== + obj.length && _.keys(obj),
        index = (keys || obj).length,
        currentKey;
    if (arguments.length < 3) {
      if (!index) throw new TypeError(reduceError);
      memo = obj[keys ? keys[--index] : --index];
    }
    while (index--) {
      currentKey = keys ? keys[index] : index;
      memo = iteratee(memo, obj[currentKey], currentKey, obj);
    }
    return memo;
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var result;
    predicate = _.iteratee(predicate, context);
    _.some(obj, function(value, index, list) {
      if (predicate(value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    if (obj == null) return results;
    predicate = _.iteratee(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(_.iteratee(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    if (obj == null) return true;
    predicate = _.iteratee(predicate, context);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        index, currentKey;
    for (index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    if (obj == null) return false;
    predicate = _.iteratee(predicate, context);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        index, currentKey;
    for (index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function(obj, target) {
    if (obj == null) return false;
    if (obj.length !== +obj.length) obj = _.values(obj);
    return _.indexOf(obj, target) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matches(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matches(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = obj.length === +obj.length ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = _.iteratee(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = obj.length === +obj.length ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = _.iteratee(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function(obj) {
    var set = obj && obj.length === +obj.length ? obj : _.values(obj);
    var length = set.length;
    var shuffled = Array(length);
    for (var index = 0, rand; index < length; index++) {
      rand = _.random(0, index);
      if (rand !== index) shuffled[index] = shuffled[rand];
      shuffled[rand] = set[index];
    }
    return shuffled;
  };

  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (obj.length !== +obj.length) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    iteratee = _.iteratee(iteratee, context);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iteratee(value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior) {
    return function(obj, iteratee, context) {
      var result = {};
      iteratee = _.iteratee(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key]++; else result[key] = 1;
  });

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = _.iteratee(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = low + high >>> 1;
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (obj.length === +obj.length) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return obj.length === +obj.length ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function(obj, predicate, context) {
    predicate = _.iteratee(predicate, context);
    var pass = [], fail = [];
    _.each(obj, function(value, key, obj) {
      (predicate(value, key, obj) ? pass : fail).push(value);
    });
    return [pass, fail];
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[0];
    if (n < 0) return [];
    return slice.call(array, 0, n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[array.length - 1];
    return slice.call(array, Math.max(array.length - n, 0));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, output) {
    if (shallow && _.every(input, _.isArray)) {
      return concat.apply(output, input);
    }
    for (var i = 0, length = input.length; i < length; i++) {
      var value = input[i];
      if (!_.isArray(value) && !_.isArguments(value)) {
        if (!strict) output.push(value);
      } else if (shallow) {
        push.apply(output, value);
      } else {
        flatten(value, shallow, strict, output);
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false, []);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (array == null) return [];
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = _.iteratee(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = array.length; i < length; i++) {
      var value = array[i];
      if (isSorted) {
        if (!i || seen !== value) result.push(value);
        seen = value;
      } else if (iteratee) {
        var computed = iteratee(value, i, array);
        if (_.indexOf(seen, computed) < 0) {
          seen.push(computed);
          result.push(value);
        }
      } else if (_.indexOf(result, value) < 0) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(flatten(arguments, true, true, []));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    if (array == null) return [];
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = array.length; i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      for (var j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = flatten(slice.call(arguments, 1), true, true, []);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function(array) {
    if (array == null) return [];
    var length = _.max(arguments, 'length').length;
    var results = Array(length);
    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(arguments, i);
    }
    return results;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    if (list == null) return {};
    var result = {};
    for (var i = 0, length = list.length; i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    if (array == null) return -1;
    var i = 0, length = array.length;
    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }
    for (; i < length; i++) if (array[i] === item) return i;
    return -1;
  };

  _.lastIndexOf = function(array, item, from) {
    if (array == null) return -1;
    var idx = array.length;
    if (typeof from == 'number') {
      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);
    }
    while (--idx >= 0) if (array[idx] === item) return idx;
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Reusable constructor function for prototype setting.
  var Ctor = function(){};

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    var args, bound;
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    args = slice.call(arguments, 2);
    bound = function() {
      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
      Ctor.prototype = func.prototype;
      var self = new Ctor;
      Ctor.prototype = null;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (_.isObject(result)) return result;
      return self;
    };
    return bound;
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function(func) {
    var boundArgs = slice.call(arguments, 1);
    return function() {
      var position = 0;
      var args = boundArgs.slice();
      for (var i = 0, length = args.length; i < length; i++) {
        if (args[i] === _) args[i] = arguments[position++];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return func.apply(this, args);
    };
  };

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function(obj) {
    var i, length = arguments.length, key;
    if (length <= 1) throw new Error('bindAll must be passed function names');
    for (i = 1; i < length; i++) {
      key = arguments[i];
      obj[key] = _.bind(obj[key], obj);
    }
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = hasher ? hasher.apply(this, arguments) : key;
      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){
      return func.apply(null, args);
    }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options) options = {};
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;

      if (last < wait && last > 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed before being called N times.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      } else {
        func = null;
      }
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  // Object Functions
  // ----------------

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    if (!_.isObject(obj)) return obj;
    var source, prop;
    for (var i = 1, length = arguments.length; i < length; i++) {
      source = arguments[i];
      for (prop in source) {
        if (hasOwnProperty.call(source, prop)) {
            obj[prop] = source[prop];
        }
      }
    }
    return obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj, iteratee, context) {
    var result = {}, key;
    if (obj == null) return result;
    if (_.isFunction(iteratee)) {
      iteratee = createCallback(iteratee, context);
      for (key in obj) {
        var value = obj[key];
        if (iteratee(value, key, obj)) result[key] = value;
      }
    } else {
      var keys = concat.apply([], slice.call(arguments, 1));
      obj = new Object(obj);
      for (var i = 0, length = keys.length; i < length; i++) {
        key = keys[i];
        if (key in obj) result[key] = obj[key];
      }
    }
    return result;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj, iteratee, context) {
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
    } else {
      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    if (!_.isObject(obj)) return obj;
    for (var i = 1, length = arguments.length; i < length; i++) {
      var source = arguments[i];
      for (var prop in source) {
        if (obj[prop] === void 0) obj[prop] = source[prop];
      }
    }
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
    }
    if (typeof a != 'object' || typeof b != 'object') return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }
    // Objects with different constructors are not equivalent, but `Object`s
    // from different frames are.
    var aCtor = a.constructor, bCtor = b.constructor;
    if (
      aCtor !== bCtor &&
      // Handle Object.create(x) cases
      'constructor' in a && 'constructor' in b &&
      !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
        _.isFunction(bCtor) && bCtor instanceof bCtor)
    ) {
      return false;
    }
    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size, result;
    // Recursively compare objects and arrays.
    if (className === '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size === b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
        }
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      size = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      result = _.keys(b).length === size;
      if (result) {
        while (size--) {
          // Deep compare each member
          key = keys[size];
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
        }
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, [], []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return _.has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.
  if (typeof /./ !== 'function') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj !== +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  _.property = function(key) {
    return function(obj) {
      return obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.
  _.matches = function(attrs) {
    var pairs = _.pairs(attrs), length = pairs.length;
    return function(obj) {
      if (obj == null) return !length;
      obj = new Object(obj);
      for (var i = 0; i < length; i++) {
        var pair = pairs[i], key = pair[0];
        if (pair[1] !== obj[key] || !(key in obj)) return false;
      }
      return true;
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = createCallback(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

   // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property) {
    if (object == null) return void 0;
    var value = object[property];
    return _.isFunction(value) ? object[property]() : value;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offest.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    try {
      var render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(obj) {
    return this._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return result.call(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define === 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}.call(this));

},{}],"c:\\projects\\react\\node_modules\\zepto-browserify\\zepto.js":[function(require,module,exports){
/* Zepto v1.1.3 - zepto event ajax form ie - zeptojs.com/license */


var Zepto = (function() {
  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,
    document = window.document,
    elementDisplay = {}, classCache = {},
    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },
    fragmentRE = /^\s*<(\w+|!)[^>]*>/,
    singleTagRE = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
    rootNodeRE = /^(?:body|html)$/i,
    capitalRE = /([A-Z])/g,

    // special attributes that should be get/set via method calls
    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],

    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],
    table = document.createElement('table'),
    tableRow = document.createElement('tr'),
    containers = {
      'tr': document.createElement('tbody'),
      'tbody': table, 'thead': table, 'tfoot': table,
      'td': tableRow, 'th': tableRow,
      '*': document.createElement('div')
    },
    readyRE = /complete|loaded|interactive/,
    simpleSelectorRE = /^[\w-]*$/,
    class2type = {},
    toString = class2type.toString,
    zepto = {},
    camelize, uniq,
    tempParent = document.createElement('div'),
    propMap = {
      'tabindex': 'tabIndex',
      'readonly': 'readOnly',
      'for': 'htmlFor',
      'class': 'className',
      'maxlength': 'maxLength',
      'cellspacing': 'cellSpacing',
      'cellpadding': 'cellPadding',
      'rowspan': 'rowSpan',
      'colspan': 'colSpan',
      'usemap': 'useMap',
      'frameborder': 'frameBorder',
      'contenteditable': 'contentEditable'
    },
    isArray = Array.isArray ||
      function(object){ return object instanceof Array }

  zepto.matches = function(element, selector) {
    if (!selector || !element || element.nodeType !== 1) return false
    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||
                          element.oMatchesSelector || element.matchesSelector
    if (matchesSelector) return matchesSelector.call(element, selector)
    // fall back to performing a selector:
    var match, parent = element.parentNode, temp = !parent
    if (temp) (parent = tempParent).appendChild(element)
    match = ~zepto.qsa(parent, selector).indexOf(element)
    temp && tempParent.removeChild(element)
    return match
  }

  function type(obj) {
    return obj == null ? String(obj) :
      class2type[toString.call(obj)] || "object"
  }

  function isFunction(value) { return type(value) == "function" }
  function isWindow(obj)     { return obj != null && obj == obj.window }
  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }
  function isObject(obj)     { return type(obj) == "object" }
  function isPlainObject(obj) {
    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype
  }
  function likeArray(obj) { return typeof obj.length == 'number' }

  function compact(array) { return filter.call(array, function(item){ return item != null }) }
  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }
  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }
  function dasherize(str) {
    return str.replace(/::/g, '/')
           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')
           .replace(/([a-z\d])([A-Z])/g, '$1_$2')
           .replace(/_/g, '-')
           .toLowerCase()
  }
  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }

  function classRE(name) {
    return name in classCache ?
      classCache[name] : (classCache[name] = new RegExp('(^|\\s)' + name + '(\\s|$)'))
  }

  function maybeAddPx(name, value) {
    return (typeof value == "number" && !cssNumber[dasherize(name)]) ? value + "px" : value
  }

  function defaultDisplay(nodeName) {
    var element, display
    if (!elementDisplay[nodeName]) {
      element = document.createElement(nodeName)
      document.body.appendChild(element)
      display = getComputedStyle(element, '').getPropertyValue("display")
      element.parentNode.removeChild(element)
      display == "none" && (display = "block")
      elementDisplay[nodeName] = display
    }
    return elementDisplay[nodeName]
  }

  function children(element) {
    return 'children' in element ?
      slice.call(element.children) :
      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })
  }

  // `$.zepto.fragment` takes a html string and an optional tag name
  // to generate DOM nodes nodes from the given html string.
  // The generated DOM nodes are returned as an array.
  // This function can be overriden in plugins for example to make
  // it compatible with browsers that don't support the DOM fully.
  zepto.fragment = function(html, name, properties) {
    var dom, nodes, container

    // A special case optimization for a single tag
    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))

    if (!dom) {
      if (html.replace) html = html.replace(tagExpanderRE, "<$1></$2>")
      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1
      if (!(name in containers)) name = '*'

      container = containers[name]
      container.innerHTML = '' + html
      dom = $.each(slice.call(container.childNodes), function(){
        container.removeChild(this)
      })
    }

    if (isPlainObject(properties)) {
      nodes = $(dom)
      $.each(properties, function(key, value) {
        if (methodAttributes.indexOf(key) > -1) nodes[key](value)
        else nodes.attr(key, value)
      })
    }

    return dom
  }

  // `$.zepto.Z` swaps out the prototype of the given `dom` array
  // of nodes with `$.fn` and thus supplying all the Zepto functions
  // to the array. Note that `__proto__` is not supported on Internet
  // Explorer. This method can be overriden in plugins.
  zepto.Z = function(dom, selector) {
    dom = dom || []
    dom.__proto__ = $.fn
    dom.selector = selector || ''
    return dom
  }

  // `$.zepto.isZ` should return `true` if the given object is a Zepto
  // collection. This method can be overriden in plugins.
  zepto.isZ = function(object) {
    return object instanceof zepto.Z
  }

  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and
  // takes a CSS selector and an optional context (and handles various
  // special cases).
  // This method can be overriden in plugins.
  zepto.init = function(selector, context) {
    var dom
    // If nothing given, return an empty Zepto collection
    if (!selector) return zepto.Z()
    // Optimize for string selectors
    else if (typeof selector == 'string') {
      selector = selector.trim()
      // If it's a html fragment, create nodes from it
      // Note: In both Chrome 21 and Firefox 15, DOM error 12
      // is thrown if the fragment doesn't begin with <
      if (selector[0] == '<' && fragmentRE.test(selector))
        dom = zepto.fragment(selector, RegExp.$1, context), selector = null
      // If there's a context, create a collection on that context first, and select
      // nodes from there
      else if (context !== undefined) return $(context).find(selector)
      // If it's a CSS selector, use it to select nodes.
      else dom = zepto.qsa(document, selector)
    }
    // If a function is given, call it when the DOM is ready
    else if (isFunction(selector)) return $(document).ready(selector)
    // If a Zepto collection is given, just return it
    else if (zepto.isZ(selector)) return selector
    else {
      // normalize array if an array of nodes is given
      if (isArray(selector)) dom = compact(selector)
      // Wrap DOM nodes.
      else if (isObject(selector))
        dom = [selector], selector = null
      // If it's a html fragment, create nodes from it
      else if (fragmentRE.test(selector))
        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null
      // If there's a context, create a collection on that context first, and select
      // nodes from there
      else if (context !== undefined) return $(context).find(selector)
      // And last but no least, if it's a CSS selector, use it to select nodes.
      else dom = zepto.qsa(document, selector)
    }
    // create a new Zepto collection from the nodes found
    return zepto.Z(dom, selector)
  }

  // `$` will be the base `Zepto` object. When calling this
  // function just call `$.zepto.init, which makes the implementation
  // details of selecting nodes and creating Zepto collections
  // patchable in plugins.
  $ = function(selector, context){
    return zepto.init(selector, context)
  }

  function extend(target, source, deep) {
    for (key in source)
      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {
        if (isPlainObject(source[key]) && !isPlainObject(target[key]))
          target[key] = {}
        if (isArray(source[key]) && !isArray(target[key]))
          target[key] = []
        extend(target[key], source[key], deep)
      }
      else if (source[key] !== undefined) target[key] = source[key]
  }

  // Copy all but undefined properties from one or more
  // objects to the `target` object.
  $.extend = function(target){
    var deep, args = slice.call(arguments, 1)
    if (typeof target == 'boolean') {
      deep = target
      target = args.shift()
    }
    args.forEach(function(arg){ extend(target, arg, deep) })
    return target
  }

  // `$.zepto.qsa` is Zepto's CSS selector implementation which
  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.
  // This method can be overriden in plugins.
  zepto.qsa = function(element, selector){
    var found,
        maybeID = selector[0] == '#',
        maybeClass = !maybeID && selector[0] == '.',
        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked
        isSimple = simpleSelectorRE.test(nameOnly)
    return (isDocument(element) && isSimple && maybeID) ?
      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :
      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :
      slice.call(
        isSimple && !maybeID ?
          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class
          element.getElementsByTagName(selector) : // Or a tag
          element.querySelectorAll(selector) // Or it's not simple, and we need to query all
      )
  }

  function filtered(nodes, selector) {
    return selector == null ? $(nodes) : $(nodes).filter(selector)
  }

  $.contains = function(parent, node) {
    return parent !== node && parent.contains(node)
  }

  function funcArg(context, arg, idx, payload) {
    return isFunction(arg) ? arg.call(context, idx, payload) : arg
  }

  function setAttribute(node, name, value) {
    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)
  }

  // access className property while respecting SVGAnimatedString
  function className(node, value){
    var klass = node.className,
        svg   = klass && klass.baseVal !== undefined

    if (value === undefined) return svg ? klass.baseVal : klass
    svg ? (klass.baseVal = value) : (node.className = value)
  }

  // "true"  => true
  // "false" => false
  // "null"  => null
  // "42"    => 42
  // "42.5"  => 42.5
  // "08"    => "08"
  // JSON    => parse if valid
  // String  => self
  function deserializeValue(value) {
    var num
    try {
      return value ?
        value == "true" ||
        ( value == "false" ? false :
          value == "null" ? null :
          !/^0/.test(value) && !isNaN(num = Number(value)) ? num :
          /^[\[\{]/.test(value) ? $.parseJSON(value) :
          value )
        : value
    } catch(e) {
      return value
    }
  }

  $.type = type
  $.isFunction = isFunction
  $.isWindow = isWindow
  $.isArray = isArray
  $.isPlainObject = isPlainObject

  $.isEmptyObject = function(obj) {
    var name
    for (name in obj) return false
    return true
  }

  $.inArray = function(elem, array, i){
    return emptyArray.indexOf.call(array, elem, i)
  }

  $.camelCase = camelize
  $.trim = function(str) {
    return str == null ? "" : String.prototype.trim.call(str)
  }

  // plugin compatibility
  $.uuid = 0
  $.support = { }
  $.expr = { }

  $.map = function(elements, callback){
    var value, values = [], i, key
    if (likeArray(elements))
      for (i = 0; i < elements.length; i++) {
        value = callback(elements[i], i)
        if (value != null) values.push(value)
      }
    else
      for (key in elements) {
        value = callback(elements[key], key)
        if (value != null) values.push(value)
      }
    return flatten(values)
  }

  $.each = function(elements, callback){
    var i, key
    if (likeArray(elements)) {
      for (i = 0; i < elements.length; i++)
        if (callback.call(elements[i], i, elements[i]) === false) return elements
    } else {
      for (key in elements)
        if (callback.call(elements[key], key, elements[key]) === false) return elements
    }

    return elements
  }

  $.grep = function(elements, callback){
    return filter.call(elements, callback)
  }

  if (window.JSON) $.parseJSON = JSON.parse

  // Populate the class2type map
  $.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
    class2type[ "[object " + name + "]" ] = name.toLowerCase()
  })

  // Define methods that will be available on all
  // Zepto collections
  $.fn = {
    // Because a collection acts like an array
    // copy over these useful array functions.
    forEach: emptyArray.forEach,
    reduce: emptyArray.reduce,
    push: emptyArray.push,
    sort: emptyArray.sort,
    indexOf: emptyArray.indexOf,
    concat: emptyArray.concat,

    // `map` and `slice` in the jQuery API work differently
    // from their array counterparts
    map: function(fn){
      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))
    },
    slice: function(){
      return $(slice.apply(this, arguments))
    },

    ready: function(callback){
      // need to check if document.body exists for IE as that browser reports
      // document ready when it hasn't yet created the body element
      if (readyRE.test(document.readyState) && document.body) callback($)
      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)
      return this
    },
    get: function(idx){
      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]
    },
    toArray: function(){ return this.get() },
    size: function(){
      return this.length
    },
    remove: function(){
      return this.each(function(){
        if (this.parentNode != null)
          this.parentNode.removeChild(this)
      })
    },
    each: function(callback){
      emptyArray.every.call(this, function(el, idx){
        return callback.call(el, idx, el) !== false
      })
      return this
    },
    filter: function(selector){
      if (isFunction(selector)) return this.not(this.not(selector))
      return $(filter.call(this, function(element){
        return zepto.matches(element, selector)
      }))
    },
    add: function(selector,context){
      return $(uniq(this.concat($(selector,context))))
    },
    is: function(selector){
      return this.length > 0 && zepto.matches(this[0], selector)
    },
    not: function(selector){
      var nodes=[]
      if (isFunction(selector) && selector.call !== undefined)
        this.each(function(idx){
          if (!selector.call(this,idx)) nodes.push(this)
        })
      else {
        var excludes = typeof selector == 'string' ? this.filter(selector) :
          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)
        this.forEach(function(el){
          if (excludes.indexOf(el) < 0) nodes.push(el)
        })
      }
      return $(nodes)
    },
    has: function(selector){
      return this.filter(function(){
        return isObject(selector) ?
          $.contains(this, selector) :
          $(this).find(selector).size()
      })
    },
    eq: function(idx){
      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)
    },
    first: function(){
      var el = this[0]
      return el && !isObject(el) ? el : $(el)
    },
    last: function(){
      var el = this[this.length - 1]
      return el && !isObject(el) ? el : $(el)
    },
    find: function(selector){
      var result, $this = this
      if (typeof selector == 'object')
        result = $(selector).filter(function(){
          var node = this
          return emptyArray.some.call($this, function(parent){
            return $.contains(parent, node)
          })
        })
      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))
      else result = this.map(function(){ return zepto.qsa(this, selector) })
      return result
    },
    closest: function(selector, context){
      var node = this[0], collection = false
      if (typeof selector == 'object') collection = $(selector)
      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))
        node = node !== context && !isDocument(node) && node.parentNode
      return $(node)
    },
    parents: function(selector){
      var ancestors = [], nodes = this
      while (nodes.length > 0)
        nodes = $.map(nodes, function(node){
          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {
            ancestors.push(node)
            return node
          }
        })
      return filtered(ancestors, selector)
    },
    parent: function(selector){
      return filtered(uniq(this.pluck('parentNode')), selector)
    },
    children: function(selector){
      return filtered(this.map(function(){ return children(this) }), selector)
    },
    contents: function() {
      return this.map(function() { return slice.call(this.childNodes) })
    },
    siblings: function(selector){
      return filtered(this.map(function(i, el){
        return filter.call(children(el.parentNode), function(child){ return child!==el })
      }), selector)
    },
    empty: function(){
      return this.each(function(){ this.innerHTML = '' })
    },
    // `pluck` is borrowed from Prototype.js
    pluck: function(property){
      return $.map(this, function(el){ return el[property] })
    },
    show: function(){
      return this.each(function(){
        this.style.display == "none" && (this.style.display = '')
        if (getComputedStyle(this, '').getPropertyValue("display") == "none")
          this.style.display = defaultDisplay(this.nodeName)
      })
    },
    replaceWith: function(newContent){
      return this.before(newContent).remove()
    },
    wrap: function(structure){
      var func = isFunction(structure)
      if (this[0] && !func)
        var dom   = $(structure).get(0),
            clone = dom.parentNode || this.length > 1

      return this.each(function(index){
        $(this).wrapAll(
          func ? structure.call(this, index) :
            clone ? dom.cloneNode(true) : dom
        )
      })
    },
    wrapAll: function(structure){
      if (this[0]) {
        $(this[0]).before(structure = $(structure))
        var children
        // drill down to the inmost element
        while ((children = structure.children()).length) structure = children.first()
        $(structure).append(this)
      }
      return this
    },
    wrapInner: function(structure){
      var func = isFunction(structure)
      return this.each(function(index){
        var self = $(this), contents = self.contents(),
            dom  = func ? structure.call(this, index) : structure
        contents.length ? contents.wrapAll(dom) : self.append(dom)
      })
    },
    unwrap: function(){
      this.parent().each(function(){
        $(this).replaceWith($(this).children())
      })
      return this
    },
    clone: function(){
      return this.map(function(){ return this.cloneNode(true) })
    },
    hide: function(){
      return this.css("display", "none")
    },
    toggle: function(setting){
      return this.each(function(){
        var el = $(this)
        ;(setting === undefined ? el.css("display") == "none" : setting) ? el.show() : el.hide()
      })
    },
    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },
    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },
    html: function(html){
      return arguments.length === 0 ?
        (this.length > 0 ? this[0].innerHTML : null) :
        this.each(function(idx){
          var originHtml = this.innerHTML
          $(this).empty().append( funcArg(this, html, idx, originHtml) )
        })
    },
    text: function(text){
      return arguments.length === 0 ?
        (this.length > 0 ? this[0].textContent : null) :
        this.each(function(){ this.textContent = (text === undefined) ? '' : ''+text })
    },
    attr: function(name, value){
      var result
      return (typeof name == 'string' && value === undefined) ?
        (this.length == 0 || this[0].nodeType !== 1 ? undefined :
          (name == 'value' && this[0].nodeName == 'INPUT') ? this.val() :
          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result
        ) :
        this.each(function(idx){
          if (this.nodeType !== 1) return
          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])
          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))
        })
    },
    removeAttr: function(name){
      return this.each(function(){ this.nodeType === 1 && setAttribute(this, name) })
    },
    prop: function(name, value){
      name = propMap[name] || name
      return (value === undefined) ?
        (this[0] && this[0][name]) :
        this.each(function(idx){
          this[name] = funcArg(this, value, idx, this[name])
        })
    },
    data: function(name, value){
      var data = this.attr('data-' + name.replace(capitalRE, '-$1').toLowerCase(), value)
      return data !== null ? deserializeValue(data) : undefined
    },
    val: function(value){
      return arguments.length === 0 ?
        (this[0] && (this[0].multiple ?
           $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :
           this[0].value)
        ) :
        this.each(function(idx){
          this.value = funcArg(this, value, idx, this.value)
        })
    },
    offset: function(coordinates){
      if (coordinates) return this.each(function(index){
        var $this = $(this),
            coords = funcArg(this, coordinates, index, $this.offset()),
            parentOffset = $this.offsetParent().offset(),
            props = {
              top:  coords.top  - parentOffset.top,
              left: coords.left - parentOffset.left
            }

        if ($this.css('position') == 'static') props['position'] = 'relative'
        $this.css(props)
      })
      if (this.length==0) return null
      var obj = this[0].getBoundingClientRect()
      return {
        left: obj.left + window.pageXOffset,
        top: obj.top + window.pageYOffset,
        width: Math.round(obj.width),
        height: Math.round(obj.height)
      }
    },
    css: function(property, value){
      if (arguments.length < 2) {
        var element = this[0], computedStyle = getComputedStyle(element, '')
        if(!element) return
        if (typeof property == 'string')
          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)
        else if (isArray(property)) {
          var props = {}
          $.each(isArray(property) ? property: [property], function(_, prop){
            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))
          })
          return props
        }
      }

      var css = ''
      if (type(property) == 'string') {
        if (!value && value !== 0)
          this.each(function(){ this.style.removeProperty(dasherize(property)) })
        else
          css = dasherize(property) + ":" + maybeAddPx(property, value)
      } else {
        for (key in property)
          if (!property[key] && property[key] !== 0)
            this.each(function(){ this.style.removeProperty(dasherize(key)) })
          else
            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'
      }

      return this.each(function(){ this.style.cssText += ';' + css })
    },
    index: function(element){
      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])
    },
    hasClass: function(name){
      if (!name) return false
      return emptyArray.some.call(this, function(el){
        return this.test(className(el))
      }, classRE(name))
    },
    addClass: function(name){
      if (!name) return this
      return this.each(function(idx){
        classList = []
        var cls = className(this), newName = funcArg(this, name, idx, cls)
        newName.split(/\s+/g).forEach(function(klass){
          if (!$(this).hasClass(klass)) classList.push(klass)
        }, this)
        classList.length && className(this, cls + (cls ? " " : "") + classList.join(" "))
      })
    },
    removeClass: function(name){
      return this.each(function(idx){
        if (name === undefined) return className(this, '')
        classList = className(this)
        funcArg(this, name, idx, classList).split(/\s+/g).forEach(function(klass){
          classList = classList.replace(classRE(klass), " ")
        })
        className(this, classList.trim())
      })
    },
    toggleClass: function(name, when){
      if (!name) return this
      return this.each(function(idx){
        var $this = $(this), names = funcArg(this, name, idx, className(this))
        names.split(/\s+/g).forEach(function(klass){
          (when === undefined ? !$this.hasClass(klass) : when) ?
            $this.addClass(klass) : $this.removeClass(klass)
        })
      })
    },
    scrollTop: function(value){
      if (!this.length) return
      var hasScrollTop = 'scrollTop' in this[0]
      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset
      return this.each(hasScrollTop ?
        function(){ this.scrollTop = value } :
        function(){ this.scrollTo(this.scrollX, value) })
    },
    scrollLeft: function(value){
      if (!this.length) return
      var hasScrollLeft = 'scrollLeft' in this[0]
      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset
      return this.each(hasScrollLeft ?
        function(){ this.scrollLeft = value } :
        function(){ this.scrollTo(value, this.scrollY) })
    },
    position: function() {
      if (!this.length) return

      var elem = this[0],
        // Get *real* offsetParent
        offsetParent = this.offsetParent(),
        // Get correct offsets
        offset       = this.offset(),
        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()

      // Subtract element margins
      // note: when an element has margin: auto the offsetLeft and marginLeft
      // are the same in Safari causing offset.left to incorrectly be 0
      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0
      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0

      // Add offsetParent borders
      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0
      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0

      // Subtract the two offsets
      return {
        top:  offset.top  - parentOffset.top,
        left: offset.left - parentOffset.left
      }
    },
    offsetParent: function() {
      return this.map(function(){
        var parent = this.offsetParent || document.body
        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css("position") == "static")
          parent = parent.offsetParent
        return parent
      })
    }
  }

  // for now
  $.fn.detach = $.fn.remove

  // Generate the `width` and `height` functions
  ;['width', 'height'].forEach(function(dimension){
    var dimensionProperty =
      dimension.replace(/./, function(m){ return m[0].toUpperCase() })

    $.fn[dimension] = function(value){
      var offset, el = this[0]
      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :
        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :
        (offset = this.offset()) && offset[dimension]
      else return this.each(function(idx){
        el = $(this)
        el.css(dimension, funcArg(this, value, idx, el[dimension]()))
      })
    }
  })

  function traverseNode(node, fun) {
    fun(node)
    for (var key in node.childNodes) traverseNode(node.childNodes[key], fun)
  }

  // Generate the `after`, `prepend`, `before`, `append`,
  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.
  adjacencyOperators.forEach(function(operator, operatorIndex) {
    var inside = operatorIndex % 2 //=> prepend, append

    $.fn[operator] = function(){
      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings
      var argType, nodes = $.map(arguments, function(arg) {
            argType = type(arg)
            return argType == "object" || argType == "array" || arg == null ?
              arg : zepto.fragment(arg)
          }),
          parent, copyByClone = this.length > 1
      if (nodes.length < 1) return this

      return this.each(function(_, target){
        parent = inside ? target : target.parentNode

        // convert all methods to a "before" operation
        target = operatorIndex == 0 ? target.nextSibling :
                 operatorIndex == 1 ? target.firstChild :
                 operatorIndex == 2 ? target :
                 null

        nodes.forEach(function(node){
          if (copyByClone) node = node.cloneNode(true)
          else if (!parent) return $(node).remove()

          traverseNode(parent.insertBefore(node, target), function(el){
            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&
               (!el.type || el.type === 'text/javascript') && !el.src)
              window['eval'].call(window, el.innerHTML)
          })
        })
      })
    }

    // after    => insertAfter
    // prepend  => prependTo
    // before   => insertBefore
    // append   => appendTo
    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){
      $(html)[operator](this)
      return this
    }
  })

  zepto.Z.prototype = $.fn

  // Export internal API functions in the `$.zepto` namespace
  zepto.uniq = uniq
  zepto.deserializeValue = deserializeValue
  $.zepto = zepto

  return $
})()

exports.$ = exports.Zepto = Zepto;

;(function($){
  var _zid = 1, undefined,
      slice = Array.prototype.slice,
      isFunction = $.isFunction,
      isString = function(obj){ return typeof obj == 'string' },
      handlers = {},
      specialEvents={},
      focusinSupported = 'onfocusin' in window,
      focus = { focus: 'focusin', blur: 'focusout' },
      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }

  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'

  function zid(element) {
    return element._zid || (element._zid = _zid++)
  }
  function findHandlers(element, event, fn, selector) {
    event = parse(event)
    if (event.ns) var matcher = matcherFor(event.ns)
    return (handlers[zid(element)] || []).filter(function(handler) {
      return handler
        && (!event.e  || handler.e == event.e)
        && (!event.ns || matcher.test(handler.ns))
        && (!fn       || zid(handler.fn) === zid(fn))
        && (!selector || handler.sel == selector)
    })
  }
  function parse(event) {
    var parts = ('' + event).split('.')
    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}
  }
  function matcherFor(ns) {
    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')
  }

  function eventCapture(handler, captureSetting) {
    return handler.del &&
      (!focusinSupported && (handler.e in focus)) ||
      !!captureSetting
  }

  function realEvent(type) {
    return hover[type] || (focusinSupported && focus[type]) || type
  }

  function add(element, events, fn, data, selector, delegator, capture){
    var id = zid(element), set = (handlers[id] || (handlers[id] = []))
    events.split(/\s/).forEach(function(event){
      if (event == 'ready') return $(document).ready(fn)
      var handler   = parse(event)
      handler.fn    = fn
      handler.sel   = selector
      // emulate mouseenter, mouseleave
      if (handler.e in hover) fn = function(e){
        var related = e.relatedTarget
        if (!related || (related !== this && !$.contains(this, related)))
          return handler.fn.apply(this, arguments)
      }
      handler.del   = delegator
      var callback  = delegator || fn
      handler.proxy = function(e){
        e = compatible(e)
        if (e.isImmediatePropagationStopped()) return
        e.data = data
        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))
        if (result === false) e.preventDefault(), e.stopPropagation()
        return result
      }
      handler.i = set.length
      set.push(handler)
      if ('addEventListener' in element)
        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))
    })
  }
  function remove(element, events, fn, selector, capture){
    var id = zid(element)
    ;(events || '').split(/\s/).forEach(function(event){
      findHandlers(element, event, fn, selector).forEach(function(handler){
        delete handlers[id][handler.i]
      if ('removeEventListener' in element)
        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))
      })
    })
  }

  $.event = { add: add, remove: remove }

  $.proxy = function(fn, context) {
    if (isFunction(fn)) {
      var proxyFn = function(){ return fn.apply(context, arguments) }
      proxyFn._zid = zid(fn)
      return proxyFn
    } else if (isString(context)) {
      return $.proxy(fn[context], fn)
    } else {
      throw new TypeError("expected function")
    }
  }

  $.fn.bind = function(event, data, callback){
    return this.on(event, data, callback)
  }
  $.fn.unbind = function(event, callback){
    return this.off(event, callback)
  }
  $.fn.one = function(event, selector, data, callback){
    return this.on(event, selector, data, callback, 1)
  }

  var returnTrue = function(){return true},
      returnFalse = function(){return false},
      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,
      eventMethods = {
        preventDefault: 'isDefaultPrevented',
        stopImmediatePropagation: 'isImmediatePropagationStopped',
        stopPropagation: 'isPropagationStopped'
      }

  function compatible(event, source) {
    if (source || !event.isDefaultPrevented) {
      source || (source = event)

      $.each(eventMethods, function(name, predicate) {
        var sourceMethod = source[name]
        event[name] = function(){
          this[predicate] = returnTrue
          return sourceMethod && sourceMethod.apply(source, arguments)
        }
        event[predicate] = returnFalse
      })

      if (source.defaultPrevented !== undefined ? source.defaultPrevented :
          'returnValue' in source ? source.returnValue === false :
          source.getPreventDefault && source.getPreventDefault())
        event.isDefaultPrevented = returnTrue
    }
    return event
  }

  function createProxy(event) {
    var key, proxy = { originalEvent: event }
    for (key in event)
      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]

    return compatible(proxy, event)
  }

  $.fn.delegate = function(selector, event, callback){
    return this.on(event, selector, callback)
  }
  $.fn.undelegate = function(selector, event, callback){
    return this.off(event, selector, callback)
  }

  $.fn.live = function(event, callback){
    $(document.body).delegate(this.selector, event, callback)
    return this
  }
  $.fn.die = function(event, callback){
    $(document.body).undelegate(this.selector, event, callback)
    return this
  }

  $.fn.on = function(event, selector, data, callback, one){
    var autoRemove, delegator, $this = this
    if (event && !isString(event)) {
      $.each(event, function(type, fn){
        $this.on(type, selector, data, fn, one)
      })
      return $this
    }

    if (!isString(selector) && !isFunction(callback) && callback !== false)
      callback = data, data = selector, selector = undefined
    if (isFunction(data) || data === false)
      callback = data, data = undefined

    if (callback === false) callback = returnFalse

    return $this.each(function(_, element){
      if (one) autoRemove = function(e){
        remove(element, e.type, callback)
        return callback.apply(this, arguments)
      }

      if (selector) delegator = function(e){
        var evt, match = $(e.target).closest(selector, element).get(0)
        if (match && match !== element) {
          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})
          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))
        }
      }

      add(element, event, callback, data, selector, delegator || autoRemove)
    })
  }
  $.fn.off = function(event, selector, callback){
    var $this = this
    if (event && !isString(event)) {
      $.each(event, function(type, fn){
        $this.off(type, selector, fn)
      })
      return $this
    }

    if (!isString(selector) && !isFunction(callback) && callback !== false)
      callback = selector, selector = undefined

    if (callback === false) callback = returnFalse

    return $this.each(function(){
      remove(this, event, callback, selector)
    })
  }

  $.fn.trigger = function(event, args){
    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)
    event._args = args
    return this.each(function(){
      // items in the collection might not be DOM elements
      if('dispatchEvent' in this) this.dispatchEvent(event)
      else $(this).triggerHandler(event, args)
    })
  }

  // triggers event handlers on current element just as if an event occurred,
  // doesn't trigger an actual event, doesn't bubble
  $.fn.triggerHandler = function(event, args){
    var e, result
    this.each(function(i, element){
      e = createProxy(isString(event) ? $.Event(event) : event)
      e._args = args
      e.target = element
      $.each(findHandlers(element, event.type || event), function(i, handler){
        result = handler.proxy(e)
        if (e.isImmediatePropagationStopped()) return false
      })
    })
    return result
  }

  // shortcut methods for `.bind(event, fn)` for each event type
  ;('focusin focusout load resize scroll unload click dblclick '+
  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+
  'change select keydown keypress keyup error').split(' ').forEach(function(event) {
    $.fn[event] = function(callback) {
      return callback ?
        this.bind(event, callback) :
        this.trigger(event)
    }
  })

  ;['focus', 'blur'].forEach(function(name) {
    $.fn[name] = function(callback) {
      if (callback) this.bind(name, callback)
      else this.each(function(){
        try { this[name]() }
        catch(e) {}
      })
      return this
    }
  })

  $.Event = function(type, props) {
    if (!isString(type)) props = type, type = props.type
    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true
    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])
    event.initEvent(type, bubbles, true)
    return compatible(event)
  }

})(Zepto)

;(function($){
  var jsonpID = 0,
      document = window.document,
      key,
      name,
      rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
      scriptTypeRE = /^(?:text|application)\/javascript/i,
      xmlTypeRE = /^(?:text|application)\/xml/i,
      jsonType = 'application/json',
      htmlType = 'text/html',
      blankRE = /^\s*$/

  // trigger a custom event and return false if it was cancelled
  function triggerAndReturn(context, eventName, data) {
    var event = $.Event(eventName)
    $(context).trigger(event, data)
    return !event.isDefaultPrevented()
  }

  // trigger an Ajax "global" event
  function triggerGlobal(settings, context, eventName, data) {
    if (settings.global) return triggerAndReturn(context || document, eventName, data)
  }

  // Number of active Ajax requests
  $.active = 0

  function ajaxStart(settings) {
    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')
  }
  function ajaxStop(settings) {
    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')
  }

  // triggers an extra global event "ajaxBeforeSend" that's like "ajaxSend" but cancelable
  function ajaxBeforeSend(xhr, settings) {
    var context = settings.context
    if (settings.beforeSend.call(context, xhr, settings) === false ||
        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)
      return false

    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])
  }
  function ajaxSuccess(data, xhr, settings, deferred) {
    var context = settings.context, status = 'success'
    settings.success.call(context, data, status, xhr)
    if (deferred) deferred.resolveWith(context, [data, status, xhr])
    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])
    ajaxComplete(status, xhr, settings)
  }
  // type: "timeout", "error", "abort", "parsererror"
  function ajaxError(error, type, xhr, settings, deferred) {
    var context = settings.context
    settings.error.call(context, xhr, type, error)
    if (deferred) deferred.rejectWith(context, [xhr, type, error])
    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])
    ajaxComplete(type, xhr, settings)
  }
  // status: "success", "notmodified", "error", "timeout", "abort", "parsererror"
  function ajaxComplete(status, xhr, settings) {
    var context = settings.context
    settings.complete.call(context, xhr, status)
    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])
    ajaxStop(settings)
  }

  // Empty function, used as default callback
  function empty() {}

  $.ajaxJSONP = function(options, deferred){
    if (!('type' in options)) return $.ajax(options)

    var _callbackName = options.jsonpCallback,
      callbackName = ($.isFunction(_callbackName) ?
        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),
      script = document.createElement('script'),
      originalCallback = window[callbackName],
      responseData,
      abort = function(errorType) {
        $(script).triggerHandler('error', errorType || 'abort')
      },
      xhr = { abort: abort }, abortTimeout

    if (deferred) deferred.promise(xhr)

    $(script).on('load error', function(e, errorType){
      clearTimeout(abortTimeout)
      $(script).off().remove()

      if (e.type == 'error' || !responseData) {
        ajaxError(null, errorType || 'error', xhr, options, deferred)
      } else {
        ajaxSuccess(responseData[0], xhr, options, deferred)
      }

      window[callbackName] = originalCallback
      if (responseData && $.isFunction(originalCallback))
        originalCallback(responseData[0])

      originalCallback = responseData = undefined
    })

    if (ajaxBeforeSend(xhr, options) === false) {
      abort('abort')
      return xhr
    }

    window[callbackName] = function(){
      responseData = arguments
    }

    script.src = options.url.replace(/\?(.+)=\?/, '?$1=' + callbackName)
    document.head.appendChild(script)

    if (options.timeout > 0) abortTimeout = setTimeout(function(){
      abort('timeout')
    }, options.timeout)

    return xhr
  }

  $.ajaxSettings = {
    // Default type of request
    type: 'GET',
    // Callback that is executed before request
    beforeSend: empty,
    // Callback that is executed if the request succeeds
    success: empty,
    // Callback that is executed the the server drops error
    error: empty,
    // Callback that is executed on request complete (both: error and success)
    complete: empty,
    // The context for the callbacks
    context: null,
    // Whether to trigger "global" Ajax events
    global: true,
    // Transport
    xhr: function () {
      return new window.XMLHttpRequest()
    },
    // MIME types mapping
    // IIS returns Javascript as "application/x-javascript"
    accepts: {
      script: 'text/javascript, application/javascript, application/x-javascript',
      json:   jsonType,
      xml:    'application/xml, text/xml',
      html:   htmlType,
      text:   'text/plain'
    },
    // Whether the request is to another domain
    crossDomain: false,
    // Default timeout
    timeout: 0,
    // Whether data should be serialized to string
    processData: true,
    // Whether the browser should be allowed to cache GET responses
    cache: true
  }

  function mimeToDataType(mime) {
    if (mime) mime = mime.split(';', 2)[0]
    return mime && ( mime == htmlType ? 'html' :
      mime == jsonType ? 'json' :
      scriptTypeRE.test(mime) ? 'script' :
      xmlTypeRE.test(mime) && 'xml' ) || 'text'
  }

  function appendQuery(url, query) {
    if (query == '') return url
    return (url + '&' + query).replace(/[&?]{1,2}/, '?')
  }

  // serialize payload and append it to the URL for GET requests
  function serializeData(options) {
    if (options.processData && options.data && $.type(options.data) != "string")
      options.data = $.param(options.data, options.traditional)
    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))
      options.url = appendQuery(options.url, options.data), options.data = undefined
  }

  $.ajax = function(options){
    var settings = $.extend({}, options || {}),
        deferred = $.Deferred && $.Deferred()
    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]

    ajaxStart(settings)

    if (!settings.crossDomain) settings.crossDomain = /^([\w-]+:)?\/\/([^\/]+)/.test(settings.url) &&
      RegExp.$2 != window.location.host

    if (!settings.url) settings.url = window.location.toString()
    serializeData(settings)
    if (settings.cache === false) settings.url = appendQuery(settings.url, '_=' + Date.now())

    var dataType = settings.dataType, hasPlaceholder = /\?.+=\?/.test(settings.url)
    if (dataType == 'jsonp' || hasPlaceholder) {
      if (!hasPlaceholder)
        settings.url = appendQuery(settings.url,
          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')
      return $.ajaxJSONP(settings, deferred)
    }

    var mime = settings.accepts[dataType],
        headers = { },
        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },
        protocol = /^([\w-]+:)\/\//.test(settings.url) ? RegExp.$1 : window.location.protocol,
        xhr = settings.xhr(),
        nativeSetHeader = xhr.setRequestHeader,
        abortTimeout

    if (deferred) deferred.promise(xhr)

    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')
    setHeader('Accept', mime || '*/*')
    if (mime = settings.mimeType || mime) {
      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]
      xhr.overrideMimeType && xhr.overrideMimeType(mime)
    }
    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))
      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')

    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])
    xhr.setRequestHeader = setHeader

    xhr.onreadystatechange = function(){
      if (xhr.readyState == 4) {
        xhr.onreadystatechange = empty
        clearTimeout(abortTimeout)
        var result, error = false
        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {
          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))
          result = xhr.responseText

          try {
            // http://perfectionkills.com/global-eval-what-are-the-options/
            if (dataType == 'script')    (1,eval)(result)
            else if (dataType == 'xml')  result = xhr.responseXML
            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)
          } catch (e) { error = e }

          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)
          else ajaxSuccess(result, xhr, settings, deferred)
        } else {
          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)
        }
      }
    }

    if (ajaxBeforeSend(xhr, settings) === false) {
      xhr.abort()
      ajaxError(null, 'abort', xhr, settings, deferred)
      return xhr
    }

    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]

    var async = 'async' in settings ? settings.async : true
    xhr.open(settings.type, settings.url, async, settings.username, settings.password)

    for (name in headers) nativeSetHeader.apply(xhr, headers[name])

    if (settings.timeout > 0) abortTimeout = setTimeout(function(){
        xhr.onreadystatechange = empty
        xhr.abort()
        ajaxError(null, 'timeout', xhr, settings, deferred)
      }, settings.timeout)

    // avoid sending empty string (#319)
    xhr.send(settings.data ? settings.data : null)
    return xhr
  }

  // handle optional data/success arguments
  function parseArguments(url, data, success, dataType) {
    if ($.isFunction(data)) dataType = success, success = data, data = undefined
    if (!$.isFunction(success)) dataType = success, success = undefined
    return {
      url: url
    , data: data
    , success: success
    , dataType: dataType
    }
  }

  $.get = function(/* url, data, success, dataType */){
    return $.ajax(parseArguments.apply(null, arguments))
  }

  $.post = function(/* url, data, success, dataType */){
    var options = parseArguments.apply(null, arguments)
    options.type = 'POST'
    return $.ajax(options)
  }

  $.getJSON = function(/* url, data, success */){
    var options = parseArguments.apply(null, arguments)
    options.dataType = 'json'
    return $.ajax(options)
  }

  $.fn.load = function(url, data, success){
    if (!this.length) return this
    var self = this, parts = url.split(/\s/), selector,
        options = parseArguments(url, data, success),
        callback = options.success
    if (parts.length > 1) options.url = parts[0], selector = parts[1]
    options.success = function(response){
      self.html(selector ?
        $('<div>').html(response.replace(rscript, "")).find(selector)
        : response)
      callback && callback.apply(self, arguments)
    }
    $.ajax(options)
    return this
  }

  var escape = encodeURIComponent

  function serialize(params, obj, traditional, scope){
    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)
    $.each(obj, function(key, value) {
      type = $.type(value)
      if (scope) key = traditional ? scope :
        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'
      // handle data in serializeArray() format
      if (!scope && array) params.add(value.name, value.value)
      // recurse into nested objects
      else if (type == "array" || (!traditional && type == "object"))
        serialize(params, value, traditional, key)
      else params.add(key, value)
    })
  }

  $.param = function(obj, traditional){
    var params = []
    params.add = function(k, v){ this.push(escape(k) + '=' + escape(v)) }
    serialize(params, obj, traditional)
    return params.join('&').replace(/%20/g, '+')
  }
})(Zepto)

;(function($){
  $.fn.serializeArray = function() {
    var result = [], el
    $([].slice.call(this.get(0).elements)).each(function(){
      el = $(this)
      var type = el.attr('type')
      if (this.nodeName.toLowerCase() != 'fieldset' &&
        !this.disabled && type != 'submit' && type != 'reset' && type != 'button' &&
        ((type != 'radio' && type != 'checkbox') || this.checked))
        result.push({
          name: el.attr('name'),
          value: el.val()
        })
    })
    return result
  }

  $.fn.serialize = function(){
    var result = []
    this.serializeArray().forEach(function(elm){
      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))
    })
    return result.join('&')
  }

  $.fn.submit = function(callback) {
    if (callback) this.bind('submit', callback)
    else if (this.length) {
      var event = $.Event('submit')
      this.eq(0).trigger(event)
      if (!event.isDefaultPrevented()) this.get(0).submit()
    }
    return this
  }

})(Zepto)

;(function($){
  // __proto__ doesn't exist on IE<11, so redefine
  // the Z function to use object extension instead
  if (!('__proto__' in {})) {
    $.extend($.zepto, {
      Z: function(dom, selector){
        dom = dom || []
        $.extend(dom, $.fn)
        dom.selector = selector || ''
        dom.__Z = true
        return dom
      },
      // this is a kludge but works
      isZ: function(object){
        return $.type(object) === 'array' && '__Z' in object
      }
    })
  }

  // getComputedStyle shouldn't freak out when called
  // without a valid element as argument
  try {
    getComputedStyle(undefined)
  } catch(e) {
    var nativeGetComputedStyle = getComputedStyle;
    window.getComputedStyle = function(element){
      try {
        return nativeGetComputedStyle(element)
      } catch(e) {
        return null
      }
    }
  }
})(Zepto)
},{}]},{},["./app/scripts/main.js"])
//# sourceMappingURL=data:application/json;base64,
